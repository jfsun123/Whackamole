ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	i2cReadBuffer
  20              		.data
  21              		.align	2
  22              		.type	i2cReadBuffer, %object
  23              		.size	i2cReadBuffer, 3
  24              	i2cReadBuffer:
  25 0000 01       		.byte	1
  26 0001 FF       		.byte	-1
  27 0002 17       		.byte	23
  28              		.comm	i2cWriteBuffer,3,4
  29              		.section	.text.main,"ax",%progbits
  30              		.align	2
  31              		.global	main
  32              		.code	16
  33              		.thumb_func
  34              		.type	main, %function
  35              	main:
  36              	.LFB32:
  37              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** SLAVE
   3:main.c        **** *******************************************************************************/
   4:main.c        **** 
   5:main.c        **** #include <main.h>
   6:main.c        **** 
   7:main.c        **** /* I2C slave read and write buffers */
   8:main.c        **** uint8 i2cReadBuffer [BUFFER_SIZE] = {PACKET_SOP, STS_CMD_FAIL, PACKET_EOP};
   9:main.c        **** uint8 i2cWriteBuffer[BUFFER_SIZE];
  10:main.c        **** void SetBlockColor(int block_number, uint32 color);
  11:main.c        **** 
  12:main.c        **** 
  13:main.c        **** /*******************************************************************************
  14:main.c        **** * Function Name: main
  15:main.c        **** ********************************************************************************
  16:main.c        **** * Summary:
  17:main.c        **** *  Main function performs following actions:
  18:main.c        **** *   1. Turns off status RGB LED
  19:main.c        **** *   2. Sets up I2C slave write and read buffers.
  20:main.c        **** *   3. Starts I2C slave (SCB mode) component.
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 2


  21:main.c        **** *   4. Enables global interrupts.
  22:main.c        **** *   5. Waits for command from the I2C master to control the RGB LED.
  23:main.c        **** *
  24:main.c        **** * Parameters:
  25:main.c        **** *  None
  26:main.c        **** *
  27:main.c        **** * Return:
  28:main.c        **** *  None
  29:main.c        **** *
  30:main.c        **** *******************************************************************************/
  31:main.c        **** int main()
  32:main.c        **** {
  38              		.loc 1 32 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 8
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 90B5     		push	{r4, r7, lr}
  43              		.cfi_def_cfa_offset 12
  44              		.cfi_offset 4, -12
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 83B0     		sub	sp, sp, #12
  48              		.cfi_def_cfa_offset 24
  49 0004 00AF     		add	r7, sp, #0
  50              		.cfi_def_cfa_register 7
  33:main.c        ****     //Start lights and initialize the variables for flex sensors
  34:main.c        ****     StripLights_Start();
  51              		.loc 1 34 0
  52 0006 FFF7FEFF 		bl	StripLights_Start
  35:main.c        ****     StripLights_Dim(0);
  53              		.loc 1 35 0
  54 000a 0020     		movs	r0, #0
  55 000c FFF7FEFF 		bl	StripLights_Dim
  36:main.c        ****     uint8 buttonStatus = 0;
  56              		.loc 1 36 0
  57 0010 FB1D     		adds	r3, r7, #7
  58 0012 0022     		movs	r2, #0
  59 0014 1A70     		strb	r2, [r3]
  37:main.c        ****     
  38:main.c        ****     uint8 status = STS_CMD_FAIL;
  60              		.loc 1 38 0
  61 0016 BB1D     		adds	r3, r7, #6
  62 0018 FF22     		movs	r2, #255
  63 001a 1A70     		strb	r2, [r3]
  39:main.c        ****                     LED_RED_Write  (LED_OFF);
  64              		.loc 1 39 0
  65 001c 0120     		movs	r0, #1
  66 001e FFF7FEFF 		bl	LED_RED_Write
  40:main.c        ****                     LED_GREEN_Write(LED_OFF);
  67              		.loc 1 40 0
  68 0022 0120     		movs	r0, #1
  69 0024 FFF7FEFF 		bl	LED_GREEN_Write
  41:main.c        ****                     LED_BLUE_Write (LED_OFF);
  70              		.loc 1 41 0
  71 0028 0120     		movs	r0, #1
  72 002a FFF7FEFF 		bl	LED_BLUE_Write
  42:main.c        **** 
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 3


  43:main.c        **** 
  44:main.c        ****     /* Start I2C slave (SCB mode) */
  45:main.c        ****     I2CS_I2CSlaveInitReadBuf (i2cReadBuffer,  BUFFER_SIZE);
  73              		.loc 1 45 0
  74 002e 214B     		ldr	r3, .L6
  75 0030 0321     		movs	r1, #3
  76 0032 1800     		movs	r0, r3
  77 0034 FFF7FEFF 		bl	I2CS_I2CSlaveInitReadBuf
  46:main.c        ****     I2CS_I2CSlaveInitWriteBuf(i2cWriteBuffer, BUFFER_SIZE);
  78              		.loc 1 46 0
  79 0038 1F4B     		ldr	r3, .L6+4
  80 003a 0321     		movs	r1, #3
  81 003c 1800     		movs	r0, r3
  82 003e FFF7FEFF 		bl	I2CS_I2CSlaveInitWriteBuf
  47:main.c        ****     I2CS_Start();
  83              		.loc 1 47 0
  84 0042 FFF7FEFF 		bl	I2CS_Start
  48:main.c        **** 
  49:main.c        ****     CyGlobalIntEnable;
  85              		.loc 1 49 0
  86              		.syntax divided
  87              	@ 49 "main.c" 1
  88 0046 62B6     		CPSIE   i
  89              	@ 0 "" 2
  90              		.thumb
  91              		.syntax unified
  92              	.L5:
  50:main.c        **** 
  51:main.c        ****     /***************************************************************************
  52:main.c        ****     * Main polling loop
  53:main.c        ****     ***************************************************************************/
  54:main.c        ****     for (;;)
  55:main.c        ****     {
  56:main.c        ****         buttonStatus = Button_Read();
  93              		.loc 1 56 0
  94 0048 FC1D     		adds	r4, r7, #7
  95 004a FFF7FEFF 		bl	Button_Read
  96 004e 0300     		movs	r3, r0
  97 0050 2370     		strb	r3, [r4]
  57:main.c        ****         
  58:main.c        ****         /* Write complete: parse command packet */
  59:main.c        ****         if (0u != (I2CS_I2CSlaveStatus() & I2CS_I2C_SSTAT_WR_CMPLT))
  98              		.loc 1 59 0
  99 0052 FFF7FEFF 		bl	I2CS_I2CSlaveStatus
 100 0056 0200     		movs	r2, r0
 101 0058 1023     		movs	r3, #16
 102 005a 1340     		ands	r3, r2
 103 005c 1FD0     		beq	.L2
  60:main.c        ****         {
  61:main.c        ****             /* Check packet length */
  62:main.c        ****             if (PACKET_SIZE == I2CS_I2CSlaveGetWriteBufSize())
 104              		.loc 1 62 0
 105 005e FFF7FEFF 		bl	I2CS_I2CSlaveGetWriteBufSize
 106 0062 0300     		movs	r3, r0
 107 0064 032B     		cmp	r3, #3
 108 0066 0FD1     		bne	.L3
  63:main.c        ****             {
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 4


  64:main.c        ****                 /* Check start and end of packet markers */
  65:main.c        ****                 if ((i2cWriteBuffer[PACKET_SOP_POS] == PACKET_SOP) &&
 109              		.loc 1 65 0
 110 0068 134B     		ldr	r3, .L6+4
 111 006a 1B78     		ldrb	r3, [r3]
 112 006c 012B     		cmp	r3, #1
 113 006e 0BD1     		bne	.L3
  66:main.c        ****                     (i2cWriteBuffer[PACKET_EOP_POS] == PACKET_EOP))
 114              		.loc 1 66 0 discriminator 1
 115 0070 114B     		ldr	r3, .L6+4
 116 0072 9B78     		ldrb	r3, [r3, #2]
  65:main.c        ****                     (i2cWriteBuffer[PACKET_EOP_POS] == PACKET_EOP))
 117              		.loc 1 65 0 discriminator 1
 118 0074 172B     		cmp	r3, #23
 119 0076 07D1     		bne	.L3
  67:main.c        ****                 {
  68:main.c        ****                     status = ExecuteCommand(i2cWriteBuffer[PACKET_CMD_POS]);
 120              		.loc 1 68 0
 121 0078 0F4B     		ldr	r3, .L6+4
 122 007a 5B78     		ldrb	r3, [r3, #1]
 123 007c BC1D     		adds	r4, r7, #6
 124 007e 1800     		movs	r0, r3
 125 0080 FFF7FEFF 		bl	ExecuteCommand
 126 0084 0300     		movs	r3, r0
 127 0086 2370     		strb	r3, [r4]
 128              	.L3:
  69:main.c        ****                 }
  70:main.c        ****             }
  71:main.c        **** 
  72:main.c        ****             /* Clear slave write buffer and status */
  73:main.c        ****             I2CS_I2CSlaveClearWriteBuf();
 129              		.loc 1 73 0
 130 0088 FFF7FEFF 		bl	I2CS_I2CSlaveClearWriteBuf
  74:main.c        ****             (void) I2CS_I2CSlaveClearWriteStatus();
 131              		.loc 1 74 0
 132 008c FFF7FEFF 		bl	I2CS_I2CSlaveClearWriteStatus
  75:main.c        **** 
  76:main.c        ****             /* Update read buffer */
  77:main.c        ****             i2cReadBuffer[PACKET_STS_POS] = buttonStatus;  //used to be status
 133              		.loc 1 77 0
 134 0090 084B     		ldr	r3, .L6
 135 0092 FA1D     		adds	r2, r7, #7
 136 0094 1278     		ldrb	r2, [r2]
 137 0096 5A70     		strb	r2, [r3, #1]
  78:main.c        ****             status = STS_CMD_FAIL;
 138              		.loc 1 78 0
 139 0098 BB1D     		adds	r3, r7, #6
 140 009a FF22     		movs	r2, #255
 141 009c 1A70     		strb	r2, [r3]
 142              	.L2:
  79:main.c        ****         }
  80:main.c        **** 
  81:main.c        ****         /* Read complete: expose buffer to master */
  82:main.c        ****         if (0u != (I2CS_I2CSlaveStatus() & I2CS_I2C_SSTAT_RD_CMPLT))
 143              		.loc 1 82 0
 144 009e FFF7FEFF 		bl	I2CS_I2CSlaveStatus
 145 00a2 0200     		movs	r2, r0
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 5


 146 00a4 0123     		movs	r3, #1
 147 00a6 1340     		ands	r3, r2
 148 00a8 CED0     		beq	.L5
  83:main.c        ****         {
  84:main.c        ****             /* Clear slave read buffer and status */
  85:main.c        ****             I2CS_I2CSlaveClearReadBuf();
 149              		.loc 1 85 0
 150 00aa FFF7FEFF 		bl	I2CS_I2CSlaveClearReadBuf
  86:main.c        ****             (void) I2CS_I2CSlaveClearReadStatus();
 151              		.loc 1 86 0
 152 00ae FFF7FEFF 		bl	I2CS_I2CSlaveClearReadStatus
  87:main.c        ****         }
  88:main.c        ****     }
 153              		.loc 1 88 0
 154 00b2 C9E7     		b	.L5
 155              	.L7:
 156              		.align	2
 157              	.L6:
 158 00b4 00000000 		.word	i2cReadBuffer
 159 00b8 00000000 		.word	i2cWriteBuffer
 160              		.cfi_endproc
 161              	.LFE32:
 162              		.size	main, .-main
 163              		.section	.text.ExecuteCommand,"ax",%progbits
 164              		.align	2
 165              		.global	ExecuteCommand
 166              		.code	16
 167              		.thumb_func
 168              		.type	ExecuteCommand, %function
 169              	ExecuteCommand:
 170              	.LFB33:
  89:main.c        **** }
  90:main.c        **** 
  91:main.c        **** 
  92:main.c        **** /*******************************************************************************
  93:main.c        **** * Function Name: ExecuteCommand
  94:main.c        **** ********************************************************************************
  95:main.c        **** * Summary:
  96:main.c        **** *  Executes received command to control the LED color and returns status.
  97:main.c        **** *  If the command is unknown, the LED color is not changed.
  98:main.c        **** *
  99:main.c        **** * Parameters:
 100:main.c        **** *  cmd: command to execute. Available commands:
 101:main.c        **** *   - CMD_SET_RED:   set red color of the LED.
 102:main.c        **** *   - CMD_SET_GREEN: set green color of the LED.
 103:main.c        **** *   - CMD_SET_BLUE:  set blue color of the LED.
 104:main.c        **** *   - CMD_SET_OFF:   turn off the LED.
 105:main.c        **** *
 106:main.c        **** * Return:
 107:main.c        **** *  Returns status of command execution. There are two statuses
 108:main.c        **** *  - STS_CMD_DONE: command is executed successfully.
 109:main.c        **** *  - STS_CMD_FAIL: unknown command
 110:main.c        **** *
 111:main.c        **** *******************************************************************************/
 112:main.c        **** uint8 ExecuteCommand(uint32 cmd)
 113:main.c        **** {
 171              		.loc 1 113 0
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 6


 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 16
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175 0000 80B5     		push	{r7, lr}
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 7, -8
 178              		.cfi_offset 14, -4
 179 0002 84B0     		sub	sp, sp, #16
 180              		.cfi_def_cfa_offset 24
 181 0004 00AF     		add	r7, sp, #0
 182              		.cfi_def_cfa_register 7
 183 0006 7860     		str	r0, [r7, #4]
 114:main.c        ****     uint8 status;
 115:main.c        **** 
 116:main.c        ****     status = STS_CMD_DONE;
 184              		.loc 1 116 0
 185 0008 0F23     		movs	r3, #15
 186 000a FB18     		adds	r3, r7, r3
 187 000c 0022     		movs	r2, #0
 188 000e 1A70     		strb	r2, [r3]
 117:main.c        **** 
 118:main.c        ****     /* Execute received command */
 119:main.c        ****     switch (cmd)
 189              		.loc 1 119 0
 190 0010 7B68     		ldr	r3, [r7, #4]
 191 0012 072B     		cmp	r3, #7
 192 0014 00D9     		bls	.LCB119
 193 0016 91E0     		b	.L9	@long jump
 194              	.LCB119:
 195 0018 7B68     		ldr	r3, [r7, #4]
 196 001a 9A00     		lsls	r2, r3, #2
 197 001c 4D4B     		ldr	r3, .L21
 198 001e D318     		adds	r3, r2, r3
 199 0020 1B68     		ldr	r3, [r3]
 200 0022 9F46     		mov	pc, r3
 201              		.section	.rodata
 202              		.align	2
 203              	.L11:
 204 0000 20010000 		.word	.L10
 205 0004 24000000 		.word	.L12
 206 0008 48000000 		.word	.L13
 207 000c 6C000000 		.word	.L14
 208 0010 90000000 		.word	.L15
 209 0014 B4000000 		.word	.L16
 210 0018 D8000000 		.word	.L17
 211 001c FC000000 		.word	.L18
 212              		.section	.text.ExecuteCommand
 213              	.L12:
 120:main.c        ****     {
 121:main.c        ****         case CMD_SET_RED:
 122:main.c        ****             LED_RED_Write  (LED_ON);
 214              		.loc 1 122 0
 215 0024 0020     		movs	r0, #0
 216 0026 FFF7FEFF 		bl	LED_RED_Write
 123:main.c        ****             LED_GREEN_Write(LED_OFF);
 217              		.loc 1 123 0
 218 002a 0120     		movs	r0, #1
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 7


 219 002c FFF7FEFF 		bl	LED_GREEN_Write
 124:main.c        ****             LED_BLUE_Write (LED_OFF);
 220              		.loc 1 124 0
 221 0030 0120     		movs	r0, #1
 222 0032 FFF7FEFF 		bl	LED_BLUE_Write
 125:main.c        ****             SetBlockColor(0, StripLights_RED);
 223              		.loc 1 125 0
 224 0036 4820     		movs	r0, #72
 225 0038 FFF7FEFF 		bl	StripLights_getColor
 226 003c 0300     		movs	r3, r0
 227 003e 1900     		movs	r1, r3
 228 0040 0020     		movs	r0, #0
 229 0042 FFF7FEFF 		bl	SetBlockColor
 126:main.c        ****             break;
 230              		.loc 1 126 0
 231 0046 7EE0     		b	.L19
 232              	.L13:
 127:main.c        **** 
 128:main.c        ****         case CMD_SET_GREEN:
 129:main.c        ****             LED_RED_Write  (LED_OFF);
 233              		.loc 1 129 0
 234 0048 0120     		movs	r0, #1
 235 004a FFF7FEFF 		bl	LED_RED_Write
 130:main.c        ****             LED_GREEN_Write(LED_ON);
 236              		.loc 1 130 0
 237 004e 0020     		movs	r0, #0
 238 0050 FFF7FEFF 		bl	LED_GREEN_Write
 131:main.c        ****             LED_BLUE_Write (LED_OFF);
 239              		.loc 1 131 0
 240 0054 0120     		movs	r0, #1
 241 0056 FFF7FEFF 		bl	LED_BLUE_Write
 132:main.c        ****             SetBlockColor(0, StripLights_GREEN);
 242              		.loc 1 132 0
 243 005a 5E20     		movs	r0, #94
 244 005c FFF7FEFF 		bl	StripLights_getColor
 245 0060 0300     		movs	r3, r0
 246 0062 1900     		movs	r1, r3
 247 0064 0020     		movs	r0, #0
 248 0066 FFF7FEFF 		bl	SetBlockColor
 133:main.c        ****             break;
 249              		.loc 1 133 0
 250 006a 6CE0     		b	.L19
 251              	.L14:
 134:main.c        **** 
 135:main.c        ****         case CMD_SET_BLUE:
 136:main.c        ****             LED_RED_Write  (LED_OFF);
 252              		.loc 1 136 0
 253 006c 0120     		movs	r0, #1
 254 006e FFF7FEFF 		bl	LED_RED_Write
 137:main.c        ****             LED_GREEN_Write(LED_OFF);
 255              		.loc 1 137 0
 256 0072 0120     		movs	r0, #1
 257 0074 FFF7FEFF 		bl	LED_GREEN_Write
 138:main.c        ****             LED_BLUE_Write (LED_ON);
 258              		.loc 1 138 0
 259 0078 0020     		movs	r0, #0
 260 007a FFF7FEFF 		bl	LED_BLUE_Write
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 8


 139:main.c        ****             SetBlockColor(0, StripLights_BLUE);
 261              		.loc 1 139 0
 262 007e 1B20     		movs	r0, #27
 263 0080 FFF7FEFF 		bl	StripLights_getColor
 264 0084 0300     		movs	r3, r0
 265 0086 1900     		movs	r1, r3
 266 0088 0020     		movs	r0, #0
 267 008a FFF7FEFF 		bl	SetBlockColor
 140:main.c        ****             break;
 268              		.loc 1 140 0
 269 008e 5AE0     		b	.L19
 270              	.L15:
 141:main.c        ****         case CMD_SET_RED_GREEN:
 142:main.c        ****             LED_RED_Write  (LED_ON);
 271              		.loc 1 142 0
 272 0090 0020     		movs	r0, #0
 273 0092 FFF7FEFF 		bl	LED_RED_Write
 143:main.c        ****             LED_GREEN_Write(LED_ON);
 274              		.loc 1 143 0
 275 0096 0020     		movs	r0, #0
 276 0098 FFF7FEFF 		bl	LED_GREEN_Write
 144:main.c        ****             LED_BLUE_Write (LED_OFF);
 277              		.loc 1 144 0
 278 009c 0120     		movs	r0, #1
 279 009e FFF7FEFF 		bl	LED_BLUE_Write
 145:main.c        ****             SetBlockColor(0, StripLights_YELLOW);
 280              		.loc 1 145 0
 281 00a2 0120     		movs	r0, #1
 282 00a4 FFF7FEFF 		bl	StripLights_getColor
 283 00a8 0300     		movs	r3, r0
 284 00aa 1900     		movs	r1, r3
 285 00ac 0020     		movs	r0, #0
 286 00ae FFF7FEFF 		bl	SetBlockColor
 146:main.c        ****             break;
 287              		.loc 1 146 0
 288 00b2 48E0     		b	.L19
 289              	.L16:
 147:main.c        ****         case CMD_SET_RED_BLUE:
 148:main.c        ****             LED_RED_Write  (LED_ON);
 290              		.loc 1 148 0
 291 00b4 0020     		movs	r0, #0
 292 00b6 FFF7FEFF 		bl	LED_RED_Write
 149:main.c        ****             LED_GREEN_Write(LED_OFF);
 293              		.loc 1 149 0
 294 00ba 0120     		movs	r0, #1
 295 00bc FFF7FEFF 		bl	LED_GREEN_Write
 150:main.c        ****             LED_BLUE_Write (LED_ON);
 296              		.loc 1 150 0
 297 00c0 0020     		movs	r0, #0
 298 00c2 FFF7FEFF 		bl	LED_BLUE_Write
 151:main.c        ****             SetBlockColor(0, StripLights_VIOLET);
 299              		.loc 1 151 0
 300 00c6 5C20     		movs	r0, #92
 301 00c8 FFF7FEFF 		bl	StripLights_getColor
 302 00cc 0300     		movs	r3, r0
 303 00ce 1900     		movs	r1, r3
 304 00d0 0020     		movs	r0, #0
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 9


 305 00d2 FFF7FEFF 		bl	SetBlockColor
 152:main.c        ****             break;
 306              		.loc 1 152 0
 307 00d6 36E0     		b	.L19
 308              	.L17:
 153:main.c        ****         case CMD_SET_GREEN_BLUE:
 154:main.c        ****             LED_RED_Write  (LED_OFF);
 309              		.loc 1 154 0
 310 00d8 0120     		movs	r0, #1
 311 00da FFF7FEFF 		bl	LED_RED_Write
 155:main.c        ****             LED_GREEN_Write(LED_ON);
 312              		.loc 1 155 0
 313 00de 0020     		movs	r0, #0
 314 00e0 FFF7FEFF 		bl	LED_GREEN_Write
 156:main.c        ****             LED_BLUE_Write (LED_ON);
 315              		.loc 1 156 0
 316 00e4 0020     		movs	r0, #0
 317 00e6 FFF7FEFF 		bl	LED_BLUE_Write
 157:main.c        ****             SetBlockColor(0, StripLights_TURQUOSE);
 318              		.loc 1 157 0
 319 00ea 5920     		movs	r0, #89
 320 00ec FFF7FEFF 		bl	StripLights_getColor
 321 00f0 0300     		movs	r3, r0
 322 00f2 1900     		movs	r1, r3
 323 00f4 0020     		movs	r0, #0
 324 00f6 FFF7FEFF 		bl	SetBlockColor
 158:main.c        ****             break;
 325              		.loc 1 158 0
 326 00fa 24E0     		b	.L19
 327              	.L18:
 159:main.c        ****         case CMD_SET_RED_GREEN_BLUE:
 160:main.c        ****             LED_RED_Write  (LED_ON);
 328              		.loc 1 160 0
 329 00fc 0020     		movs	r0, #0
 330 00fe FFF7FEFF 		bl	LED_RED_Write
 161:main.c        ****             LED_GREEN_Write(LED_ON);
 331              		.loc 1 161 0
 332 0102 0020     		movs	r0, #0
 333 0104 FFF7FEFF 		bl	LED_GREEN_Write
 162:main.c        ****             LED_BLUE_Write (LED_ON);
 334              		.loc 1 162 0
 335 0108 0020     		movs	r0, #0
 336 010a FFF7FEFF 		bl	LED_BLUE_Write
 163:main.c        ****             SetBlockColor(0, StripLights_DIM_WHITE);
 337              		.loc 1 163 0
 338 010e 5F20     		movs	r0, #95
 339 0110 FFF7FEFF 		bl	StripLights_getColor
 340 0114 0300     		movs	r3, r0
 341 0116 1900     		movs	r1, r3
 342 0118 0020     		movs	r0, #0
 343 011a FFF7FEFF 		bl	SetBlockColor
 164:main.c        ****             break;
 344              		.loc 1 164 0
 345 011e 12E0     		b	.L19
 346              	.L10:
 165:main.c        **** 
 166:main.c        ****         case CMD_SET_OFF:
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 10


 167:main.c        ****                     LED_RED_Write  (LED_OFF);
 347              		.loc 1 167 0
 348 0120 0120     		movs	r0, #1
 349 0122 FFF7FEFF 		bl	LED_RED_Write
 168:main.c        ****                     LED_GREEN_Write(LED_OFF);
 350              		.loc 1 168 0
 351 0126 0120     		movs	r0, #1
 352 0128 FFF7FEFF 		bl	LED_GREEN_Write
 169:main.c        ****                     LED_BLUE_Write (LED_OFF);
 353              		.loc 1 169 0
 354 012c 0120     		movs	r0, #1
 355 012e FFF7FEFF 		bl	LED_BLUE_Write
 170:main.c        ****                     SetBlockColor(0, 0);
 356              		.loc 1 170 0
 357 0132 0021     		movs	r1, #0
 358 0134 0020     		movs	r0, #0
 359 0136 FFF7FEFF 		bl	SetBlockColor
 171:main.c        ****             break;
 360              		.loc 1 171 0
 361 013a 04E0     		b	.L19
 362              	.L9:
 172:main.c        **** 
 173:main.c        ****         default:
 174:main.c        ****             status = STS_CMD_FAIL;
 363              		.loc 1 174 0
 364 013c 0F23     		movs	r3, #15
 365 013e FB18     		adds	r3, r7, r3
 366 0140 FF22     		movs	r2, #255
 367 0142 1A70     		strb	r2, [r3]
 175:main.c        ****             break;
 368              		.loc 1 175 0
 369 0144 C046     		nop
 370              	.L19:
 176:main.c        ****     }
 177:main.c        ****   
 178:main.c        ****     return (status);
 371              		.loc 1 178 0
 372 0146 0F23     		movs	r3, #15
 373 0148 FB18     		adds	r3, r7, r3
 374 014a 1B78     		ldrb	r3, [r3]
 179:main.c        **** }
 375              		.loc 1 179 0
 376 014c 1800     		movs	r0, r3
 377 014e BD46     		mov	sp, r7
 378 0150 04B0     		add	sp, sp, #16
 379              		@ sp needed
 380 0152 80BD     		pop	{r7, pc}
 381              	.L22:
 382              		.align	2
 383              	.L21:
 384 0154 00000000 		.word	.L11
 385              		.cfi_endproc
 386              	.LFE33:
 387              		.size	ExecuteCommand, .-ExecuteCommand
 388              		.section	.text.SetBlockColor,"ax",%progbits
 389              		.align	2
 390              		.global	SetBlockColor
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 11


 391              		.code	16
 392              		.thumb_func
 393              		.type	SetBlockColor, %function
 394              	SetBlockColor:
 395              	.LFB34:
 180:main.c        **** 
 181:main.c        **** 
 182:main.c        **** 
 183:main.c        **** void SetBlockColor(int block_number, uint32 color) {
 396              		.loc 1 183 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 16
 399              		@ frame_needed = 1, uses_anonymous_args = 0
 400 0000 80B5     		push	{r7, lr}
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 7, -8
 403              		.cfi_offset 14, -4
 404 0002 84B0     		sub	sp, sp, #16
 405              		.cfi_def_cfa_offset 24
 406 0004 00AF     		add	r7, sp, #0
 407              		.cfi_def_cfa_register 7
 408 0006 7860     		str	r0, [r7, #4]
 409 0008 3960     		str	r1, [r7]
 410              	.LBB2:
 184:main.c        **** 	for (uint32 led = 0; led < 15; led++) {
 411              		.loc 1 184 0
 412 000a 0023     		movs	r3, #0
 413 000c FB60     		str	r3, [r7, #12]
 414 000e 08E0     		b	.L24
 415              	.L25:
 185:main.c        **** 		StripLights_Pixel(led, block_number, color);
 416              		.loc 1 185 0 discriminator 3
 417 0010 FB68     		ldr	r3, [r7, #12]
 418 0012 3A68     		ldr	r2, [r7]
 419 0014 7968     		ldr	r1, [r7, #4]
 420 0016 1800     		movs	r0, r3
 421 0018 FFF7FEFF 		bl	StripLights_Pixel
 184:main.c        **** 	for (uint32 led = 0; led < 15; led++) {
 422              		.loc 1 184 0 discriminator 3
 423 001c FB68     		ldr	r3, [r7, #12]
 424 001e 0133     		adds	r3, r3, #1
 425 0020 FB60     		str	r3, [r7, #12]
 426              	.L24:
 184:main.c        **** 	for (uint32 led = 0; led < 15; led++) {
 427              		.loc 1 184 0 is_stmt 0 discriminator 1
 428 0022 FB68     		ldr	r3, [r7, #12]
 429 0024 0E2B     		cmp	r3, #14
 430 0026 F3D9     		bls	.L25
 431              	.LBE2:
 186:main.c        **** 	}
 187:main.c        ****     while (StripLights_Ready() == 0);
 432              		.loc 1 187 0 is_stmt 1
 433 0028 C046     		nop
 434              	.L26:
 435              		.loc 1 187 0 is_stmt 0 discriminator 1
 436 002a FFF7FEFF 		bl	StripLights_Ready
 437 002e 031E     		subs	r3, r0, #0
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 12


 438 0030 FBD0     		beq	.L26
 188:main.c        **** 	StripLights_Trigger(1);
 439              		.loc 1 188 0 is_stmt 1
 440 0032 0120     		movs	r0, #1
 441 0034 FFF7FEFF 		bl	StripLights_Trigger
 189:main.c        **** 	CyDelay(10);
 442              		.loc 1 189 0
 443 0038 0A20     		movs	r0, #10
 444 003a FFF7FEFF 		bl	CyDelay
 190:main.c        **** }
 445              		.loc 1 190 0
 446 003e C046     		nop
 447 0040 BD46     		mov	sp, r7
 448 0042 04B0     		add	sp, sp, #16
 449              		@ sp needed
 450 0044 80BD     		pop	{r7, pc}
 451              		.cfi_endproc
 452              	.LFE34:
 453              		.size	SetBlockColor, .-SetBlockColor
 454 0046 C046     		.text
 455              	.Letext0:
 456              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 457              		.file 3 "./main.h"
 458              		.section	.debug_info,"",%progbits
 459              	.Ldebug_info0:
 460 0000 CE010000 		.4byte	0x1ce
 461 0004 0400     		.2byte	0x4
 462 0006 00000000 		.4byte	.Ldebug_abbrev0
 463 000a 04       		.byte	0x4
 464 000b 01       		.uleb128 0x1
 465 000c FF000000 		.4byte	.LASF33
 466 0010 0C       		.byte	0xc
 467 0011 1C020000 		.4byte	.LASF34
 468 0015 5E000000 		.4byte	.LASF35
 469 0019 00000000 		.4byte	.Ldebug_ranges0+0
 470 001d 00000000 		.4byte	0
 471 0021 00000000 		.4byte	.Ldebug_line0
 472 0025 02       		.uleb128 0x2
 473 0026 01       		.byte	0x1
 474 0027 06       		.byte	0x6
 475 0028 75020000 		.4byte	.LASF0
 476 002c 02       		.uleb128 0x2
 477 002d 01       		.byte	0x1
 478 002e 08       		.byte	0x8
 479 002f B3010000 		.4byte	.LASF1
 480 0033 02       		.uleb128 0x2
 481 0034 02       		.byte	0x2
 482 0035 05       		.byte	0x5
 483 0036 36020000 		.4byte	.LASF2
 484 003a 02       		.uleb128 0x2
 485 003b 02       		.byte	0x2
 486 003c 07       		.byte	0x7
 487 003d 4B000000 		.4byte	.LASF3
 488 0041 02       		.uleb128 0x2
 489 0042 04       		.byte	0x4
 490 0043 05       		.byte	0x5
 491 0044 4B020000 		.4byte	.LASF4
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 13


 492 0048 02       		.uleb128 0x2
 493 0049 04       		.byte	0x4
 494 004a 07       		.byte	0x7
 495 004b E7000000 		.4byte	.LASF5
 496 004f 02       		.uleb128 0x2
 497 0050 08       		.byte	0x8
 498 0051 05       		.byte	0x5
 499 0052 0E020000 		.4byte	.LASF6
 500 0056 02       		.uleb128 0x2
 501 0057 08       		.byte	0x8
 502 0058 07       		.byte	0x7
 503 0059 DF010000 		.4byte	.LASF7
 504 005d 03       		.uleb128 0x3
 505 005e 04       		.byte	0x4
 506 005f 05       		.byte	0x5
 507 0060 696E7400 		.ascii	"int\000"
 508 0064 02       		.uleb128 0x2
 509 0065 04       		.byte	0x4
 510 0066 07       		.byte	0x7
 511 0067 C1010000 		.4byte	.LASF8
 512 006b 04       		.uleb128 0x4
 513 006c F9000000 		.4byte	.LASF9
 514 0070 02       		.byte	0x2
 515 0071 D201     		.2byte	0x1d2
 516 0073 2C000000 		.4byte	0x2c
 517 0077 04       		.uleb128 0x4
 518 0078 AC010000 		.4byte	.LASF10
 519 007c 02       		.byte	0x2
 520 007d D401     		.2byte	0x1d4
 521 007f 48000000 		.4byte	0x48
 522 0083 02       		.uleb128 0x2
 523 0084 04       		.byte	0x4
 524 0085 04       		.byte	0x4
 525 0086 B8000000 		.4byte	.LASF11
 526 008a 02       		.uleb128 0x2
 527 008b 08       		.byte	0x8
 528 008c 04       		.byte	0x4
 529 008d 9A010000 		.4byte	.LASF12
 530 0091 02       		.uleb128 0x2
 531 0092 01       		.byte	0x1
 532 0093 08       		.byte	0x8
 533 0094 23020000 		.4byte	.LASF13
 534 0098 02       		.uleb128 0x2
 535 0099 08       		.byte	0x8
 536 009a 04       		.byte	0x4
 537 009b 5B020000 		.4byte	.LASF14
 538 009f 02       		.uleb128 0x2
 539 00a0 04       		.byte	0x4
 540 00a1 07       		.byte	0x7
 541 00a2 05020000 		.4byte	.LASF15
 542 00a6 05       		.uleb128 0x5
 543 00a7 01       		.byte	0x1
 544 00a8 2C000000 		.4byte	0x2c
 545 00ac 03       		.byte	0x3
 546 00ad 3A       		.byte	0x3a
 547 00ae E9000000 		.4byte	0xe9
 548 00b2 06       		.uleb128 0x6
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 14


 549 00b3 32000000 		.4byte	.LASF16
 550 00b7 00       		.byte	0
 551 00b8 06       		.uleb128 0x6
 552 00b9 BE000000 		.4byte	.LASF17
 553 00bd 01       		.byte	0x1
 554 00be 06       		.uleb128 0x6
 555 00bf 28020000 		.4byte	.LASF18
 556 00c3 02       		.byte	0x2
 557 00c4 06       		.uleb128 0x6
 558 00c5 8D010000 		.4byte	.LASF19
 559 00c9 03       		.byte	0x3
 560 00ca 06       		.uleb128 0x6
 561 00cb 0D000000 		.4byte	.LASF20
 562 00cf 04       		.byte	0x4
 563 00d0 06       		.uleb128 0x6
 564 00d1 CE010000 		.4byte	.LASF21
 565 00d5 05       		.byte	0x5
 566 00d6 06       		.uleb128 0x6
 567 00d7 1F000000 		.4byte	.LASF22
 568 00db 06       		.byte	0x6
 569 00dc 06       		.uleb128 0x6
 570 00dd A1000000 		.4byte	.LASF23
 571 00e1 07       		.byte	0x7
 572 00e2 06       		.uleb128 0x6
 573 00e3 40020000 		.4byte	.LASF24
 574 00e7 08       		.byte	0x8
 575 00e8 00       		.byte	0
 576 00e9 07       		.uleb128 0x7
 577 00ea A1010000 		.4byte	.LASF27
 578 00ee 01       		.byte	0x1
 579 00ef 1F       		.byte	0x1f
 580 00f0 5D000000 		.4byte	0x5d
 581 00f4 00000000 		.4byte	.LFB32
 582 00f8 BC000000 		.4byte	.LFE32-.LFB32
 583 00fc 01       		.uleb128 0x1
 584 00fd 9C       		.byte	0x9c
 585 00fe 1F010000 		.4byte	0x11f
 586 0102 08       		.uleb128 0x8
 587 0103 00000000 		.4byte	.LASF25
 588 0107 01       		.byte	0x1
 589 0108 24       		.byte	0x24
 590 0109 6B000000 		.4byte	0x6b
 591 010d 02       		.uleb128 0x2
 592 010e 91       		.byte	0x91
 593 010f 6F       		.sleb128 -17
 594 0110 08       		.uleb128 0x8
 595 0111 54020000 		.4byte	.LASF26
 596 0115 01       		.byte	0x1
 597 0116 26       		.byte	0x26
 598 0117 6B000000 		.4byte	0x6b
 599 011b 02       		.uleb128 0x2
 600 011c 91       		.byte	0x91
 601 011d 6E       		.sleb128 -18
 602 011e 00       		.byte	0
 603 011f 09       		.uleb128 0x9
 604 0120 CA000000 		.4byte	.LASF36
 605 0124 01       		.byte	0x1
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 15


 606 0125 70       		.byte	0x70
 607 0126 6B000000 		.4byte	0x6b
 608 012a 00000000 		.4byte	.LFB33
 609 012e 58010000 		.4byte	.LFE33-.LFB33
 610 0132 01       		.uleb128 0x1
 611 0133 9C       		.byte	0x9c
 612 0134 55010000 		.4byte	0x155
 613 0138 0A       		.uleb128 0xa
 614 0139 636D6400 		.ascii	"cmd\000"
 615 013d 01       		.byte	0x1
 616 013e 70       		.byte	0x70
 617 013f 77000000 		.4byte	0x77
 618 0143 02       		.uleb128 0x2
 619 0144 91       		.byte	0x91
 620 0145 6C       		.sleb128 -20
 621 0146 08       		.uleb128 0x8
 622 0147 54020000 		.4byte	.LASF26
 623 014b 01       		.byte	0x1
 624 014c 72       		.byte	0x72
 625 014d 6B000000 		.4byte	0x6b
 626 0151 02       		.uleb128 0x2
 627 0152 91       		.byte	0x91
 628 0153 77       		.sleb128 -9
 629 0154 00       		.byte	0
 630 0155 0B       		.uleb128 0xb
 631 0156 67020000 		.4byte	.LASF28
 632 015a 01       		.byte	0x1
 633 015b B7       		.byte	0xb7
 634 015c 00000000 		.4byte	.LFB34
 635 0160 46000000 		.4byte	.LFE34-.LFB34
 636 0164 01       		.uleb128 0x1
 637 0165 9C       		.byte	0x9c
 638 0166 9F010000 		.4byte	0x19f
 639 016a 0C       		.uleb128 0xc
 640 016b 3E000000 		.4byte	.LASF29
 641 016f 01       		.byte	0x1
 642 0170 B7       		.byte	0xb7
 643 0171 5D000000 		.4byte	0x5d
 644 0175 02       		.uleb128 0x2
 645 0176 91       		.byte	0x91
 646 0177 6C       		.sleb128 -20
 647 0178 0C       		.uleb128 0xc
 648 0179 A6010000 		.4byte	.LASF30
 649 017d 01       		.byte	0x1
 650 017e B7       		.byte	0xb7
 651 017f 77000000 		.4byte	0x77
 652 0183 02       		.uleb128 0x2
 653 0184 91       		.byte	0x91
 654 0185 68       		.sleb128 -24
 655 0186 0D       		.uleb128 0xd
 656 0187 0A000000 		.4byte	.LBB2
 657 018b 1E000000 		.4byte	.LBE2-.LBB2
 658 018f 0E       		.uleb128 0xe
 659 0190 6C656400 		.ascii	"led\000"
 660 0194 01       		.byte	0x1
 661 0195 B8       		.byte	0xb8
 662 0196 77000000 		.4byte	0x77
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 16


 663 019a 02       		.uleb128 0x2
 664 019b 91       		.byte	0x91
 665 019c 74       		.sleb128 -12
 666 019d 00       		.byte	0
 667 019e 00       		.byte	0
 668 019f 0F       		.uleb128 0xf
 669 01a0 6B000000 		.4byte	0x6b
 670 01a4 AF010000 		.4byte	0x1af
 671 01a8 10       		.uleb128 0x10
 672 01a9 9F000000 		.4byte	0x9f
 673 01ad 02       		.byte	0x2
 674 01ae 00       		.byte	0
 675 01af 11       		.uleb128 0x11
 676 01b0 D9000000 		.4byte	.LASF31
 677 01b4 01       		.byte	0x1
 678 01b5 08       		.byte	0x8
 679 01b6 9F010000 		.4byte	0x19f
 680 01ba 05       		.uleb128 0x5
 681 01bb 03       		.byte	0x3
 682 01bc 00000000 		.4byte	i2cReadBuffer
 683 01c0 11       		.uleb128 0x11
 684 01c1 F6010000 		.4byte	.LASF32
 685 01c5 01       		.byte	0x1
 686 01c6 09       		.byte	0x9
 687 01c7 9F010000 		.4byte	0x19f
 688 01cb 05       		.uleb128 0x5
 689 01cc 03       		.byte	0x3
 690 01cd 00000000 		.4byte	i2cWriteBuffer
 691 01d1 00       		.byte	0
 692              		.section	.debug_abbrev,"",%progbits
 693              	.Ldebug_abbrev0:
 694 0000 01       		.uleb128 0x1
 695 0001 11       		.uleb128 0x11
 696 0002 01       		.byte	0x1
 697 0003 25       		.uleb128 0x25
 698 0004 0E       		.uleb128 0xe
 699 0005 13       		.uleb128 0x13
 700 0006 0B       		.uleb128 0xb
 701 0007 03       		.uleb128 0x3
 702 0008 0E       		.uleb128 0xe
 703 0009 1B       		.uleb128 0x1b
 704 000a 0E       		.uleb128 0xe
 705 000b 55       		.uleb128 0x55
 706 000c 17       		.uleb128 0x17
 707 000d 11       		.uleb128 0x11
 708 000e 01       		.uleb128 0x1
 709 000f 10       		.uleb128 0x10
 710 0010 17       		.uleb128 0x17
 711 0011 00       		.byte	0
 712 0012 00       		.byte	0
 713 0013 02       		.uleb128 0x2
 714 0014 24       		.uleb128 0x24
 715 0015 00       		.byte	0
 716 0016 0B       		.uleb128 0xb
 717 0017 0B       		.uleb128 0xb
 718 0018 3E       		.uleb128 0x3e
 719 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 17


 720 001a 03       		.uleb128 0x3
 721 001b 0E       		.uleb128 0xe
 722 001c 00       		.byte	0
 723 001d 00       		.byte	0
 724 001e 03       		.uleb128 0x3
 725 001f 24       		.uleb128 0x24
 726 0020 00       		.byte	0
 727 0021 0B       		.uleb128 0xb
 728 0022 0B       		.uleb128 0xb
 729 0023 3E       		.uleb128 0x3e
 730 0024 0B       		.uleb128 0xb
 731 0025 03       		.uleb128 0x3
 732 0026 08       		.uleb128 0x8
 733 0027 00       		.byte	0
 734 0028 00       		.byte	0
 735 0029 04       		.uleb128 0x4
 736 002a 16       		.uleb128 0x16
 737 002b 00       		.byte	0
 738 002c 03       		.uleb128 0x3
 739 002d 0E       		.uleb128 0xe
 740 002e 3A       		.uleb128 0x3a
 741 002f 0B       		.uleb128 0xb
 742 0030 3B       		.uleb128 0x3b
 743 0031 05       		.uleb128 0x5
 744 0032 49       		.uleb128 0x49
 745 0033 13       		.uleb128 0x13
 746 0034 00       		.byte	0
 747 0035 00       		.byte	0
 748 0036 05       		.uleb128 0x5
 749 0037 04       		.uleb128 0x4
 750 0038 01       		.byte	0x1
 751 0039 0B       		.uleb128 0xb
 752 003a 0B       		.uleb128 0xb
 753 003b 49       		.uleb128 0x49
 754 003c 13       		.uleb128 0x13
 755 003d 3A       		.uleb128 0x3a
 756 003e 0B       		.uleb128 0xb
 757 003f 3B       		.uleb128 0x3b
 758 0040 0B       		.uleb128 0xb
 759 0041 01       		.uleb128 0x1
 760 0042 13       		.uleb128 0x13
 761 0043 00       		.byte	0
 762 0044 00       		.byte	0
 763 0045 06       		.uleb128 0x6
 764 0046 28       		.uleb128 0x28
 765 0047 00       		.byte	0
 766 0048 03       		.uleb128 0x3
 767 0049 0E       		.uleb128 0xe
 768 004a 1C       		.uleb128 0x1c
 769 004b 0B       		.uleb128 0xb
 770 004c 00       		.byte	0
 771 004d 00       		.byte	0
 772 004e 07       		.uleb128 0x7
 773 004f 2E       		.uleb128 0x2e
 774 0050 01       		.byte	0x1
 775 0051 3F       		.uleb128 0x3f
 776 0052 19       		.uleb128 0x19
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 18


 777 0053 03       		.uleb128 0x3
 778 0054 0E       		.uleb128 0xe
 779 0055 3A       		.uleb128 0x3a
 780 0056 0B       		.uleb128 0xb
 781 0057 3B       		.uleb128 0x3b
 782 0058 0B       		.uleb128 0xb
 783 0059 49       		.uleb128 0x49
 784 005a 13       		.uleb128 0x13
 785 005b 11       		.uleb128 0x11
 786 005c 01       		.uleb128 0x1
 787 005d 12       		.uleb128 0x12
 788 005e 06       		.uleb128 0x6
 789 005f 40       		.uleb128 0x40
 790 0060 18       		.uleb128 0x18
 791 0061 9642     		.uleb128 0x2116
 792 0063 19       		.uleb128 0x19
 793 0064 01       		.uleb128 0x1
 794 0065 13       		.uleb128 0x13
 795 0066 00       		.byte	0
 796 0067 00       		.byte	0
 797 0068 08       		.uleb128 0x8
 798 0069 34       		.uleb128 0x34
 799 006a 00       		.byte	0
 800 006b 03       		.uleb128 0x3
 801 006c 0E       		.uleb128 0xe
 802 006d 3A       		.uleb128 0x3a
 803 006e 0B       		.uleb128 0xb
 804 006f 3B       		.uleb128 0x3b
 805 0070 0B       		.uleb128 0xb
 806 0071 49       		.uleb128 0x49
 807 0072 13       		.uleb128 0x13
 808 0073 02       		.uleb128 0x2
 809 0074 18       		.uleb128 0x18
 810 0075 00       		.byte	0
 811 0076 00       		.byte	0
 812 0077 09       		.uleb128 0x9
 813 0078 2E       		.uleb128 0x2e
 814 0079 01       		.byte	0x1
 815 007a 3F       		.uleb128 0x3f
 816 007b 19       		.uleb128 0x19
 817 007c 03       		.uleb128 0x3
 818 007d 0E       		.uleb128 0xe
 819 007e 3A       		.uleb128 0x3a
 820 007f 0B       		.uleb128 0xb
 821 0080 3B       		.uleb128 0x3b
 822 0081 0B       		.uleb128 0xb
 823 0082 27       		.uleb128 0x27
 824 0083 19       		.uleb128 0x19
 825 0084 49       		.uleb128 0x49
 826 0085 13       		.uleb128 0x13
 827 0086 11       		.uleb128 0x11
 828 0087 01       		.uleb128 0x1
 829 0088 12       		.uleb128 0x12
 830 0089 06       		.uleb128 0x6
 831 008a 40       		.uleb128 0x40
 832 008b 18       		.uleb128 0x18
 833 008c 9642     		.uleb128 0x2116
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 19


 834 008e 19       		.uleb128 0x19
 835 008f 01       		.uleb128 0x1
 836 0090 13       		.uleb128 0x13
 837 0091 00       		.byte	0
 838 0092 00       		.byte	0
 839 0093 0A       		.uleb128 0xa
 840 0094 05       		.uleb128 0x5
 841 0095 00       		.byte	0
 842 0096 03       		.uleb128 0x3
 843 0097 08       		.uleb128 0x8
 844 0098 3A       		.uleb128 0x3a
 845 0099 0B       		.uleb128 0xb
 846 009a 3B       		.uleb128 0x3b
 847 009b 0B       		.uleb128 0xb
 848 009c 49       		.uleb128 0x49
 849 009d 13       		.uleb128 0x13
 850 009e 02       		.uleb128 0x2
 851 009f 18       		.uleb128 0x18
 852 00a0 00       		.byte	0
 853 00a1 00       		.byte	0
 854 00a2 0B       		.uleb128 0xb
 855 00a3 2E       		.uleb128 0x2e
 856 00a4 01       		.byte	0x1
 857 00a5 3F       		.uleb128 0x3f
 858 00a6 19       		.uleb128 0x19
 859 00a7 03       		.uleb128 0x3
 860 00a8 0E       		.uleb128 0xe
 861 00a9 3A       		.uleb128 0x3a
 862 00aa 0B       		.uleb128 0xb
 863 00ab 3B       		.uleb128 0x3b
 864 00ac 0B       		.uleb128 0xb
 865 00ad 27       		.uleb128 0x27
 866 00ae 19       		.uleb128 0x19
 867 00af 11       		.uleb128 0x11
 868 00b0 01       		.uleb128 0x1
 869 00b1 12       		.uleb128 0x12
 870 00b2 06       		.uleb128 0x6
 871 00b3 40       		.uleb128 0x40
 872 00b4 18       		.uleb128 0x18
 873 00b5 9642     		.uleb128 0x2116
 874 00b7 19       		.uleb128 0x19
 875 00b8 01       		.uleb128 0x1
 876 00b9 13       		.uleb128 0x13
 877 00ba 00       		.byte	0
 878 00bb 00       		.byte	0
 879 00bc 0C       		.uleb128 0xc
 880 00bd 05       		.uleb128 0x5
 881 00be 00       		.byte	0
 882 00bf 03       		.uleb128 0x3
 883 00c0 0E       		.uleb128 0xe
 884 00c1 3A       		.uleb128 0x3a
 885 00c2 0B       		.uleb128 0xb
 886 00c3 3B       		.uleb128 0x3b
 887 00c4 0B       		.uleb128 0xb
 888 00c5 49       		.uleb128 0x49
 889 00c6 13       		.uleb128 0x13
 890 00c7 02       		.uleb128 0x2
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 20


 891 00c8 18       		.uleb128 0x18
 892 00c9 00       		.byte	0
 893 00ca 00       		.byte	0
 894 00cb 0D       		.uleb128 0xd
 895 00cc 0B       		.uleb128 0xb
 896 00cd 01       		.byte	0x1
 897 00ce 11       		.uleb128 0x11
 898 00cf 01       		.uleb128 0x1
 899 00d0 12       		.uleb128 0x12
 900 00d1 06       		.uleb128 0x6
 901 00d2 00       		.byte	0
 902 00d3 00       		.byte	0
 903 00d4 0E       		.uleb128 0xe
 904 00d5 34       		.uleb128 0x34
 905 00d6 00       		.byte	0
 906 00d7 03       		.uleb128 0x3
 907 00d8 08       		.uleb128 0x8
 908 00d9 3A       		.uleb128 0x3a
 909 00da 0B       		.uleb128 0xb
 910 00db 3B       		.uleb128 0x3b
 911 00dc 0B       		.uleb128 0xb
 912 00dd 49       		.uleb128 0x49
 913 00de 13       		.uleb128 0x13
 914 00df 02       		.uleb128 0x2
 915 00e0 18       		.uleb128 0x18
 916 00e1 00       		.byte	0
 917 00e2 00       		.byte	0
 918 00e3 0F       		.uleb128 0xf
 919 00e4 01       		.uleb128 0x1
 920 00e5 01       		.byte	0x1
 921 00e6 49       		.uleb128 0x49
 922 00e7 13       		.uleb128 0x13
 923 00e8 01       		.uleb128 0x1
 924 00e9 13       		.uleb128 0x13
 925 00ea 00       		.byte	0
 926 00eb 00       		.byte	0
 927 00ec 10       		.uleb128 0x10
 928 00ed 21       		.uleb128 0x21
 929 00ee 00       		.byte	0
 930 00ef 49       		.uleb128 0x49
 931 00f0 13       		.uleb128 0x13
 932 00f1 2F       		.uleb128 0x2f
 933 00f2 0B       		.uleb128 0xb
 934 00f3 00       		.byte	0
 935 00f4 00       		.byte	0
 936 00f5 11       		.uleb128 0x11
 937 00f6 34       		.uleb128 0x34
 938 00f7 00       		.byte	0
 939 00f8 03       		.uleb128 0x3
 940 00f9 0E       		.uleb128 0xe
 941 00fa 3A       		.uleb128 0x3a
 942 00fb 0B       		.uleb128 0xb
 943 00fc 3B       		.uleb128 0x3b
 944 00fd 0B       		.uleb128 0xb
 945 00fe 49       		.uleb128 0x49
 946 00ff 13       		.uleb128 0x13
 947 0100 3F       		.uleb128 0x3f
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 21


 948 0101 19       		.uleb128 0x19
 949 0102 02       		.uleb128 0x2
 950 0103 18       		.uleb128 0x18
 951 0104 00       		.byte	0
 952 0105 00       		.byte	0
 953 0106 00       		.byte	0
 954              		.section	.debug_aranges,"",%progbits
 955 0000 2C000000 		.4byte	0x2c
 956 0004 0200     		.2byte	0x2
 957 0006 00000000 		.4byte	.Ldebug_info0
 958 000a 04       		.byte	0x4
 959 000b 00       		.byte	0
 960 000c 0000     		.2byte	0
 961 000e 0000     		.2byte	0
 962 0010 00000000 		.4byte	.LFB32
 963 0014 BC000000 		.4byte	.LFE32-.LFB32
 964 0018 00000000 		.4byte	.LFB33
 965 001c 58010000 		.4byte	.LFE33-.LFB33
 966 0020 00000000 		.4byte	.LFB34
 967 0024 46000000 		.4byte	.LFE34-.LFB34
 968 0028 00000000 		.4byte	0
 969 002c 00000000 		.4byte	0
 970              		.section	.debug_ranges,"",%progbits
 971              	.Ldebug_ranges0:
 972 0000 00000000 		.4byte	.LFB32
 973 0004 BC000000 		.4byte	.LFE32
 974 0008 00000000 		.4byte	.LFB33
 975 000c 58010000 		.4byte	.LFE33
 976 0010 00000000 		.4byte	.LFB34
 977 0014 46000000 		.4byte	.LFE34
 978 0018 00000000 		.4byte	0
 979 001c 00000000 		.4byte	0
 980              		.section	.debug_line,"",%progbits
 981              	.Ldebug_line0:
 982 0000 EF000000 		.section	.debug_str,"MS",%progbits,1
 982      02004D00 
 982      00000201 
 982      FB0E0D00 
 982      01010101 
 983              	.LASF25:
 984 0000 62757474 		.ascii	"buttonStatus\000"
 984      6F6E5374 
 984      61747573 
 984      00
 985              	.LASF20:
 986 000d 434D445F 		.ascii	"CMD_SET_RED_GREEN\000"
 986      5345545F 
 986      5245445F 
 986      47524545 
 986      4E00
 987              	.LASF22:
 988 001f 434D445F 		.ascii	"CMD_SET_GREEN_BLUE\000"
 988      5345545F 
 988      47524545 
 988      4E5F424C 
 988      554500
 989              	.LASF16:
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 22


 990 0032 434D445F 		.ascii	"CMD_SET_OFF\000"
 990      5345545F 
 990      4F464600 
 991              	.LASF29:
 992 003e 626C6F63 		.ascii	"block_number\000"
 992      6B5F6E75 
 992      6D626572 
 992      00
 993              	.LASF3:
 994 004b 73686F72 		.ascii	"short unsigned int\000"
 994      7420756E 
 994      7369676E 
 994      65642069 
 994      6E7400
 995              	.LASF35:
 996 005e 433A5C55 		.ascii	"C:\\Users\\James Sun\\Documents\\Git\\Whackamole\\W"
 996      73657273 
 996      5C4A616D 
 996      65732053 
 996      756E5C44 
 997 008b 6861636B 		.ascii	"hackamole\\Slave.cydsn\000"
 997      616D6F6C 
 997      655C536C 
 997      6176652E 
 997      63796473 
 998              	.LASF23:
 999 00a1 434D445F 		.ascii	"CMD_SET_RED_GREEN_BLUE\000"
 999      5345545F 
 999      5245445F 
 999      47524545 
 999      4E5F424C 
 1000              	.LASF11:
 1001 00b8 666C6F61 		.ascii	"float\000"
 1001      7400
 1002              	.LASF17:
 1003 00be 434D445F 		.ascii	"CMD_SET_RED\000"
 1003      5345545F 
 1003      52454400 
 1004              	.LASF36:
 1005 00ca 45786563 		.ascii	"ExecuteCommand\000"
 1005      75746543 
 1005      6F6D6D61 
 1005      6E6400
 1006              	.LASF31:
 1007 00d9 69326352 		.ascii	"i2cReadBuffer\000"
 1007      65616442 
 1007      75666665 
 1007      7200
 1008              	.LASF5:
 1009 00e7 6C6F6E67 		.ascii	"long unsigned int\000"
 1009      20756E73 
 1009      69676E65 
 1009      6420696E 
 1009      7400
 1010              	.LASF9:
 1011 00f9 75696E74 		.ascii	"uint8\000"
 1011      3800
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 23


 1012              	.LASF33:
 1013 00ff 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1013      43313120 
 1013      352E342E 
 1013      31203230 
 1013      31363036 
 1014 0132 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1014      20726576 
 1014      6973696F 
 1014      6E203233 
 1014      37373135 
 1015 0165 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1015      66756E63 
 1015      74696F6E 
 1015      2D736563 
 1015      74696F6E 
 1016              	.LASF19:
 1017 018d 434D445F 		.ascii	"CMD_SET_BLUE\000"
 1017      5345545F 
 1017      424C5545 
 1017      00
 1018              	.LASF12:
 1019 019a 646F7562 		.ascii	"double\000"
 1019      6C6500
 1020              	.LASF27:
 1021 01a1 6D61696E 		.ascii	"main\000"
 1021      00
 1022              	.LASF30:
 1023 01a6 636F6C6F 		.ascii	"color\000"
 1023      7200
 1024              	.LASF10:
 1025 01ac 75696E74 		.ascii	"uint32\000"
 1025      333200
 1026              	.LASF1:
 1027 01b3 756E7369 		.ascii	"unsigned char\000"
 1027      676E6564 
 1027      20636861 
 1027      7200
 1028              	.LASF8:
 1029 01c1 756E7369 		.ascii	"unsigned int\000"
 1029      676E6564 
 1029      20696E74 
 1029      00
 1030              	.LASF21:
 1031 01ce 434D445F 		.ascii	"CMD_SET_RED_BLUE\000"
 1031      5345545F 
 1031      5245445F 
 1031      424C5545 
 1031      00
 1032              	.LASF7:
 1033 01df 6C6F6E67 		.ascii	"long long unsigned int\000"
 1033      206C6F6E 
 1033      6720756E 
 1033      7369676E 
 1033      65642069 
 1034              	.LASF32:
 1035 01f6 69326357 		.ascii	"i2cWriteBuffer\000"
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cci2rLHv.s 			page 24


 1035      72697465 
 1035      42756666 
 1035      657200
 1036              	.LASF15:
 1037 0205 73697A65 		.ascii	"sizetype\000"
 1037      74797065 
 1037      00
 1038              	.LASF6:
 1039 020e 6C6F6E67 		.ascii	"long long int\000"
 1039      206C6F6E 
 1039      6720696E 
 1039      7400
 1040              	.LASF34:
 1041 021c 6D61696E 		.ascii	"main.c\000"
 1041      2E6300
 1042              	.LASF13:
 1043 0223 63686172 		.ascii	"char\000"
 1043      00
 1044              	.LASF18:
 1045 0228 434D445F 		.ascii	"CMD_SET_GREEN\000"
 1045      5345545F 
 1045      47524545 
 1045      4E00
 1046              	.LASF2:
 1047 0236 73686F72 		.ascii	"short int\000"
 1047      7420696E 
 1047      7400
 1048              	.LASF24:
 1049 0240 4E554D5F 		.ascii	"NUM_COLORS\000"
 1049      434F4C4F 
 1049      525300
 1050              	.LASF4:
 1051 024b 6C6F6E67 		.ascii	"long int\000"
 1051      20696E74 
 1051      00
 1052              	.LASF26:
 1053 0254 73746174 		.ascii	"status\000"
 1053      757300
 1054              	.LASF14:
 1055 025b 6C6F6E67 		.ascii	"long double\000"
 1055      20646F75 
 1055      626C6500 
 1056              	.LASF28:
 1057 0267 53657442 		.ascii	"SetBlockColor\000"
 1057      6C6F636B 
 1057      436F6C6F 
 1057      7200
 1058              	.LASF0:
 1059 0275 7369676E 		.ascii	"signed char\000"
 1059      65642063 
 1059      68617200 
 1060              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
