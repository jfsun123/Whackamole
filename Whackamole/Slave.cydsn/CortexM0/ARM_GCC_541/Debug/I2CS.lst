ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"I2CS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	I2CS_initVar
  20              		.bss
  21              		.type	I2CS_initVar, %object
  22              		.size	I2CS_initVar, 1
  23              	I2CS_initVar:
  24 0000 00       		.space	1
  25              		.global	I2CS_customIntrHandler
  26 0001 000000   		.align	2
  27              		.type	I2CS_customIntrHandler, %object
  28              		.size	I2CS_customIntrHandler, 4
  29              	I2CS_customIntrHandler:
  30 0004 00000000 		.space	4
  31              		.section	.text.I2CS_Init,"ax",%progbits
  32              		.align	2
  33              		.global	I2CS_Init
  34              		.code	16
  35              		.thumb_func
  36              		.type	I2CS_Init, %function
  37              	I2CS_Init:
  38              	.LFB0:
  39              		.file 1 "Generated_Source\\PSoC4\\I2CS.c"
   1:Generated_Source\PSoC4/I2CS.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/I2CS.c **** * \file I2CS.c
   3:Generated_Source\PSoC4/I2CS.c **** * \version 3.20
   4:Generated_Source\PSoC4/I2CS.c **** *
   5:Generated_Source\PSoC4/I2CS.c **** * \brief
   6:Generated_Source\PSoC4/I2CS.c **** *  This file provides the source code to the API for the SCB Component.
   7:Generated_Source\PSoC4/I2CS.c **** *
   8:Generated_Source\PSoC4/I2CS.c **** * Note:
   9:Generated_Source\PSoC4/I2CS.c **** *
  10:Generated_Source\PSoC4/I2CS.c **** *******************************************************************************
  11:Generated_Source\PSoC4/I2CS.c **** * \copyright
  12:Generated_Source\PSoC4/I2CS.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/I2CS.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/I2CS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/I2CS.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/I2CS.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/I2CS.c **** 
  18:Generated_Source\PSoC4/I2CS.c **** #include "I2CS_PVT.h"
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 2


  19:Generated_Source\PSoC4/I2CS.c **** 
  20:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_SCB_MODE_I2C_INC)
  21:Generated_Source\PSoC4/I2CS.c ****     #include "I2CS_I2C_PVT.h"
  22:Generated_Source\PSoC4/I2CS.c **** #endif /* (I2CS_SCB_MODE_I2C_INC) */
  23:Generated_Source\PSoC4/I2CS.c **** 
  24:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_SCB_MODE_EZI2C_INC)
  25:Generated_Source\PSoC4/I2CS.c ****     #include "I2CS_EZI2C_PVT.h"
  26:Generated_Source\PSoC4/I2CS.c **** #endif /* (I2CS_SCB_MODE_EZI2C_INC) */
  27:Generated_Source\PSoC4/I2CS.c **** 
  28:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_SCB_MODE_SPI_INC || I2CS_SCB_MODE_UART_INC)
  29:Generated_Source\PSoC4/I2CS.c ****     #include "I2CS_SPI_UART_PVT.h"
  30:Generated_Source\PSoC4/I2CS.c **** #endif /* (I2CS_SCB_MODE_SPI_INC || I2CS_SCB_MODE_UART_INC) */
  31:Generated_Source\PSoC4/I2CS.c **** 
  32:Generated_Source\PSoC4/I2CS.c **** 
  33:Generated_Source\PSoC4/I2CS.c **** /***************************************
  34:Generated_Source\PSoC4/I2CS.c **** *    Run Time Configuration Vars
  35:Generated_Source\PSoC4/I2CS.c **** ***************************************/
  36:Generated_Source\PSoC4/I2CS.c **** 
  37:Generated_Source\PSoC4/I2CS.c **** /* Stores internal component configuration for Unconfigured mode */
  38:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_SCB_MODE_UNCONFIG_CONST_CFG)
  39:Generated_Source\PSoC4/I2CS.c ****     /* Common configuration variables */
  40:Generated_Source\PSoC4/I2CS.c ****     uint8 I2CS_scbMode = I2CS_SCB_MODE_UNCONFIG;
  41:Generated_Source\PSoC4/I2CS.c ****     uint8 I2CS_scbEnableWake;
  42:Generated_Source\PSoC4/I2CS.c ****     uint8 I2CS_scbEnableIntr;
  43:Generated_Source\PSoC4/I2CS.c **** 
  44:Generated_Source\PSoC4/I2CS.c ****     /* I2C configuration variables */
  45:Generated_Source\PSoC4/I2CS.c ****     uint8 I2CS_mode;
  46:Generated_Source\PSoC4/I2CS.c ****     uint8 I2CS_acceptAddr;
  47:Generated_Source\PSoC4/I2CS.c **** 
  48:Generated_Source\PSoC4/I2CS.c ****     /* SPI/UART configuration variables */
  49:Generated_Source\PSoC4/I2CS.c ****     volatile uint8 * I2CS_rxBuffer;
  50:Generated_Source\PSoC4/I2CS.c ****     uint8  I2CS_rxDataBits;
  51:Generated_Source\PSoC4/I2CS.c ****     uint32 I2CS_rxBufferSize;
  52:Generated_Source\PSoC4/I2CS.c **** 
  53:Generated_Source\PSoC4/I2CS.c ****     volatile uint8 * I2CS_txBuffer;
  54:Generated_Source\PSoC4/I2CS.c ****     uint8  I2CS_txDataBits;
  55:Generated_Source\PSoC4/I2CS.c ****     uint32 I2CS_txBufferSize;
  56:Generated_Source\PSoC4/I2CS.c **** 
  57:Generated_Source\PSoC4/I2CS.c ****     /* EZI2C configuration variables */
  58:Generated_Source\PSoC4/I2CS.c ****     uint8 I2CS_numberOfAddr;
  59:Generated_Source\PSoC4/I2CS.c ****     uint8 I2CS_subAddrSize;
  60:Generated_Source\PSoC4/I2CS.c **** #endif /* (I2CS_SCB_MODE_UNCONFIG_CONST_CFG) */
  61:Generated_Source\PSoC4/I2CS.c **** 
  62:Generated_Source\PSoC4/I2CS.c **** 
  63:Generated_Source\PSoC4/I2CS.c **** /***************************************
  64:Generated_Source\PSoC4/I2CS.c **** *     Common SCB Vars
  65:Generated_Source\PSoC4/I2CS.c **** ***************************************/
  66:Generated_Source\PSoC4/I2CS.c **** /**
  67:Generated_Source\PSoC4/I2CS.c **** * \addtogroup group_general
  68:Generated_Source\PSoC4/I2CS.c **** * \{
  69:Generated_Source\PSoC4/I2CS.c **** */
  70:Generated_Source\PSoC4/I2CS.c **** 
  71:Generated_Source\PSoC4/I2CS.c **** /** I2CS_initVar indicates whether the I2CS 
  72:Generated_Source\PSoC4/I2CS.c **** *  component has been initialized. The variable is initialized to 0 
  73:Generated_Source\PSoC4/I2CS.c **** *  and set to 1 the first time SCB_Start() is called. This allows 
  74:Generated_Source\PSoC4/I2CS.c **** *  the component to restart without reinitialization after the first 
  75:Generated_Source\PSoC4/I2CS.c **** *  call to the I2CS_Start() routine.
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 3


  76:Generated_Source\PSoC4/I2CS.c **** *
  77:Generated_Source\PSoC4/I2CS.c **** *  If re-initialization of the component is required, then the 
  78:Generated_Source\PSoC4/I2CS.c **** *  I2CS_Init() function can be called before the 
  79:Generated_Source\PSoC4/I2CS.c **** *  I2CS_Start() or I2CS_Enable() function.
  80:Generated_Source\PSoC4/I2CS.c **** */
  81:Generated_Source\PSoC4/I2CS.c **** uint8 I2CS_initVar = 0u;
  82:Generated_Source\PSoC4/I2CS.c **** 
  83:Generated_Source\PSoC4/I2CS.c **** 
  84:Generated_Source\PSoC4/I2CS.c **** #if (! (I2CS_SCB_MODE_I2C_CONST_CFG || \
  85:Generated_Source\PSoC4/I2CS.c ****         I2CS_SCB_MODE_EZI2C_CONST_CFG))
  86:Generated_Source\PSoC4/I2CS.c ****     /** This global variable stores TX interrupt sources after 
  87:Generated_Source\PSoC4/I2CS.c ****     * I2CS_Stop() is called. Only these TX interrupt sources 
  88:Generated_Source\PSoC4/I2CS.c ****     * will be restored on a subsequent I2CS_Enable() call.
  89:Generated_Source\PSoC4/I2CS.c ****     */
  90:Generated_Source\PSoC4/I2CS.c ****     uint16 I2CS_IntrTxMask = 0u;
  91:Generated_Source\PSoC4/I2CS.c **** #endif /* (! (I2CS_SCB_MODE_I2C_CONST_CFG || \
  92:Generated_Source\PSoC4/I2CS.c ****               I2CS_SCB_MODE_EZI2C_CONST_CFG)) */
  93:Generated_Source\PSoC4/I2CS.c **** /** \} globals */
  94:Generated_Source\PSoC4/I2CS.c **** 
  95:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_SCB_IRQ_INTERNAL)
  96:Generated_Source\PSoC4/I2CS.c **** #if !defined (CY_REMOVE_I2CS_CUSTOM_INTR_HANDLER)
  97:Generated_Source\PSoC4/I2CS.c ****     void (*I2CS_customIntrHandler)(void) = NULL;
  98:Generated_Source\PSoC4/I2CS.c **** #endif /* !defined (CY_REMOVE_I2CS_CUSTOM_INTR_HANDLER) */
  99:Generated_Source\PSoC4/I2CS.c **** #endif /* (I2CS_SCB_IRQ_INTERNAL) */
 100:Generated_Source\PSoC4/I2CS.c **** 
 101:Generated_Source\PSoC4/I2CS.c **** 
 102:Generated_Source\PSoC4/I2CS.c **** /***************************************
 103:Generated_Source\PSoC4/I2CS.c **** *    Private Function Prototypes
 104:Generated_Source\PSoC4/I2CS.c **** ***************************************/
 105:Generated_Source\PSoC4/I2CS.c **** 
 106:Generated_Source\PSoC4/I2CS.c **** static void I2CS_ScbEnableIntr(void);
 107:Generated_Source\PSoC4/I2CS.c **** static void I2CS_ScbModeStop(void);
 108:Generated_Source\PSoC4/I2CS.c **** static void I2CS_ScbModePostEnable(void);
 109:Generated_Source\PSoC4/I2CS.c **** 
 110:Generated_Source\PSoC4/I2CS.c **** 
 111:Generated_Source\PSoC4/I2CS.c **** /*******************************************************************************
 112:Generated_Source\PSoC4/I2CS.c **** * Function Name: I2CS_Init
 113:Generated_Source\PSoC4/I2CS.c **** ****************************************************************************//**
 114:Generated_Source\PSoC4/I2CS.c **** *
 115:Generated_Source\PSoC4/I2CS.c **** *  Initializes the I2CS component to operate in one of the selected
 116:Generated_Source\PSoC4/I2CS.c **** *  configurations: I2C, SPI, UART or EZI2C.
 117:Generated_Source\PSoC4/I2CS.c **** *  When the configuration is set to "Unconfigured SCB", this function does
 118:Generated_Source\PSoC4/I2CS.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
 119:Generated_Source\PSoC4/I2CS.c **** *  I2CS_I2CInit, I2CS_SpiInit, 
 120:Generated_Source\PSoC4/I2CS.c **** *  I2CS_UartInit or I2CS_EzI2CInit.
 121:Generated_Source\PSoC4/I2CS.c **** *
 122:Generated_Source\PSoC4/I2CS.c **** *******************************************************************************/
 123:Generated_Source\PSoC4/I2CS.c **** void I2CS_Init(void)
 124:Generated_Source\PSoC4/I2CS.c **** {
  40              		.loc 1 124 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 0
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 80B5     		push	{r7, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 4


  48 0002 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
 125:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_SCB_MODE_UNCONFIG_CONST_CFG)
 126:Generated_Source\PSoC4/I2CS.c ****     if (I2CS_SCB_MODE_UNCONFIG_RUNTM_CFG)
 127:Generated_Source\PSoC4/I2CS.c ****     {
 128:Generated_Source\PSoC4/I2CS.c ****         I2CS_initVar = 0u;
 129:Generated_Source\PSoC4/I2CS.c ****     }
 130:Generated_Source\PSoC4/I2CS.c ****     else
 131:Generated_Source\PSoC4/I2CS.c ****     {
 132:Generated_Source\PSoC4/I2CS.c ****         /* Initialization was done before this function call */
 133:Generated_Source\PSoC4/I2CS.c ****     }
 134:Generated_Source\PSoC4/I2CS.c **** 
 135:Generated_Source\PSoC4/I2CS.c **** #elif (I2CS_SCB_MODE_I2C_CONST_CFG)
 136:Generated_Source\PSoC4/I2CS.c ****     I2CS_I2CInit();
  50              		.loc 1 136 0
  51 0004 FFF7FEFF 		bl	I2CS_I2CInit
 137:Generated_Source\PSoC4/I2CS.c **** 
 138:Generated_Source\PSoC4/I2CS.c **** #elif (I2CS_SCB_MODE_SPI_CONST_CFG)
 139:Generated_Source\PSoC4/I2CS.c ****     I2CS_SpiInit();
 140:Generated_Source\PSoC4/I2CS.c **** 
 141:Generated_Source\PSoC4/I2CS.c **** #elif (I2CS_SCB_MODE_UART_CONST_CFG)
 142:Generated_Source\PSoC4/I2CS.c ****     I2CS_UartInit();
 143:Generated_Source\PSoC4/I2CS.c **** 
 144:Generated_Source\PSoC4/I2CS.c **** #elif (I2CS_SCB_MODE_EZI2C_CONST_CFG)
 145:Generated_Source\PSoC4/I2CS.c ****     I2CS_EzI2CInit();
 146:Generated_Source\PSoC4/I2CS.c **** 
 147:Generated_Source\PSoC4/I2CS.c **** #endif /* (I2CS_SCB_MODE_UNCONFIG_CONST_CFG) */
 148:Generated_Source\PSoC4/I2CS.c **** }
  52              		.loc 1 148 0
  53 0008 C046     		nop
  54 000a BD46     		mov	sp, r7
  55              		@ sp needed
  56 000c 80BD     		pop	{r7, pc}
  57              		.cfi_endproc
  58              	.LFE0:
  59              		.size	I2CS_Init, .-I2CS_Init
  60 000e C046     		.section	.text.I2CS_Enable,"ax",%progbits
  61              		.align	2
  62              		.global	I2CS_Enable
  63              		.code	16
  64              		.thumb_func
  65              		.type	I2CS_Enable, %function
  66              	I2CS_Enable:
  67              	.LFB1:
 149:Generated_Source\PSoC4/I2CS.c **** 
 150:Generated_Source\PSoC4/I2CS.c **** 
 151:Generated_Source\PSoC4/I2CS.c **** /*******************************************************************************
 152:Generated_Source\PSoC4/I2CS.c **** * Function Name: I2CS_Enable
 153:Generated_Source\PSoC4/I2CS.c **** ****************************************************************************//**
 154:Generated_Source\PSoC4/I2CS.c **** *
 155:Generated_Source\PSoC4/I2CS.c **** *  Enables I2CS component operation: activates the hardware and 
 156:Generated_Source\PSoC4/I2CS.c **** *  internal interrupt. It also restores TX interrupt sources disabled after the 
 157:Generated_Source\PSoC4/I2CS.c **** *  I2CS_Stop() function was called (note that level-triggered TX 
 158:Generated_Source\PSoC4/I2CS.c **** *  interrupt sources remain disabled to not cause code lock-up).
 159:Generated_Source\PSoC4/I2CS.c **** *  For I2C and EZI2C modes the interrupt is internal and mandatory for 
 160:Generated_Source\PSoC4/I2CS.c **** *  operation. For SPI and UART modes the interrupt can be configured as none, 
 161:Generated_Source\PSoC4/I2CS.c **** *  internal or external.
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 5


 162:Generated_Source\PSoC4/I2CS.c **** *  The I2CS configuration should be not changed when the component
 163:Generated_Source\PSoC4/I2CS.c **** *  is enabled. Any configuration changes should be made after disabling the 
 164:Generated_Source\PSoC4/I2CS.c **** *  component.
 165:Generated_Source\PSoC4/I2CS.c **** *  When configuration is set to “Unconfigured I2CS”, the component 
 166:Generated_Source\PSoC4/I2CS.c **** *  must first be initialized to operate in one of the following configurations: 
 167:Generated_Source\PSoC4/I2CS.c **** *  I2C, SPI, UART or EZ I2C, using the mode-specific initialization API. 
 168:Generated_Source\PSoC4/I2CS.c **** *  Otherwise this function does not enable the component.
 169:Generated_Source\PSoC4/I2CS.c **** *
 170:Generated_Source\PSoC4/I2CS.c **** *******************************************************************************/
 171:Generated_Source\PSoC4/I2CS.c **** void I2CS_Enable(void)
 172:Generated_Source\PSoC4/I2CS.c **** {
  68              		.loc 1 172 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72 0000 80B5     		push	{r7, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 7, -8
  75              		.cfi_offset 14, -4
  76 0002 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
 173:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_SCB_MODE_UNCONFIG_CONST_CFG)
 174:Generated_Source\PSoC4/I2CS.c ****     /* Enable SCB block, only if it is already configured */
 175:Generated_Source\PSoC4/I2CS.c ****     if (!I2CS_SCB_MODE_UNCONFIG_RUNTM_CFG)
 176:Generated_Source\PSoC4/I2CS.c ****     {
 177:Generated_Source\PSoC4/I2CS.c ****         I2CS_CTRL_REG |= I2CS_CTRL_ENABLED;
 178:Generated_Source\PSoC4/I2CS.c **** 
 179:Generated_Source\PSoC4/I2CS.c ****         I2CS_ScbEnableIntr();
 180:Generated_Source\PSoC4/I2CS.c **** 
 181:Generated_Source\PSoC4/I2CS.c ****         /* Call PostEnable function specific to current operation mode */
 182:Generated_Source\PSoC4/I2CS.c ****         I2CS_ScbModePostEnable();
 183:Generated_Source\PSoC4/I2CS.c ****     }
 184:Generated_Source\PSoC4/I2CS.c **** #else
 185:Generated_Source\PSoC4/I2CS.c ****     I2CS_CTRL_REG |= I2CS_CTRL_ENABLED;
  78              		.loc 1 185 0
  79 0004 064B     		ldr	r3, .L3
  80 0006 064A     		ldr	r2, .L3
  81 0008 1268     		ldr	r2, [r2]
  82 000a 8021     		movs	r1, #128
  83 000c 0906     		lsls	r1, r1, #24
  84 000e 0A43     		orrs	r2, r1
  85 0010 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/I2CS.c **** 
 187:Generated_Source\PSoC4/I2CS.c ****     I2CS_ScbEnableIntr();
  86              		.loc 1 187 0
  87 0012 FFF7FEFF 		bl	I2CS_ScbEnableIntr
 188:Generated_Source\PSoC4/I2CS.c **** 
 189:Generated_Source\PSoC4/I2CS.c ****     /* Call PostEnable function specific to current operation mode */
 190:Generated_Source\PSoC4/I2CS.c ****     I2CS_ScbModePostEnable();
  88              		.loc 1 190 0
  89 0016 FFF7FEFF 		bl	I2CS_ScbModePostEnable
 191:Generated_Source\PSoC4/I2CS.c **** #endif /* (I2CS_SCB_MODE_UNCONFIG_CONST_CFG) */
 192:Generated_Source\PSoC4/I2CS.c **** }
  90              		.loc 1 192 0
  91 001a C046     		nop
  92 001c BD46     		mov	sp, r7
  93              		@ sp needed
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 6


  94 001e 80BD     		pop	{r7, pc}
  95              	.L4:
  96              		.align	2
  97              	.L3:
  98 0020 00000640 		.word	1074135040
  99              		.cfi_endproc
 100              	.LFE1:
 101              		.size	I2CS_Enable, .-I2CS_Enable
 102              		.section	.text.I2CS_Start,"ax",%progbits
 103              		.align	2
 104              		.global	I2CS_Start
 105              		.code	16
 106              		.thumb_func
 107              		.type	I2CS_Start, %function
 108              	I2CS_Start:
 109              	.LFB2:
 193:Generated_Source\PSoC4/I2CS.c **** 
 194:Generated_Source\PSoC4/I2CS.c **** 
 195:Generated_Source\PSoC4/I2CS.c **** /*******************************************************************************
 196:Generated_Source\PSoC4/I2CS.c **** * Function Name: I2CS_Start
 197:Generated_Source\PSoC4/I2CS.c **** ****************************************************************************//**
 198:Generated_Source\PSoC4/I2CS.c **** *
 199:Generated_Source\PSoC4/I2CS.c **** *  Invokes I2CS_Init() and I2CS_Enable().
 200:Generated_Source\PSoC4/I2CS.c **** *  After this function call, the component is enabled and ready for operation.
 201:Generated_Source\PSoC4/I2CS.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 202:Generated_Source\PSoC4/I2CS.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 203:Generated_Source\PSoC4/I2CS.c **** *  or EZI2C. Otherwise this function does not enable the component.
 204:Generated_Source\PSoC4/I2CS.c **** *
 205:Generated_Source\PSoC4/I2CS.c **** * \globalvars
 206:Generated_Source\PSoC4/I2CS.c **** *  I2CS_initVar - used to check initial configuration, modified
 207:Generated_Source\PSoC4/I2CS.c **** *  on first function call.
 208:Generated_Source\PSoC4/I2CS.c **** *
 209:Generated_Source\PSoC4/I2CS.c **** *******************************************************************************/
 210:Generated_Source\PSoC4/I2CS.c **** void I2CS_Start(void)
 211:Generated_Source\PSoC4/I2CS.c **** {
 110              		.loc 1 211 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 212:Generated_Source\PSoC4/I2CS.c ****     if (0u == I2CS_initVar)
 120              		.loc 1 212 0
 121 0004 064B     		ldr	r3, .L7
 122 0006 1B78     		ldrb	r3, [r3]
 123 0008 002B     		cmp	r3, #0
 124 000a 04D1     		bne	.L6
 213:Generated_Source\PSoC4/I2CS.c ****     {
 214:Generated_Source\PSoC4/I2CS.c ****         I2CS_Init();
 125              		.loc 1 214 0
 126 000c FFF7FEFF 		bl	I2CS_Init
 215:Generated_Source\PSoC4/I2CS.c ****         I2CS_initVar = 1u; /* Component was initialized */
 127              		.loc 1 215 0
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 7


 128 0010 034B     		ldr	r3, .L7
 129 0012 0122     		movs	r2, #1
 130 0014 1A70     		strb	r2, [r3]
 131              	.L6:
 216:Generated_Source\PSoC4/I2CS.c ****     }
 217:Generated_Source\PSoC4/I2CS.c **** 
 218:Generated_Source\PSoC4/I2CS.c ****     I2CS_Enable();
 132              		.loc 1 218 0
 133 0016 FFF7FEFF 		bl	I2CS_Enable
 219:Generated_Source\PSoC4/I2CS.c **** }
 134              		.loc 1 219 0
 135 001a C046     		nop
 136 001c BD46     		mov	sp, r7
 137              		@ sp needed
 138 001e 80BD     		pop	{r7, pc}
 139              	.L8:
 140              		.align	2
 141              	.L7:
 142 0020 00000000 		.word	I2CS_initVar
 143              		.cfi_endproc
 144              	.LFE2:
 145              		.size	I2CS_Start, .-I2CS_Start
 146              		.section	.text.I2CS_Stop,"ax",%progbits
 147              		.align	2
 148              		.global	I2CS_Stop
 149              		.code	16
 150              		.thumb_func
 151              		.type	I2CS_Stop, %function
 152              	I2CS_Stop:
 153              	.LFB3:
 220:Generated_Source\PSoC4/I2CS.c **** 
 221:Generated_Source\PSoC4/I2CS.c **** 
 222:Generated_Source\PSoC4/I2CS.c **** /*******************************************************************************
 223:Generated_Source\PSoC4/I2CS.c **** * Function Name: I2CS_Stop
 224:Generated_Source\PSoC4/I2CS.c **** ****************************************************************************//**
 225:Generated_Source\PSoC4/I2CS.c **** *
 226:Generated_Source\PSoC4/I2CS.c **** *  Disables the I2CS component: disable the hardware and internal 
 227:Generated_Source\PSoC4/I2CS.c **** *  interrupt. It also disables all TX interrupt sources so as not to cause an 
 228:Generated_Source\PSoC4/I2CS.c **** *  unexpected interrupt trigger because after the component is enabled, the 
 229:Generated_Source\PSoC4/I2CS.c **** *  TX FIFO is empty.
 230:Generated_Source\PSoC4/I2CS.c **** *  Refer to the function I2CS_Enable() for the interrupt 
 231:Generated_Source\PSoC4/I2CS.c **** *  configuration details.
 232:Generated_Source\PSoC4/I2CS.c **** *  This function disables the SCB component without checking to see if 
 233:Generated_Source\PSoC4/I2CS.c **** *  communication is in progress. Before calling this function it may be 
 234:Generated_Source\PSoC4/I2CS.c **** *  necessary to check the status of communication to make sure communication 
 235:Generated_Source\PSoC4/I2CS.c **** *  is complete. If this is not done then communication could be stopped mid 
 236:Generated_Source\PSoC4/I2CS.c **** *  byte and corrupted data could result.
 237:Generated_Source\PSoC4/I2CS.c **** *
 238:Generated_Source\PSoC4/I2CS.c **** *******************************************************************************/
 239:Generated_Source\PSoC4/I2CS.c **** void I2CS_Stop(void)
 240:Generated_Source\PSoC4/I2CS.c **** {
 154              		.loc 1 240 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158 0000 80B5     		push	{r7, lr}
 159              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 8


 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 00AF     		add	r7, sp, #0
 163              		.cfi_def_cfa_register 7
 241:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_SCB_IRQ_INTERNAL)
 242:Generated_Source\PSoC4/I2CS.c ****     I2CS_DisableInt();
 164              		.loc 1 242 0
 165 0004 0A20     		movs	r0, #10
 166 0006 FFF7FEFF 		bl	CyIntDisable
 243:Generated_Source\PSoC4/I2CS.c **** #endif /* (I2CS_SCB_IRQ_INTERNAL) */
 244:Generated_Source\PSoC4/I2CS.c **** 
 245:Generated_Source\PSoC4/I2CS.c ****     /* Call Stop function specific to current operation mode */
 246:Generated_Source\PSoC4/I2CS.c ****     I2CS_ScbModeStop();
 167              		.loc 1 246 0
 168 000a FFF7FEFF 		bl	I2CS_ScbModeStop
 247:Generated_Source\PSoC4/I2CS.c **** 
 248:Generated_Source\PSoC4/I2CS.c ****     /* Disable SCB IP */
 249:Generated_Source\PSoC4/I2CS.c ****     I2CS_CTRL_REG &= (uint32) ~I2CS_CTRL_ENABLED;
 169              		.loc 1 249 0
 170 000e 074B     		ldr	r3, .L10
 171 0010 064A     		ldr	r2, .L10
 172 0012 1268     		ldr	r2, [r2]
 173 0014 5200     		lsls	r2, r2, #1
 174 0016 5208     		lsrs	r2, r2, #1
 175 0018 1A60     		str	r2, [r3]
 250:Generated_Source\PSoC4/I2CS.c **** 
 251:Generated_Source\PSoC4/I2CS.c ****     /* Disable all TX interrupt sources so as not to cause an unexpected
 252:Generated_Source\PSoC4/I2CS.c ****     * interrupt trigger after the component will be enabled because the 
 253:Generated_Source\PSoC4/I2CS.c ****     * TX FIFO is empty.
 254:Generated_Source\PSoC4/I2CS.c ****     * For SCB IP v0, it is critical as it does not mask-out interrupt
 255:Generated_Source\PSoC4/I2CS.c ****     * sources when it is disabled. This can cause a code lock-up in the
 256:Generated_Source\PSoC4/I2CS.c ****     * interrupt handler because TX FIFO cannot be loaded after the block
 257:Generated_Source\PSoC4/I2CS.c ****     * is disabled.
 258:Generated_Source\PSoC4/I2CS.c ****     */
 259:Generated_Source\PSoC4/I2CS.c ****     I2CS_SetTxInterruptMode(I2CS_NO_INTR_SOURCES);
 176              		.loc 1 259 0
 177 001a 054B     		ldr	r3, .L10+4
 178 001c 0022     		movs	r2, #0
 179 001e 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/I2CS.c **** 
 261:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_SCB_IRQ_INTERNAL)
 262:Generated_Source\PSoC4/I2CS.c ****     I2CS_ClearPendingInt();
 180              		.loc 1 262 0
 181 0020 0A20     		movs	r0, #10
 182 0022 FFF7FEFF 		bl	CyIntClearPending
 263:Generated_Source\PSoC4/I2CS.c **** #endif /* (I2CS_SCB_IRQ_INTERNAL) */
 264:Generated_Source\PSoC4/I2CS.c **** }
 183              		.loc 1 264 0
 184 0026 C046     		nop
 185 0028 BD46     		mov	sp, r7
 186              		@ sp needed
 187 002a 80BD     		pop	{r7, pc}
 188              	.L11:
 189              		.align	2
 190              	.L10:
 191 002c 00000640 		.word	1074135040
 192 0030 880F0640 		.word	1074139016
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 9


 193              		.cfi_endproc
 194              	.LFE3:
 195              		.size	I2CS_Stop, .-I2CS_Stop
 196              		.section	.text.I2CS_SetRxFifoLevel,"ax",%progbits
 197              		.align	2
 198              		.global	I2CS_SetRxFifoLevel
 199              		.code	16
 200              		.thumb_func
 201              		.type	I2CS_SetRxFifoLevel, %function
 202              	I2CS_SetRxFifoLevel:
 203              	.LFB4:
 265:Generated_Source\PSoC4/I2CS.c **** 
 266:Generated_Source\PSoC4/I2CS.c **** 
 267:Generated_Source\PSoC4/I2CS.c **** /*******************************************************************************
 268:Generated_Source\PSoC4/I2CS.c **** * Function Name: I2CS_SetRxFifoLevel
 269:Generated_Source\PSoC4/I2CS.c **** ****************************************************************************//**
 270:Generated_Source\PSoC4/I2CS.c **** *
 271:Generated_Source\PSoC4/I2CS.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 272:Generated_Source\PSoC4/I2CS.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 273:Generated_Source\PSoC4/I2CS.c **** *  interrupt request is generated.
 274:Generated_Source\PSoC4/I2CS.c **** *
 275:Generated_Source\PSoC4/I2CS.c **** *  \param level: Level in the RX FIFO to generate RX level interrupt.
 276:Generated_Source\PSoC4/I2CS.c **** *   The range of valid level values is between 0 and RX FIFO depth - 1.
 277:Generated_Source\PSoC4/I2CS.c **** *
 278:Generated_Source\PSoC4/I2CS.c **** *******************************************************************************/
 279:Generated_Source\PSoC4/I2CS.c **** void I2CS_SetRxFifoLevel(uint32 level)
 280:Generated_Source\PSoC4/I2CS.c **** {
 204              		.loc 1 280 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 16
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 80B5     		push	{r7, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 84B0     		sub	sp, sp, #16
 213              		.cfi_def_cfa_offset 24
 214 0004 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 216 0006 7860     		str	r0, [r7, #4]
 281:Generated_Source\PSoC4/I2CS.c ****     uint32 rxFifoCtrl;
 282:Generated_Source\PSoC4/I2CS.c **** 
 283:Generated_Source\PSoC4/I2CS.c ****     rxFifoCtrl = I2CS_RX_FIFO_CTRL_REG;
 217              		.loc 1 283 0
 218 0008 094B     		ldr	r3, .L13
 219 000a 1B68     		ldr	r3, [r3]
 220 000c FB60     		str	r3, [r7, #12]
 284:Generated_Source\PSoC4/I2CS.c **** 
 285:Generated_Source\PSoC4/I2CS.c ****     rxFifoCtrl &= ((uint32) ~I2CS_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 221              		.loc 1 285 0
 222 000e FB68     		ldr	r3, [r7, #12]
 223 0010 0722     		movs	r2, #7
 224 0012 9343     		bics	r3, r2
 225 0014 FB60     		str	r3, [r7, #12]
 286:Generated_Source\PSoC4/I2CS.c ****     rxFifoCtrl |= ((uint32) (I2CS_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 226              		.loc 1 286 0
 227 0016 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 10


 228 0018 0722     		movs	r2, #7
 229 001a 1340     		ands	r3, r2
 230 001c FA68     		ldr	r2, [r7, #12]
 231 001e 1343     		orrs	r3, r2
 232 0020 FB60     		str	r3, [r7, #12]
 287:Generated_Source\PSoC4/I2CS.c **** 
 288:Generated_Source\PSoC4/I2CS.c ****     I2CS_RX_FIFO_CTRL_REG = rxFifoCtrl;
 233              		.loc 1 288 0
 234 0022 034B     		ldr	r3, .L13
 235 0024 FA68     		ldr	r2, [r7, #12]
 236 0026 1A60     		str	r2, [r3]
 289:Generated_Source\PSoC4/I2CS.c **** }
 237              		.loc 1 289 0
 238 0028 C046     		nop
 239 002a BD46     		mov	sp, r7
 240 002c 04B0     		add	sp, sp, #16
 241              		@ sp needed
 242 002e 80BD     		pop	{r7, pc}
 243              	.L14:
 244              		.align	2
 245              	.L13:
 246 0030 04030640 		.word	1074135812
 247              		.cfi_endproc
 248              	.LFE4:
 249              		.size	I2CS_SetRxFifoLevel, .-I2CS_SetRxFifoLevel
 250              		.section	.text.I2CS_SetTxFifoLevel,"ax",%progbits
 251              		.align	2
 252              		.global	I2CS_SetTxFifoLevel
 253              		.code	16
 254              		.thumb_func
 255              		.type	I2CS_SetTxFifoLevel, %function
 256              	I2CS_SetTxFifoLevel:
 257              	.LFB5:
 290:Generated_Source\PSoC4/I2CS.c **** 
 291:Generated_Source\PSoC4/I2CS.c **** 
 292:Generated_Source\PSoC4/I2CS.c **** /*******************************************************************************
 293:Generated_Source\PSoC4/I2CS.c **** * Function Name: I2CS_SetTxFifoLevel
 294:Generated_Source\PSoC4/I2CS.c **** ****************************************************************************//**
 295:Generated_Source\PSoC4/I2CS.c **** *
 296:Generated_Source\PSoC4/I2CS.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 297:Generated_Source\PSoC4/I2CS.c **** *  When the TX FIFO has less entries than the TX FIFO level an TX level
 298:Generated_Source\PSoC4/I2CS.c **** *  interrupt request is generated.
 299:Generated_Source\PSoC4/I2CS.c **** *
 300:Generated_Source\PSoC4/I2CS.c **** *  \param level: Level in the TX FIFO to generate TX level interrupt.
 301:Generated_Source\PSoC4/I2CS.c **** *   The range of valid level values is between 0 and TX FIFO depth - 1.
 302:Generated_Source\PSoC4/I2CS.c **** *
 303:Generated_Source\PSoC4/I2CS.c **** *******************************************************************************/
 304:Generated_Source\PSoC4/I2CS.c **** void I2CS_SetTxFifoLevel(uint32 level)
 305:Generated_Source\PSoC4/I2CS.c **** {
 258              		.loc 1 305 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 16
 261              		@ frame_needed = 1, uses_anonymous_args = 0
 262 0000 80B5     		push	{r7, lr}
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 7, -8
 265              		.cfi_offset 14, -4
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 11


 266 0002 84B0     		sub	sp, sp, #16
 267              		.cfi_def_cfa_offset 24
 268 0004 00AF     		add	r7, sp, #0
 269              		.cfi_def_cfa_register 7
 270 0006 7860     		str	r0, [r7, #4]
 306:Generated_Source\PSoC4/I2CS.c ****     uint32 txFifoCtrl;
 307:Generated_Source\PSoC4/I2CS.c **** 
 308:Generated_Source\PSoC4/I2CS.c ****     txFifoCtrl = I2CS_TX_FIFO_CTRL_REG;
 271              		.loc 1 308 0
 272 0008 094B     		ldr	r3, .L16
 273 000a 1B68     		ldr	r3, [r3]
 274 000c FB60     		str	r3, [r7, #12]
 309:Generated_Source\PSoC4/I2CS.c **** 
 310:Generated_Source\PSoC4/I2CS.c ****     txFifoCtrl &= ((uint32) ~I2CS_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 275              		.loc 1 310 0
 276 000e FB68     		ldr	r3, [r7, #12]
 277 0010 0722     		movs	r2, #7
 278 0012 9343     		bics	r3, r2
 279 0014 FB60     		str	r3, [r7, #12]
 311:Generated_Source\PSoC4/I2CS.c ****     txFifoCtrl |= ((uint32) (I2CS_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 280              		.loc 1 311 0
 281 0016 7B68     		ldr	r3, [r7, #4]
 282 0018 0722     		movs	r2, #7
 283 001a 1340     		ands	r3, r2
 284 001c FA68     		ldr	r2, [r7, #12]
 285 001e 1343     		orrs	r3, r2
 286 0020 FB60     		str	r3, [r7, #12]
 312:Generated_Source\PSoC4/I2CS.c **** 
 313:Generated_Source\PSoC4/I2CS.c ****     I2CS_TX_FIFO_CTRL_REG = txFifoCtrl;
 287              		.loc 1 313 0
 288 0022 034B     		ldr	r3, .L16
 289 0024 FA68     		ldr	r2, [r7, #12]
 290 0026 1A60     		str	r2, [r3]
 314:Generated_Source\PSoC4/I2CS.c **** }
 291              		.loc 1 314 0
 292 0028 C046     		nop
 293 002a BD46     		mov	sp, r7
 294 002c 04B0     		add	sp, sp, #16
 295              		@ sp needed
 296 002e 80BD     		pop	{r7, pc}
 297              	.L17:
 298              		.align	2
 299              	.L16:
 300 0030 04020640 		.word	1074135556
 301              		.cfi_endproc
 302              	.LFE5:
 303              		.size	I2CS_SetTxFifoLevel, .-I2CS_SetTxFifoLevel
 304              		.section	.text.I2CS_SetCustomInterruptHandler,"ax",%progbits
 305              		.align	2
 306              		.global	I2CS_SetCustomInterruptHandler
 307              		.code	16
 308              		.thumb_func
 309              		.type	I2CS_SetCustomInterruptHandler, %function
 310              	I2CS_SetCustomInterruptHandler:
 311              	.LFB6:
 315:Generated_Source\PSoC4/I2CS.c **** 
 316:Generated_Source\PSoC4/I2CS.c **** 
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 12


 317:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_SCB_IRQ_INTERNAL)
 318:Generated_Source\PSoC4/I2CS.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/I2CS.c ****     * Function Name: I2CS_SetCustomInterruptHandler
 320:Generated_Source\PSoC4/I2CS.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/I2CS.c ****     *
 322:Generated_Source\PSoC4/I2CS.c ****     *  Registers a function to be called by the internal interrupt handler.
 323:Generated_Source\PSoC4/I2CS.c ****     *  First the function that is registered is called, then the internal interrupt
 324:Generated_Source\PSoC4/I2CS.c ****     *  handler performs any operation such as software buffer management functions
 325:Generated_Source\PSoC4/I2CS.c ****     *  before the interrupt returns.  It is the user's responsibility not to break
 326:Generated_Source\PSoC4/I2CS.c ****     *  the software buffer operations. Only one custom handler is supported, which
 327:Generated_Source\PSoC4/I2CS.c ****     *  is the function provided by the most recent call.
 328:Generated_Source\PSoC4/I2CS.c ****     *  At the initialization time no custom handler is registered.
 329:Generated_Source\PSoC4/I2CS.c ****     *
 330:Generated_Source\PSoC4/I2CS.c ****     *  \param func: Pointer to the function to register.
 331:Generated_Source\PSoC4/I2CS.c ****     *        The value NULL indicates to remove the current custom interrupt
 332:Generated_Source\PSoC4/I2CS.c ****     *        handler.
 333:Generated_Source\PSoC4/I2CS.c ****     *
 334:Generated_Source\PSoC4/I2CS.c ****     *******************************************************************************/
 335:Generated_Source\PSoC4/I2CS.c ****     void I2CS_SetCustomInterruptHandler(void (*func)(void))
 336:Generated_Source\PSoC4/I2CS.c ****     {
 312              		.loc 1 336 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 8
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316 0000 80B5     		push	{r7, lr}
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 7, -8
 319              		.cfi_offset 14, -4
 320 0002 82B0     		sub	sp, sp, #8
 321              		.cfi_def_cfa_offset 16
 322 0004 00AF     		add	r7, sp, #0
 323              		.cfi_def_cfa_register 7
 324 0006 7860     		str	r0, [r7, #4]
 337:Generated_Source\PSoC4/I2CS.c ****     #if !defined (CY_REMOVE_I2CS_CUSTOM_INTR_HANDLER)
 338:Generated_Source\PSoC4/I2CS.c ****         I2CS_customIntrHandler = func; /* Register interrupt handler */
 325              		.loc 1 338 0
 326 0008 034B     		ldr	r3, .L19
 327 000a 7A68     		ldr	r2, [r7, #4]
 328 000c 1A60     		str	r2, [r3]
 339:Generated_Source\PSoC4/I2CS.c ****     #else
 340:Generated_Source\PSoC4/I2CS.c ****         if (NULL != func)
 341:Generated_Source\PSoC4/I2CS.c ****         {
 342:Generated_Source\PSoC4/I2CS.c ****             /* Suppress compiler warning */
 343:Generated_Source\PSoC4/I2CS.c ****         }
 344:Generated_Source\PSoC4/I2CS.c ****     #endif /* !defined (CY_REMOVE_I2CS_CUSTOM_INTR_HANDLER) */
 345:Generated_Source\PSoC4/I2CS.c ****     }
 329              		.loc 1 345 0
 330 000e C046     		nop
 331 0010 BD46     		mov	sp, r7
 332 0012 02B0     		add	sp, sp, #8
 333              		@ sp needed
 334 0014 80BD     		pop	{r7, pc}
 335              	.L20:
 336 0016 C046     		.align	2
 337              	.L19:
 338 0018 00000000 		.word	I2CS_customIntrHandler
 339              		.cfi_endproc
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 13


 340              	.LFE6:
 341              		.size	I2CS_SetCustomInterruptHandler, .-I2CS_SetCustomInterruptHandler
 342              		.section	.text.I2CS_ScbEnableIntr,"ax",%progbits
 343              		.align	2
 344              		.code	16
 345              		.thumb_func
 346              		.type	I2CS_ScbEnableIntr, %function
 347              	I2CS_ScbEnableIntr:
 348              	.LFB7:
 346:Generated_Source\PSoC4/I2CS.c **** #endif /* (I2CS_SCB_IRQ_INTERNAL) */
 347:Generated_Source\PSoC4/I2CS.c **** 
 348:Generated_Source\PSoC4/I2CS.c **** 
 349:Generated_Source\PSoC4/I2CS.c **** /*******************************************************************************
 350:Generated_Source\PSoC4/I2CS.c **** * Function Name: I2CS_ScbModeEnableIntr
 351:Generated_Source\PSoC4/I2CS.c **** ****************************************************************************//**
 352:Generated_Source\PSoC4/I2CS.c **** *
 353:Generated_Source\PSoC4/I2CS.c **** *  Enables an interrupt for a specific mode.
 354:Generated_Source\PSoC4/I2CS.c **** *
 355:Generated_Source\PSoC4/I2CS.c **** *******************************************************************************/
 356:Generated_Source\PSoC4/I2CS.c **** static void I2CS_ScbEnableIntr(void)
 357:Generated_Source\PSoC4/I2CS.c **** {
 349              		.loc 1 357 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353 0000 80B5     		push	{r7, lr}
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 00AF     		add	r7, sp, #0
 358              		.cfi_def_cfa_register 7
 358:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_SCB_IRQ_INTERNAL)
 359:Generated_Source\PSoC4/I2CS.c ****     /* Enable interrupt in NVIC */
 360:Generated_Source\PSoC4/I2CS.c ****     #if (I2CS_SCB_MODE_UNCONFIG_CONST_CFG)
 361:Generated_Source\PSoC4/I2CS.c ****         if (0u != I2CS_scbEnableIntr)
 362:Generated_Source\PSoC4/I2CS.c ****         {
 363:Generated_Source\PSoC4/I2CS.c ****             I2CS_EnableInt();
 364:Generated_Source\PSoC4/I2CS.c ****         }
 365:Generated_Source\PSoC4/I2CS.c **** 
 366:Generated_Source\PSoC4/I2CS.c ****     #else
 367:Generated_Source\PSoC4/I2CS.c ****         I2CS_EnableInt();
 359              		.loc 1 367 0
 360 0004 0A20     		movs	r0, #10
 361 0006 FFF7FEFF 		bl	CyIntEnable
 368:Generated_Source\PSoC4/I2CS.c **** 
 369:Generated_Source\PSoC4/I2CS.c ****     #endif /* (I2CS_SCB_MODE_UNCONFIG_CONST_CFG) */
 370:Generated_Source\PSoC4/I2CS.c **** #endif /* (I2CS_SCB_IRQ_INTERNAL) */
 371:Generated_Source\PSoC4/I2CS.c **** }
 362              		.loc 1 371 0
 363 000a C046     		nop
 364 000c BD46     		mov	sp, r7
 365              		@ sp needed
 366 000e 80BD     		pop	{r7, pc}
 367              		.cfi_endproc
 368              	.LFE7:
 369              		.size	I2CS_ScbEnableIntr, .-I2CS_ScbEnableIntr
 370              		.section	.text.I2CS_ScbModePostEnable,"ax",%progbits
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 14


 371              		.align	2
 372              		.code	16
 373              		.thumb_func
 374              		.type	I2CS_ScbModePostEnable, %function
 375              	I2CS_ScbModePostEnable:
 376              	.LFB8:
 372:Generated_Source\PSoC4/I2CS.c **** 
 373:Generated_Source\PSoC4/I2CS.c **** 
 374:Generated_Source\PSoC4/I2CS.c **** /*******************************************************************************
 375:Generated_Source\PSoC4/I2CS.c **** * Function Name: I2CS_ScbModePostEnable
 376:Generated_Source\PSoC4/I2CS.c **** ****************************************************************************//**
 377:Generated_Source\PSoC4/I2CS.c **** *
 378:Generated_Source\PSoC4/I2CS.c **** *  Calls the PostEnable function for a specific operation mode.
 379:Generated_Source\PSoC4/I2CS.c **** *
 380:Generated_Source\PSoC4/I2CS.c **** *******************************************************************************/
 381:Generated_Source\PSoC4/I2CS.c **** static void I2CS_ScbModePostEnable(void)
 382:Generated_Source\PSoC4/I2CS.c **** {
 377              		.loc 1 382 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381 0000 80B5     		push	{r7, lr}
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 7, -8
 384              		.cfi_offset 14, -4
 385 0002 00AF     		add	r7, sp, #0
 386              		.cfi_def_cfa_register 7
 383:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_SCB_MODE_UNCONFIG_CONST_CFG)
 384:Generated_Source\PSoC4/I2CS.c **** #if (!I2CS_CY_SCBIP_V1)
 385:Generated_Source\PSoC4/I2CS.c ****     if (I2CS_SCB_MODE_SPI_RUNTM_CFG)
 386:Generated_Source\PSoC4/I2CS.c ****     {
 387:Generated_Source\PSoC4/I2CS.c ****         I2CS_SpiPostEnable();
 388:Generated_Source\PSoC4/I2CS.c ****     }
 389:Generated_Source\PSoC4/I2CS.c ****     else if (I2CS_SCB_MODE_UART_RUNTM_CFG)
 390:Generated_Source\PSoC4/I2CS.c ****     {
 391:Generated_Source\PSoC4/I2CS.c ****         I2CS_UartPostEnable();
 392:Generated_Source\PSoC4/I2CS.c ****     }
 393:Generated_Source\PSoC4/I2CS.c ****     else
 394:Generated_Source\PSoC4/I2CS.c ****     {
 395:Generated_Source\PSoC4/I2CS.c ****         /* Unknown mode: do nothing */
 396:Generated_Source\PSoC4/I2CS.c ****     }
 397:Generated_Source\PSoC4/I2CS.c **** #endif /* (!I2CS_CY_SCBIP_V1) */
 398:Generated_Source\PSoC4/I2CS.c **** 
 399:Generated_Source\PSoC4/I2CS.c **** #elif (I2CS_SCB_MODE_SPI_CONST_CFG)
 400:Generated_Source\PSoC4/I2CS.c ****     I2CS_SpiPostEnable();
 401:Generated_Source\PSoC4/I2CS.c **** 
 402:Generated_Source\PSoC4/I2CS.c **** #elif (I2CS_SCB_MODE_UART_CONST_CFG)
 403:Generated_Source\PSoC4/I2CS.c ****     I2CS_UartPostEnable();
 404:Generated_Source\PSoC4/I2CS.c **** 
 405:Generated_Source\PSoC4/I2CS.c **** #else
 406:Generated_Source\PSoC4/I2CS.c ****     /* Unknown mode: do nothing */
 407:Generated_Source\PSoC4/I2CS.c **** #endif /* (I2CS_SCB_MODE_UNCONFIG_CONST_CFG) */
 408:Generated_Source\PSoC4/I2CS.c **** }
 387              		.loc 1 408 0
 388 0004 C046     		nop
 389 0006 BD46     		mov	sp, r7
 390              		@ sp needed
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 15


 391 0008 80BD     		pop	{r7, pc}
 392              		.cfi_endproc
 393              	.LFE8:
 394              		.size	I2CS_ScbModePostEnable, .-I2CS_ScbModePostEnable
 395 000a C046     		.section	.text.I2CS_ScbModeStop,"ax",%progbits
 396              		.align	2
 397              		.code	16
 398              		.thumb_func
 399              		.type	I2CS_ScbModeStop, %function
 400              	I2CS_ScbModeStop:
 401              	.LFB9:
 409:Generated_Source\PSoC4/I2CS.c **** 
 410:Generated_Source\PSoC4/I2CS.c **** 
 411:Generated_Source\PSoC4/I2CS.c **** /*******************************************************************************
 412:Generated_Source\PSoC4/I2CS.c **** * Function Name: I2CS_ScbModeStop
 413:Generated_Source\PSoC4/I2CS.c **** ****************************************************************************//**
 414:Generated_Source\PSoC4/I2CS.c **** *
 415:Generated_Source\PSoC4/I2CS.c **** *  Calls the Stop function for a specific operation mode.
 416:Generated_Source\PSoC4/I2CS.c **** *
 417:Generated_Source\PSoC4/I2CS.c **** *******************************************************************************/
 418:Generated_Source\PSoC4/I2CS.c **** static void I2CS_ScbModeStop(void)
 419:Generated_Source\PSoC4/I2CS.c **** {
 402              		.loc 1 419 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 1, uses_anonymous_args = 0
 406 0000 80B5     		push	{r7, lr}
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 7, -8
 409              		.cfi_offset 14, -4
 410 0002 00AF     		add	r7, sp, #0
 411              		.cfi_def_cfa_register 7
 420:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_SCB_MODE_UNCONFIG_CONST_CFG)
 421:Generated_Source\PSoC4/I2CS.c ****     if (I2CS_SCB_MODE_I2C_RUNTM_CFG)
 422:Generated_Source\PSoC4/I2CS.c ****     {
 423:Generated_Source\PSoC4/I2CS.c ****         I2CS_I2CStop();
 424:Generated_Source\PSoC4/I2CS.c ****     }
 425:Generated_Source\PSoC4/I2CS.c ****     else if (I2CS_SCB_MODE_EZI2C_RUNTM_CFG)
 426:Generated_Source\PSoC4/I2CS.c ****     {
 427:Generated_Source\PSoC4/I2CS.c ****         I2CS_EzI2CStop();
 428:Generated_Source\PSoC4/I2CS.c ****     }
 429:Generated_Source\PSoC4/I2CS.c **** #if (!I2CS_CY_SCBIP_V1)
 430:Generated_Source\PSoC4/I2CS.c ****     else if (I2CS_SCB_MODE_SPI_RUNTM_CFG)
 431:Generated_Source\PSoC4/I2CS.c ****     {
 432:Generated_Source\PSoC4/I2CS.c ****         I2CS_SpiStop();
 433:Generated_Source\PSoC4/I2CS.c ****     }
 434:Generated_Source\PSoC4/I2CS.c ****     else if (I2CS_SCB_MODE_UART_RUNTM_CFG)
 435:Generated_Source\PSoC4/I2CS.c ****     {
 436:Generated_Source\PSoC4/I2CS.c ****         I2CS_UartStop();
 437:Generated_Source\PSoC4/I2CS.c ****     }
 438:Generated_Source\PSoC4/I2CS.c **** #endif /* (!I2CS_CY_SCBIP_V1) */
 439:Generated_Source\PSoC4/I2CS.c ****     else
 440:Generated_Source\PSoC4/I2CS.c ****     {
 441:Generated_Source\PSoC4/I2CS.c ****         /* Unknown mode: do nothing */
 442:Generated_Source\PSoC4/I2CS.c ****     }
 443:Generated_Source\PSoC4/I2CS.c **** #elif (I2CS_SCB_MODE_I2C_CONST_CFG)
 444:Generated_Source\PSoC4/I2CS.c ****     I2CS_I2CStop();
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 16


 412              		.loc 1 444 0
 413 0004 FFF7FEFF 		bl	I2CS_I2CStop
 445:Generated_Source\PSoC4/I2CS.c **** 
 446:Generated_Source\PSoC4/I2CS.c **** #elif (I2CS_SCB_MODE_EZI2C_CONST_CFG)
 447:Generated_Source\PSoC4/I2CS.c ****     I2CS_EzI2CStop();
 448:Generated_Source\PSoC4/I2CS.c **** 
 449:Generated_Source\PSoC4/I2CS.c **** #elif (I2CS_SCB_MODE_SPI_CONST_CFG)
 450:Generated_Source\PSoC4/I2CS.c ****     I2CS_SpiStop();
 451:Generated_Source\PSoC4/I2CS.c **** 
 452:Generated_Source\PSoC4/I2CS.c **** #elif (I2CS_SCB_MODE_UART_CONST_CFG)
 453:Generated_Source\PSoC4/I2CS.c ****     I2CS_UartStop();
 454:Generated_Source\PSoC4/I2CS.c **** 
 455:Generated_Source\PSoC4/I2CS.c **** #else
 456:Generated_Source\PSoC4/I2CS.c ****     /* Unknown mode: do nothing */
 457:Generated_Source\PSoC4/I2CS.c **** #endif /* (I2CS_SCB_MODE_UNCONFIG_CONST_CFG) */
 458:Generated_Source\PSoC4/I2CS.c **** }
 414              		.loc 1 458 0
 415 0008 C046     		nop
 416 000a BD46     		mov	sp, r7
 417              		@ sp needed
 418 000c 80BD     		pop	{r7, pc}
 419              		.cfi_endproc
 420              	.LFE9:
 421              		.size	I2CS_ScbModeStop, .-I2CS_ScbModeStop
 422 000e C046     		.section	.text.I2CS_I2CSlaveNackGeneration,"ax",%progbits
 423              		.align	2
 424              		.global	I2CS_I2CSlaveNackGeneration
 425              		.code	16
 426              		.thumb_func
 427              		.type	I2CS_I2CSlaveNackGeneration, %function
 428              	I2CS_I2CSlaveNackGeneration:
 429              	.LFB10:
 459:Generated_Source\PSoC4/I2CS.c **** 
 460:Generated_Source\PSoC4/I2CS.c **** 
 461:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_SCB_MODE_UNCONFIG_CONST_CFG)
 462:Generated_Source\PSoC4/I2CS.c ****     /*******************************************************************************
 463:Generated_Source\PSoC4/I2CS.c ****     * Function Name: I2CS_SetPins
 464:Generated_Source\PSoC4/I2CS.c ****     ****************************************************************************//**
 465:Generated_Source\PSoC4/I2CS.c ****     *
 466:Generated_Source\PSoC4/I2CS.c ****     *  Sets the pins settings accordingly to the selected operation mode.
 467:Generated_Source\PSoC4/I2CS.c ****     *  Only available in the Unconfigured operation mode. The mode specific
 468:Generated_Source\PSoC4/I2CS.c ****     *  initialization function calls it.
 469:Generated_Source\PSoC4/I2CS.c ****     *  Pins configuration is set by PSoC Creator when a specific mode of operation
 470:Generated_Source\PSoC4/I2CS.c ****     *  is selected in design time.
 471:Generated_Source\PSoC4/I2CS.c ****     *
 472:Generated_Source\PSoC4/I2CS.c ****     *  \param mode:      Mode of SCB operation.
 473:Generated_Source\PSoC4/I2CS.c ****     *  \param subMode:   Sub-mode of SCB operation. It is only required for SPI and UART
 474:Generated_Source\PSoC4/I2CS.c ****     *             modes.
 475:Generated_Source\PSoC4/I2CS.c ****     *  \param uartEnableMask: enables TX or RX direction and RTS and CTS signals.
 476:Generated_Source\PSoC4/I2CS.c ****     *
 477:Generated_Source\PSoC4/I2CS.c ****     *******************************************************************************/
 478:Generated_Source\PSoC4/I2CS.c ****     void I2CS_SetPins(uint32 mode, uint32 subMode, uint32 uartEnableMask)
 479:Generated_Source\PSoC4/I2CS.c ****     {
 480:Generated_Source\PSoC4/I2CS.c ****         uint32 pinsDm[I2CS_SCB_PINS_NUMBER];
 481:Generated_Source\PSoC4/I2CS.c ****         uint32 i;
 482:Generated_Source\PSoC4/I2CS.c ****         
 483:Generated_Source\PSoC4/I2CS.c ****     #if (!I2CS_CY_SCBIP_V1)
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 17


 484:Generated_Source\PSoC4/I2CS.c ****         uint32 pinsInBuf = 0u;
 485:Generated_Source\PSoC4/I2CS.c ****     #endif /* (!I2CS_CY_SCBIP_V1) */
 486:Generated_Source\PSoC4/I2CS.c ****         
 487:Generated_Source\PSoC4/I2CS.c ****         uint32 hsiomSel[I2CS_SCB_PINS_NUMBER] = 
 488:Generated_Source\PSoC4/I2CS.c ****         {
 489:Generated_Source\PSoC4/I2CS.c ****             I2CS_RX_SCL_MOSI_HSIOM_SEL_GPIO,
 490:Generated_Source\PSoC4/I2CS.c ****             I2CS_TX_SDA_MISO_HSIOM_SEL_GPIO,
 491:Generated_Source\PSoC4/I2CS.c ****             0u,
 492:Generated_Source\PSoC4/I2CS.c ****             0u,
 493:Generated_Source\PSoC4/I2CS.c ****             0u,
 494:Generated_Source\PSoC4/I2CS.c ****             0u,
 495:Generated_Source\PSoC4/I2CS.c ****             0u,
 496:Generated_Source\PSoC4/I2CS.c ****         };
 497:Generated_Source\PSoC4/I2CS.c **** 
 498:Generated_Source\PSoC4/I2CS.c ****     #if (I2CS_CY_SCBIP_V1)
 499:Generated_Source\PSoC4/I2CS.c ****         /* Supress compiler warning. */
 500:Generated_Source\PSoC4/I2CS.c ****         if ((0u == subMode) || (0u == uartEnableMask))
 501:Generated_Source\PSoC4/I2CS.c ****         {
 502:Generated_Source\PSoC4/I2CS.c ****         }
 503:Generated_Source\PSoC4/I2CS.c ****     #endif /* (I2CS_CY_SCBIP_V1) */
 504:Generated_Source\PSoC4/I2CS.c **** 
 505:Generated_Source\PSoC4/I2CS.c ****         /* Set default HSIOM to GPIO and Drive Mode to Analog Hi-Z */
 506:Generated_Source\PSoC4/I2CS.c ****         for (i = 0u; i < I2CS_SCB_PINS_NUMBER; i++)
 507:Generated_Source\PSoC4/I2CS.c ****         {
 508:Generated_Source\PSoC4/I2CS.c ****             pinsDm[i] = I2CS_PIN_DM_ALG_HIZ;
 509:Generated_Source\PSoC4/I2CS.c ****         }
 510:Generated_Source\PSoC4/I2CS.c **** 
 511:Generated_Source\PSoC4/I2CS.c ****         if ((I2CS_SCB_MODE_I2C   == mode) ||
 512:Generated_Source\PSoC4/I2CS.c ****             (I2CS_SCB_MODE_EZI2C == mode))
 513:Generated_Source\PSoC4/I2CS.c ****         {
 514:Generated_Source\PSoC4/I2CS.c ****         #if (I2CS_RX_SCL_MOSI_PIN)
 515:Generated_Source\PSoC4/I2CS.c ****             hsiomSel[I2CS_RX_SCL_MOSI_PIN_INDEX] = I2CS_RX_SCL_MOSI_HSIOM_SEL_I2C;
 516:Generated_Source\PSoC4/I2CS.c ****             pinsDm  [I2CS_RX_SCL_MOSI_PIN_INDEX] = I2CS_PIN_DM_OD_LO;
 517:Generated_Source\PSoC4/I2CS.c ****         #elif (I2CS_RX_WAKE_SCL_MOSI_PIN)
 518:Generated_Source\PSoC4/I2CS.c ****             hsiomSel[I2CS_RX_WAKE_SCL_MOSI_PIN_INDEX] = I2CS_RX_WAKE_SCL_MOSI_HSIOM_SEL_I2C;
 519:Generated_Source\PSoC4/I2CS.c ****             pinsDm  [I2CS_RX_WAKE_SCL_MOSI_PIN_INDEX] = I2CS_PIN_DM_OD_LO;
 520:Generated_Source\PSoC4/I2CS.c ****         #else
 521:Generated_Source\PSoC4/I2CS.c ****         #endif /* (I2CS_RX_SCL_MOSI_PIN) */
 522:Generated_Source\PSoC4/I2CS.c ****         
 523:Generated_Source\PSoC4/I2CS.c ****         #if (I2CS_TX_SDA_MISO_PIN)
 524:Generated_Source\PSoC4/I2CS.c ****             hsiomSel[I2CS_TX_SDA_MISO_PIN_INDEX] = I2CS_TX_SDA_MISO_HSIOM_SEL_I2C;
 525:Generated_Source\PSoC4/I2CS.c ****             pinsDm  [I2CS_TX_SDA_MISO_PIN_INDEX] = I2CS_PIN_DM_OD_LO;
 526:Generated_Source\PSoC4/I2CS.c ****         #endif /* (I2CS_TX_SDA_MISO_PIN) */
 527:Generated_Source\PSoC4/I2CS.c ****         }
 528:Generated_Source\PSoC4/I2CS.c ****     #if (!I2CS_CY_SCBIP_V1)
 529:Generated_Source\PSoC4/I2CS.c ****         else if (I2CS_SCB_MODE_SPI == mode)
 530:Generated_Source\PSoC4/I2CS.c ****         {
 531:Generated_Source\PSoC4/I2CS.c ****         #if (I2CS_RX_SCL_MOSI_PIN)
 532:Generated_Source\PSoC4/I2CS.c ****             hsiomSel[I2CS_RX_SCL_MOSI_PIN_INDEX] = I2CS_RX_SCL_MOSI_HSIOM_SEL_SPI;
 533:Generated_Source\PSoC4/I2CS.c ****         #elif (I2CS_RX_WAKE_SCL_MOSI_PIN)
 534:Generated_Source\PSoC4/I2CS.c ****             hsiomSel[I2CS_RX_WAKE_SCL_MOSI_PIN_INDEX] = I2CS_RX_WAKE_SCL_MOSI_HSIOM_SEL_SPI;
 535:Generated_Source\PSoC4/I2CS.c ****         #else
 536:Generated_Source\PSoC4/I2CS.c ****         #endif /* (I2CS_RX_SCL_MOSI_PIN) */
 537:Generated_Source\PSoC4/I2CS.c ****         
 538:Generated_Source\PSoC4/I2CS.c ****         #if (I2CS_TX_SDA_MISO_PIN)
 539:Generated_Source\PSoC4/I2CS.c ****             hsiomSel[I2CS_TX_SDA_MISO_PIN_INDEX] = I2CS_TX_SDA_MISO_HSIOM_SEL_SPI;
 540:Generated_Source\PSoC4/I2CS.c ****         #endif /* (I2CS_TX_SDA_MISO_PIN) */
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 18


 541:Generated_Source\PSoC4/I2CS.c ****         
 542:Generated_Source\PSoC4/I2CS.c ****         #if (I2CS_SCLK_PIN)
 543:Generated_Source\PSoC4/I2CS.c ****             hsiomSel[I2CS_SCLK_PIN_INDEX] = I2CS_SCLK_HSIOM_SEL_SPI;
 544:Generated_Source\PSoC4/I2CS.c ****         #endif /* (I2CS_SCLK_PIN) */
 545:Generated_Source\PSoC4/I2CS.c **** 
 546:Generated_Source\PSoC4/I2CS.c ****             if (I2CS_SPI_SLAVE == subMode)
 547:Generated_Source\PSoC4/I2CS.c ****             {
 548:Generated_Source\PSoC4/I2CS.c ****                 /* Slave */
 549:Generated_Source\PSoC4/I2CS.c ****                 pinsDm[I2CS_RX_SCL_MOSI_PIN_INDEX] = I2CS_PIN_DM_DIG_HIZ;
 550:Generated_Source\PSoC4/I2CS.c ****                 pinsDm[I2CS_TX_SDA_MISO_PIN_INDEX] = I2CS_PIN_DM_STRONG;
 551:Generated_Source\PSoC4/I2CS.c ****                 pinsDm[I2CS_SCLK_PIN_INDEX] = I2CS_PIN_DM_DIG_HIZ;
 552:Generated_Source\PSoC4/I2CS.c **** 
 553:Generated_Source\PSoC4/I2CS.c ****             #if (I2CS_SS0_PIN)
 554:Generated_Source\PSoC4/I2CS.c ****                 /* Only SS0 is valid choice for Slave */
 555:Generated_Source\PSoC4/I2CS.c ****                 hsiomSel[I2CS_SS0_PIN_INDEX] = I2CS_SS0_HSIOM_SEL_SPI;
 556:Generated_Source\PSoC4/I2CS.c ****                 pinsDm  [I2CS_SS0_PIN_INDEX] = I2CS_PIN_DM_DIG_HIZ;
 557:Generated_Source\PSoC4/I2CS.c ****             #endif /* (I2CS_SS0_PIN) */
 558:Generated_Source\PSoC4/I2CS.c **** 
 559:Generated_Source\PSoC4/I2CS.c ****             #if (I2CS_TX_SDA_MISO_PIN)
 560:Generated_Source\PSoC4/I2CS.c ****                 /* Disable input buffer */
 561:Generated_Source\PSoC4/I2CS.c ****                  pinsInBuf |= I2CS_TX_SDA_MISO_PIN_MASK;
 562:Generated_Source\PSoC4/I2CS.c ****             #endif /* (I2CS_TX_SDA_MISO_PIN) */
 563:Generated_Source\PSoC4/I2CS.c ****             }
 564:Generated_Source\PSoC4/I2CS.c ****             else 
 565:Generated_Source\PSoC4/I2CS.c ****             {
 566:Generated_Source\PSoC4/I2CS.c ****                 /* (Master) */
 567:Generated_Source\PSoC4/I2CS.c ****                 pinsDm[I2CS_RX_SCL_MOSI_PIN_INDEX] = I2CS_PIN_DM_STRONG;
 568:Generated_Source\PSoC4/I2CS.c ****                 pinsDm[I2CS_TX_SDA_MISO_PIN_INDEX] = I2CS_PIN_DM_DIG_HIZ;
 569:Generated_Source\PSoC4/I2CS.c ****                 pinsDm[I2CS_SCLK_PIN_INDEX] = I2CS_PIN_DM_STRONG;
 570:Generated_Source\PSoC4/I2CS.c **** 
 571:Generated_Source\PSoC4/I2CS.c ****             #if (I2CS_SS0_PIN)
 572:Generated_Source\PSoC4/I2CS.c ****                 hsiomSel [I2CS_SS0_PIN_INDEX] = I2CS_SS0_HSIOM_SEL_SPI;
 573:Generated_Source\PSoC4/I2CS.c ****                 pinsDm   [I2CS_SS0_PIN_INDEX] = I2CS_PIN_DM_STRONG;
 574:Generated_Source\PSoC4/I2CS.c ****                 pinsInBuf |= I2CS_SS0_PIN_MASK;
 575:Generated_Source\PSoC4/I2CS.c ****             #endif /* (I2CS_SS0_PIN) */
 576:Generated_Source\PSoC4/I2CS.c **** 
 577:Generated_Source\PSoC4/I2CS.c ****             #if (I2CS_SS1_PIN)
 578:Generated_Source\PSoC4/I2CS.c ****                 hsiomSel [I2CS_SS1_PIN_INDEX] = I2CS_SS1_HSIOM_SEL_SPI;
 579:Generated_Source\PSoC4/I2CS.c ****                 pinsDm   [I2CS_SS1_PIN_INDEX] = I2CS_PIN_DM_STRONG;
 580:Generated_Source\PSoC4/I2CS.c ****                 pinsInBuf |= I2CS_SS1_PIN_MASK;
 581:Generated_Source\PSoC4/I2CS.c ****             #endif /* (I2CS_SS1_PIN) */
 582:Generated_Source\PSoC4/I2CS.c **** 
 583:Generated_Source\PSoC4/I2CS.c ****             #if (I2CS_SS2_PIN)
 584:Generated_Source\PSoC4/I2CS.c ****                 hsiomSel [I2CS_SS2_PIN_INDEX] = I2CS_SS2_HSIOM_SEL_SPI;
 585:Generated_Source\PSoC4/I2CS.c ****                 pinsDm   [I2CS_SS2_PIN_INDEX] = I2CS_PIN_DM_STRONG;
 586:Generated_Source\PSoC4/I2CS.c ****                 pinsInBuf |= I2CS_SS2_PIN_MASK;
 587:Generated_Source\PSoC4/I2CS.c ****             #endif /* (I2CS_SS2_PIN) */
 588:Generated_Source\PSoC4/I2CS.c **** 
 589:Generated_Source\PSoC4/I2CS.c ****             #if (I2CS_SS3_PIN)
 590:Generated_Source\PSoC4/I2CS.c ****                 hsiomSel [I2CS_SS3_PIN_INDEX] = I2CS_SS3_HSIOM_SEL_SPI;
 591:Generated_Source\PSoC4/I2CS.c ****                 pinsDm   [I2CS_SS3_PIN_INDEX] = I2CS_PIN_DM_STRONG;
 592:Generated_Source\PSoC4/I2CS.c ****                 pinsInBuf |= I2CS_SS3_PIN_MASK;
 593:Generated_Source\PSoC4/I2CS.c ****             #endif /* (I2CS_SS3_PIN) */
 594:Generated_Source\PSoC4/I2CS.c **** 
 595:Generated_Source\PSoC4/I2CS.c ****                 /* Disable input buffers */
 596:Generated_Source\PSoC4/I2CS.c ****             #if (I2CS_RX_SCL_MOSI_PIN)
 597:Generated_Source\PSoC4/I2CS.c ****                 pinsInBuf |= I2CS_RX_SCL_MOSI_PIN_MASK;
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 19


 598:Generated_Source\PSoC4/I2CS.c ****             #elif (I2CS_RX_WAKE_SCL_MOSI_PIN)
 599:Generated_Source\PSoC4/I2CS.c ****                 pinsInBuf |= I2CS_RX_WAKE_SCL_MOSI_PIN_MASK;
 600:Generated_Source\PSoC4/I2CS.c ****             #else
 601:Generated_Source\PSoC4/I2CS.c ****             #endif /* (I2CS_RX_SCL_MOSI_PIN) */
 602:Generated_Source\PSoC4/I2CS.c **** 
 603:Generated_Source\PSoC4/I2CS.c ****             #if (I2CS_SCLK_PIN)
 604:Generated_Source\PSoC4/I2CS.c ****                 pinsInBuf |= I2CS_SCLK_PIN_MASK;
 605:Generated_Source\PSoC4/I2CS.c ****             #endif /* (I2CS_SCLK_PIN) */
 606:Generated_Source\PSoC4/I2CS.c ****             }
 607:Generated_Source\PSoC4/I2CS.c ****         }
 608:Generated_Source\PSoC4/I2CS.c ****         else /* UART */
 609:Generated_Source\PSoC4/I2CS.c ****         {
 610:Generated_Source\PSoC4/I2CS.c ****             if (I2CS_UART_MODE_SMARTCARD == subMode)
 611:Generated_Source\PSoC4/I2CS.c ****             {
 612:Generated_Source\PSoC4/I2CS.c ****                 /* SmartCard */
 613:Generated_Source\PSoC4/I2CS.c ****             #if (I2CS_TX_SDA_MISO_PIN)
 614:Generated_Source\PSoC4/I2CS.c ****                 hsiomSel[I2CS_TX_SDA_MISO_PIN_INDEX] = I2CS_TX_SDA_MISO_HSIOM_SEL_UART;
 615:Generated_Source\PSoC4/I2CS.c ****                 pinsDm  [I2CS_TX_SDA_MISO_PIN_INDEX] = I2CS_PIN_DM_OD_LO;
 616:Generated_Source\PSoC4/I2CS.c ****             #endif /* (I2CS_TX_SDA_MISO_PIN) */
 617:Generated_Source\PSoC4/I2CS.c ****             }
 618:Generated_Source\PSoC4/I2CS.c ****             else /* Standard or IrDA */
 619:Generated_Source\PSoC4/I2CS.c ****             {
 620:Generated_Source\PSoC4/I2CS.c ****                 if (0u != (I2CS_UART_RX_PIN_ENABLE & uartEnableMask))
 621:Generated_Source\PSoC4/I2CS.c ****                 {
 622:Generated_Source\PSoC4/I2CS.c ****                 #if (I2CS_RX_SCL_MOSI_PIN)
 623:Generated_Source\PSoC4/I2CS.c ****                     hsiomSel[I2CS_RX_SCL_MOSI_PIN_INDEX] = I2CS_RX_SCL_MOSI_HSIOM_SEL_UART;
 624:Generated_Source\PSoC4/I2CS.c ****                     pinsDm  [I2CS_RX_SCL_MOSI_PIN_INDEX] = I2CS_PIN_DM_DIG_HIZ;
 625:Generated_Source\PSoC4/I2CS.c ****                 #elif (I2CS_RX_WAKE_SCL_MOSI_PIN)
 626:Generated_Source\PSoC4/I2CS.c ****                     hsiomSel[I2CS_RX_WAKE_SCL_MOSI_PIN_INDEX] = I2CS_RX_WAKE_SCL_MOSI_HSIOM_SEL_UAR
 627:Generated_Source\PSoC4/I2CS.c ****                     pinsDm  [I2CS_RX_WAKE_SCL_MOSI_PIN_INDEX] = I2CS_PIN_DM_DIG_HIZ;
 628:Generated_Source\PSoC4/I2CS.c ****                 #else
 629:Generated_Source\PSoC4/I2CS.c ****                 #endif /* (I2CS_RX_SCL_MOSI_PIN) */
 630:Generated_Source\PSoC4/I2CS.c ****                 }
 631:Generated_Source\PSoC4/I2CS.c **** 
 632:Generated_Source\PSoC4/I2CS.c ****                 if (0u != (I2CS_UART_TX_PIN_ENABLE & uartEnableMask))
 633:Generated_Source\PSoC4/I2CS.c ****                 {
 634:Generated_Source\PSoC4/I2CS.c ****                 #if (I2CS_TX_SDA_MISO_PIN)
 635:Generated_Source\PSoC4/I2CS.c ****                     hsiomSel[I2CS_TX_SDA_MISO_PIN_INDEX] = I2CS_TX_SDA_MISO_HSIOM_SEL_UART;
 636:Generated_Source\PSoC4/I2CS.c ****                     pinsDm  [I2CS_TX_SDA_MISO_PIN_INDEX] = I2CS_PIN_DM_STRONG;
 637:Generated_Source\PSoC4/I2CS.c ****                     
 638:Generated_Source\PSoC4/I2CS.c ****                     /* Disable input buffer */
 639:Generated_Source\PSoC4/I2CS.c ****                     pinsInBuf |= I2CS_TX_SDA_MISO_PIN_MASK;
 640:Generated_Source\PSoC4/I2CS.c ****                 #endif /* (I2CS_TX_SDA_MISO_PIN) */
 641:Generated_Source\PSoC4/I2CS.c ****                 }
 642:Generated_Source\PSoC4/I2CS.c **** 
 643:Generated_Source\PSoC4/I2CS.c ****             #if !(I2CS_CY_SCBIP_V0 || I2CS_CY_SCBIP_V1)
 644:Generated_Source\PSoC4/I2CS.c ****                 if (I2CS_UART_MODE_STD == subMode)
 645:Generated_Source\PSoC4/I2CS.c ****                 {
 646:Generated_Source\PSoC4/I2CS.c ****                     if (0u != (I2CS_UART_CTS_PIN_ENABLE & uartEnableMask))
 647:Generated_Source\PSoC4/I2CS.c ****                     {
 648:Generated_Source\PSoC4/I2CS.c ****                         /* CTS input is multiplexed with SCLK */
 649:Generated_Source\PSoC4/I2CS.c ****                     #if (I2CS_SCLK_PIN)
 650:Generated_Source\PSoC4/I2CS.c ****                         hsiomSel[I2CS_SCLK_PIN_INDEX] = I2CS_SCLK_HSIOM_SEL_UART;
 651:Generated_Source\PSoC4/I2CS.c ****                         pinsDm  [I2CS_SCLK_PIN_INDEX] = I2CS_PIN_DM_DIG_HIZ;
 652:Generated_Source\PSoC4/I2CS.c ****                     #endif /* (I2CS_SCLK_PIN) */
 653:Generated_Source\PSoC4/I2CS.c ****                     }
 654:Generated_Source\PSoC4/I2CS.c **** 
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 20


 655:Generated_Source\PSoC4/I2CS.c ****                     if (0u != (I2CS_UART_RTS_PIN_ENABLE & uartEnableMask))
 656:Generated_Source\PSoC4/I2CS.c ****                     {
 657:Generated_Source\PSoC4/I2CS.c ****                         /* RTS output is multiplexed with SS0 */
 658:Generated_Source\PSoC4/I2CS.c ****                     #if (I2CS_SS0_PIN)
 659:Generated_Source\PSoC4/I2CS.c ****                         hsiomSel[I2CS_SS0_PIN_INDEX] = I2CS_SS0_HSIOM_SEL_UART;
 660:Generated_Source\PSoC4/I2CS.c ****                         pinsDm  [I2CS_SS0_PIN_INDEX] = I2CS_PIN_DM_STRONG;
 661:Generated_Source\PSoC4/I2CS.c ****                         
 662:Generated_Source\PSoC4/I2CS.c ****                         /* Disable input buffer */
 663:Generated_Source\PSoC4/I2CS.c ****                         pinsInBuf |= I2CS_SS0_PIN_MASK;
 664:Generated_Source\PSoC4/I2CS.c ****                     #endif /* (I2CS_SS0_PIN) */
 665:Generated_Source\PSoC4/I2CS.c ****                     }
 666:Generated_Source\PSoC4/I2CS.c ****                 }
 667:Generated_Source\PSoC4/I2CS.c ****             #endif /* !(I2CS_CY_SCBIP_V0 || I2CS_CY_SCBIP_V1) */
 668:Generated_Source\PSoC4/I2CS.c ****             }
 669:Generated_Source\PSoC4/I2CS.c ****         }
 670:Generated_Source\PSoC4/I2CS.c ****     #endif /* (!I2CS_CY_SCBIP_V1) */
 671:Generated_Source\PSoC4/I2CS.c **** 
 672:Generated_Source\PSoC4/I2CS.c ****     /* Configure pins: set HSIOM, DM and InputBufEnable */
 673:Generated_Source\PSoC4/I2CS.c ****     /* Note: the DR register settings do not effect the pin output if HSIOM is other than GPIO */
 674:Generated_Source\PSoC4/I2CS.c **** 
 675:Generated_Source\PSoC4/I2CS.c ****     #if (I2CS_RX_SCL_MOSI_PIN)
 676:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_HSIOM_SEL(I2CS_RX_SCL_MOSI_HSIOM_REG,
 677:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_RX_SCL_MOSI_HSIOM_MASK,
 678:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_RX_SCL_MOSI_HSIOM_POS,
 679:Generated_Source\PSoC4/I2CS.c ****                                         hsiomSel[I2CS_RX_SCL_MOSI_PIN_INDEX]);
 680:Generated_Source\PSoC4/I2CS.c **** 
 681:Generated_Source\PSoC4/I2CS.c ****         I2CS_uart_rx_i2c_scl_spi_mosi_SetDriveMode((uint8) pinsDm[I2CS_RX_SCL_MOSI_PIN_INDEX]);
 682:Generated_Source\PSoC4/I2CS.c **** 
 683:Generated_Source\PSoC4/I2CS.c ****         #if (!I2CS_CY_SCBIP_V1)
 684:Generated_Source\PSoC4/I2CS.c ****             I2CS_SET_INP_DIS(I2CS_uart_rx_i2c_scl_spi_mosi_INP_DIS,
 685:Generated_Source\PSoC4/I2CS.c ****                                          I2CS_uart_rx_i2c_scl_spi_mosi_MASK,
 686:Generated_Source\PSoC4/I2CS.c ****                                          (0u != (pinsInBuf & I2CS_RX_SCL_MOSI_PIN_MASK)));
 687:Generated_Source\PSoC4/I2CS.c ****         #endif /* (!I2CS_CY_SCBIP_V1) */
 688:Generated_Source\PSoC4/I2CS.c ****     
 689:Generated_Source\PSoC4/I2CS.c ****     #elif (I2CS_RX_WAKE_SCL_MOSI_PIN)
 690:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_HSIOM_SEL(I2CS_RX_WAKE_SCL_MOSI_HSIOM_REG,
 691:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_RX_WAKE_SCL_MOSI_HSIOM_MASK,
 692:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_RX_WAKE_SCL_MOSI_HSIOM_POS,
 693:Generated_Source\PSoC4/I2CS.c ****                                        hsiomSel[I2CS_RX_WAKE_SCL_MOSI_PIN_INDEX]);
 694:Generated_Source\PSoC4/I2CS.c **** 
 695:Generated_Source\PSoC4/I2CS.c ****         I2CS_uart_rx_wake_i2c_scl_spi_mosi_SetDriveMode((uint8)
 696:Generated_Source\PSoC4/I2CS.c ****                                                                pinsDm[I2CS_RX_WAKE_SCL_MOSI_PIN_IND
 697:Generated_Source\PSoC4/I2CS.c **** 
 698:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_INP_DIS(I2CS_uart_rx_wake_i2c_scl_spi_mosi_INP_DIS,
 699:Generated_Source\PSoC4/I2CS.c ****                                      I2CS_uart_rx_wake_i2c_scl_spi_mosi_MASK,
 700:Generated_Source\PSoC4/I2CS.c ****                                      (0u != (pinsInBuf & I2CS_RX_WAKE_SCL_MOSI_PIN_MASK)));
 701:Generated_Source\PSoC4/I2CS.c **** 
 702:Generated_Source\PSoC4/I2CS.c ****          /* Set interrupt on falling edge */
 703:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_INCFG_TYPE(I2CS_RX_WAKE_SCL_MOSI_INTCFG_REG,
 704:Generated_Source\PSoC4/I2CS.c ****                                         I2CS_RX_WAKE_SCL_MOSI_INTCFG_TYPE_MASK,
 705:Generated_Source\PSoC4/I2CS.c ****                                         I2CS_RX_WAKE_SCL_MOSI_INTCFG_TYPE_POS,
 706:Generated_Source\PSoC4/I2CS.c ****                                         I2CS_INTCFG_TYPE_FALLING_EDGE);
 707:Generated_Source\PSoC4/I2CS.c ****     #else
 708:Generated_Source\PSoC4/I2CS.c ****     #endif /* (I2CS_RX_WAKE_SCL_MOSI_PIN) */
 709:Generated_Source\PSoC4/I2CS.c **** 
 710:Generated_Source\PSoC4/I2CS.c ****     #if (I2CS_TX_SDA_MISO_PIN)
 711:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_HSIOM_SEL(I2CS_TX_SDA_MISO_HSIOM_REG,
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 21


 712:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_TX_SDA_MISO_HSIOM_MASK,
 713:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_TX_SDA_MISO_HSIOM_POS,
 714:Generated_Source\PSoC4/I2CS.c ****                                         hsiomSel[I2CS_TX_SDA_MISO_PIN_INDEX]);
 715:Generated_Source\PSoC4/I2CS.c **** 
 716:Generated_Source\PSoC4/I2CS.c ****         I2CS_uart_tx_i2c_sda_spi_miso_SetDriveMode((uint8) pinsDm[I2CS_TX_SDA_MISO_PIN_INDEX]);
 717:Generated_Source\PSoC4/I2CS.c **** 
 718:Generated_Source\PSoC4/I2CS.c ****     #if (!I2CS_CY_SCBIP_V1)
 719:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_INP_DIS(I2CS_uart_tx_i2c_sda_spi_miso_INP_DIS,
 720:Generated_Source\PSoC4/I2CS.c ****                                      I2CS_uart_tx_i2c_sda_spi_miso_MASK,
 721:Generated_Source\PSoC4/I2CS.c ****                                     (0u != (pinsInBuf & I2CS_TX_SDA_MISO_PIN_MASK)));
 722:Generated_Source\PSoC4/I2CS.c ****     #endif /* (!I2CS_CY_SCBIP_V1) */
 723:Generated_Source\PSoC4/I2CS.c ****     #endif /* (I2CS_RX_SCL_MOSI_PIN) */
 724:Generated_Source\PSoC4/I2CS.c **** 
 725:Generated_Source\PSoC4/I2CS.c ****     #if (I2CS_SCLK_PIN)
 726:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_HSIOM_SEL(I2CS_SCLK_HSIOM_REG,
 727:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_SCLK_HSIOM_MASK,
 728:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_SCLK_HSIOM_POS,
 729:Generated_Source\PSoC4/I2CS.c ****                                        hsiomSel[I2CS_SCLK_PIN_INDEX]);
 730:Generated_Source\PSoC4/I2CS.c **** 
 731:Generated_Source\PSoC4/I2CS.c ****         I2CS_spi_sclk_SetDriveMode((uint8) pinsDm[I2CS_SCLK_PIN_INDEX]);
 732:Generated_Source\PSoC4/I2CS.c **** 
 733:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_INP_DIS(I2CS_spi_sclk_INP_DIS,
 734:Generated_Source\PSoC4/I2CS.c ****                                      I2CS_spi_sclk_MASK,
 735:Generated_Source\PSoC4/I2CS.c ****                                      (0u != (pinsInBuf & I2CS_SCLK_PIN_MASK)));
 736:Generated_Source\PSoC4/I2CS.c ****     #endif /* (I2CS_SCLK_PIN) */
 737:Generated_Source\PSoC4/I2CS.c **** 
 738:Generated_Source\PSoC4/I2CS.c ****     #if (I2CS_SS0_PIN)
 739:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_HSIOM_SEL(I2CS_SS0_HSIOM_REG,
 740:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_SS0_HSIOM_MASK,
 741:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_SS0_HSIOM_POS,
 742:Generated_Source\PSoC4/I2CS.c ****                                        hsiomSel[I2CS_SS0_PIN_INDEX]);
 743:Generated_Source\PSoC4/I2CS.c **** 
 744:Generated_Source\PSoC4/I2CS.c ****         I2CS_spi_ss0_SetDriveMode((uint8) pinsDm[I2CS_SS0_PIN_INDEX]);
 745:Generated_Source\PSoC4/I2CS.c **** 
 746:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_INP_DIS(I2CS_spi_ss0_INP_DIS,
 747:Generated_Source\PSoC4/I2CS.c ****                                      I2CS_spi_ss0_MASK,
 748:Generated_Source\PSoC4/I2CS.c ****                                      (0u != (pinsInBuf & I2CS_SS0_PIN_MASK)));
 749:Generated_Source\PSoC4/I2CS.c ****     #endif /* (I2CS_SS0_PIN) */
 750:Generated_Source\PSoC4/I2CS.c **** 
 751:Generated_Source\PSoC4/I2CS.c ****     #if (I2CS_SS1_PIN)
 752:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_HSIOM_SEL(I2CS_SS1_HSIOM_REG,
 753:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_SS1_HSIOM_MASK,
 754:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_SS1_HSIOM_POS,
 755:Generated_Source\PSoC4/I2CS.c ****                                        hsiomSel[I2CS_SS1_PIN_INDEX]);
 756:Generated_Source\PSoC4/I2CS.c **** 
 757:Generated_Source\PSoC4/I2CS.c ****         I2CS_spi_ss1_SetDriveMode((uint8) pinsDm[I2CS_SS1_PIN_INDEX]);
 758:Generated_Source\PSoC4/I2CS.c **** 
 759:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_INP_DIS(I2CS_spi_ss1_INP_DIS,
 760:Generated_Source\PSoC4/I2CS.c ****                                      I2CS_spi_ss1_MASK,
 761:Generated_Source\PSoC4/I2CS.c ****                                      (0u != (pinsInBuf & I2CS_SS1_PIN_MASK)));
 762:Generated_Source\PSoC4/I2CS.c ****     #endif /* (I2CS_SS1_PIN) */
 763:Generated_Source\PSoC4/I2CS.c **** 
 764:Generated_Source\PSoC4/I2CS.c ****     #if (I2CS_SS2_PIN)
 765:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_HSIOM_SEL(I2CS_SS2_HSIOM_REG,
 766:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_SS2_HSIOM_MASK,
 767:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_SS2_HSIOM_POS,
 768:Generated_Source\PSoC4/I2CS.c ****                                        hsiomSel[I2CS_SS2_PIN_INDEX]);
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 22


 769:Generated_Source\PSoC4/I2CS.c **** 
 770:Generated_Source\PSoC4/I2CS.c ****         I2CS_spi_ss2_SetDriveMode((uint8) pinsDm[I2CS_SS2_PIN_INDEX]);
 771:Generated_Source\PSoC4/I2CS.c **** 
 772:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_INP_DIS(I2CS_spi_ss2_INP_DIS,
 773:Generated_Source\PSoC4/I2CS.c ****                                      I2CS_spi_ss2_MASK,
 774:Generated_Source\PSoC4/I2CS.c ****                                      (0u != (pinsInBuf & I2CS_SS2_PIN_MASK)));
 775:Generated_Source\PSoC4/I2CS.c ****     #endif /* (I2CS_SS2_PIN) */
 776:Generated_Source\PSoC4/I2CS.c **** 
 777:Generated_Source\PSoC4/I2CS.c ****     #if (I2CS_SS3_PIN)
 778:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_HSIOM_SEL(I2CS_SS3_HSIOM_REG,
 779:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_SS3_HSIOM_MASK,
 780:Generated_Source\PSoC4/I2CS.c ****                                        I2CS_SS3_HSIOM_POS,
 781:Generated_Source\PSoC4/I2CS.c ****                                        hsiomSel[I2CS_SS3_PIN_INDEX]);
 782:Generated_Source\PSoC4/I2CS.c **** 
 783:Generated_Source\PSoC4/I2CS.c ****         I2CS_spi_ss3_SetDriveMode((uint8) pinsDm[I2CS_SS3_PIN_INDEX]);
 784:Generated_Source\PSoC4/I2CS.c **** 
 785:Generated_Source\PSoC4/I2CS.c ****         I2CS_SET_INP_DIS(I2CS_spi_ss3_INP_DIS,
 786:Generated_Source\PSoC4/I2CS.c ****                                      I2CS_spi_ss3_MASK,
 787:Generated_Source\PSoC4/I2CS.c ****                                      (0u != (pinsInBuf & I2CS_SS3_PIN_MASK)));
 788:Generated_Source\PSoC4/I2CS.c ****     #endif /* (I2CS_SS3_PIN) */
 789:Generated_Source\PSoC4/I2CS.c ****     }
 790:Generated_Source\PSoC4/I2CS.c **** 
 791:Generated_Source\PSoC4/I2CS.c **** #endif /* (I2CS_SCB_MODE_UNCONFIG_CONST_CFG) */
 792:Generated_Source\PSoC4/I2CS.c **** 
 793:Generated_Source\PSoC4/I2CS.c **** 
 794:Generated_Source\PSoC4/I2CS.c **** #if (I2CS_CY_SCBIP_V0 || I2CS_CY_SCBIP_V1)
 795:Generated_Source\PSoC4/I2CS.c ****     /*******************************************************************************
 796:Generated_Source\PSoC4/I2CS.c ****     * Function Name: I2CS_I2CSlaveNackGeneration
 797:Generated_Source\PSoC4/I2CS.c ****     ****************************************************************************//**
 798:Generated_Source\PSoC4/I2CS.c ****     *
 799:Generated_Source\PSoC4/I2CS.c ****     *  Sets command to generate NACK to the address or data.
 800:Generated_Source\PSoC4/I2CS.c ****     *
 801:Generated_Source\PSoC4/I2CS.c ****     *******************************************************************************/
 802:Generated_Source\PSoC4/I2CS.c ****     void I2CS_I2CSlaveNackGeneration(void)
 803:Generated_Source\PSoC4/I2CS.c ****     {
 430              		.loc 1 803 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434 0000 80B5     		push	{r7, lr}
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 7, -8
 437              		.cfi_offset 14, -4
 438 0002 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 804:Generated_Source\PSoC4/I2CS.c ****         /* Check for EC_AM toggle condition: EC_AM and clock stretching for address are enabled */
 805:Generated_Source\PSoC4/I2CS.c ****         if ((0u != (I2CS_CTRL_REG & I2CS_CTRL_EC_AM_MODE)) &&
 440              		.loc 1 805 0
 441 0004 0F4B     		ldr	r3, .L26
 442 0006 1A68     		ldr	r2, [r3]
 443 0008 8023     		movs	r3, #128
 444 000a 5B00     		lsls	r3, r3, #1
 445 000c 1340     		ands	r3, r2
 446 000e 12D0     		beq	.L25
 806:Generated_Source\PSoC4/I2CS.c ****             (0u == (I2CS_I2C_CTRL_REG & I2CS_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 447              		.loc 1 806 0 discriminator 1
 448 0010 0D4B     		ldr	r3, .L26+4
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 23


 449 0012 1A68     		ldr	r2, [r3]
 450 0014 8023     		movs	r3, #128
 451 0016 DB01     		lsls	r3, r3, #7
 452 0018 1340     		ands	r3, r2
 805:Generated_Source\PSoC4/I2CS.c ****             (0u == (I2CS_I2C_CTRL_REG & I2CS_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 453              		.loc 1 805 0 discriminator 1
 454 001a 0CD1     		bne	.L25
 807:Generated_Source\PSoC4/I2CS.c ****         {
 808:Generated_Source\PSoC4/I2CS.c ****             /* Toggle EC_AM before NACK generation */
 809:Generated_Source\PSoC4/I2CS.c ****             I2CS_CTRL_REG &= ~I2CS_CTRL_EC_AM_MODE;
 455              		.loc 1 809 0
 456 001c 094B     		ldr	r3, .L26
 457 001e 094A     		ldr	r2, .L26
 458 0020 1268     		ldr	r2, [r2]
 459 0022 0A49     		ldr	r1, .L26+8
 460 0024 0A40     		ands	r2, r1
 461 0026 1A60     		str	r2, [r3]
 810:Generated_Source\PSoC4/I2CS.c ****             I2CS_CTRL_REG |=  I2CS_CTRL_EC_AM_MODE;
 462              		.loc 1 810 0
 463 0028 064B     		ldr	r3, .L26
 464 002a 064A     		ldr	r2, .L26
 465 002c 1268     		ldr	r2, [r2]
 466 002e 8021     		movs	r1, #128
 467 0030 4900     		lsls	r1, r1, #1
 468 0032 0A43     		orrs	r2, r1
 469 0034 1A60     		str	r2, [r3]
 470              	.L25:
 811:Generated_Source\PSoC4/I2CS.c ****         }
 812:Generated_Source\PSoC4/I2CS.c **** 
 813:Generated_Source\PSoC4/I2CS.c ****         I2CS_I2C_SLAVE_CMD_REG = I2CS_I2C_SLAVE_CMD_S_NACK;
 471              		.loc 1 813 0
 472 0036 064B     		ldr	r3, .L26+12
 473 0038 0222     		movs	r2, #2
 474 003a 1A60     		str	r2, [r3]
 814:Generated_Source\PSoC4/I2CS.c ****     }
 475              		.loc 1 814 0
 476 003c C046     		nop
 477 003e BD46     		mov	sp, r7
 478              		@ sp needed
 479 0040 80BD     		pop	{r7, pc}
 480              	.L27:
 481 0042 C046     		.align	2
 482              	.L26:
 483 0044 00000640 		.word	1074135040
 484 0048 60000640 		.word	1074135136
 485 004c FFFEFFFF 		.word	-257
 486 0050 6C000640 		.word	1074135148
 487              		.cfi_endproc
 488              	.LFE10:
 489              		.size	I2CS_I2CSlaveNackGeneration, .-I2CS_I2CSlaveNackGeneration
 490              		.text
 491              	.Letext0:
 492              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 493              		.section	.debug_info,"",%progbits
 494              	.Ldebug_info0:
 495 0000 F9010000 		.4byte	0x1f9
 496 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 24


 497 0006 00000000 		.4byte	.Ldebug_abbrev0
 498 000a 04       		.byte	0x4
 499 000b 01       		.uleb128 0x1
 500 000c 0A010000 		.4byte	.LASF34
 501 0010 0C       		.byte	0xc
 502 0011 D8010000 		.4byte	.LASF35
 503 0015 65000000 		.4byte	.LASF36
 504 0019 00000000 		.4byte	.Ldebug_ranges0+0
 505 001d 00000000 		.4byte	0
 506 0021 00000000 		.4byte	.Ldebug_line0
 507 0025 02       		.uleb128 0x2
 508 0026 01       		.byte	0x1
 509 0027 06       		.byte	0x6
 510 0028 87020000 		.4byte	.LASF0
 511 002c 02       		.uleb128 0x2
 512 002d 01       		.byte	0x1
 513 002e 08       		.byte	0x8
 514 002f C5000000 		.4byte	.LASF1
 515 0033 02       		.uleb128 0x2
 516 0034 02       		.byte	0x2
 517 0035 05       		.byte	0x5
 518 0036 3C020000 		.4byte	.LASF2
 519 003a 02       		.uleb128 0x2
 520 003b 02       		.byte	0x2
 521 003c 07       		.byte	0x7
 522 003d 52000000 		.4byte	.LASF3
 523 0041 02       		.uleb128 0x2
 524 0042 04       		.byte	0x4
 525 0043 05       		.byte	0x5
 526 0044 68020000 		.4byte	.LASF4
 527 0048 02       		.uleb128 0x2
 528 0049 04       		.byte	0x4
 529 004a 07       		.byte	0x7
 530 004b F2000000 		.4byte	.LASF5
 531 004f 02       		.uleb128 0x2
 532 0050 08       		.byte	0x8
 533 0051 05       		.byte	0x5
 534 0052 29020000 		.4byte	.LASF6
 535 0056 02       		.uleb128 0x2
 536 0057 08       		.byte	0x8
 537 0058 07       		.byte	0x7
 538 0059 F6010000 		.4byte	.LASF7
 539 005d 03       		.uleb128 0x3
 540 005e 04       		.byte	0x4
 541 005f 05       		.byte	0x5
 542 0060 696E7400 		.ascii	"int\000"
 543 0064 02       		.uleb128 0x2
 544 0065 04       		.byte	0x4
 545 0066 07       		.byte	0x7
 546 0067 CB010000 		.4byte	.LASF8
 547 006b 04       		.uleb128 0x4
 548 006c 04010000 		.4byte	.LASF9
 549 0070 02       		.byte	0x2
 550 0071 D201     		.2byte	0x1d2
 551 0073 2C000000 		.4byte	0x2c
 552 0077 04       		.uleb128 0x4
 553 0078 C4010000 		.4byte	.LASF10
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 25


 554 007c 02       		.byte	0x2
 555 007d D401     		.2byte	0x1d4
 556 007f 48000000 		.4byte	0x48
 557 0083 02       		.uleb128 0x2
 558 0084 04       		.byte	0x4
 559 0085 04       		.byte	0x4
 560 0086 BF000000 		.4byte	.LASF11
 561 008a 02       		.uleb128 0x2
 562 008b 08       		.byte	0x8
 563 008c 04       		.byte	0x4
 564 008d 98010000 		.4byte	.LASF12
 565 0091 02       		.uleb128 0x2
 566 0092 01       		.byte	0x1
 567 0093 08       		.byte	0x8
 568 0094 37020000 		.4byte	.LASF13
 569 0098 04       		.uleb128 0x4
 570 0099 0B000000 		.4byte	.LASF14
 571 009d 02       		.byte	0x2
 572 009e 7E02     		.2byte	0x27e
 573 00a0 A4000000 		.4byte	0xa4
 574 00a4 05       		.uleb128 0x5
 575 00a5 77000000 		.4byte	0x77
 576 00a9 06       		.uleb128 0x6
 577 00aa 04       		.byte	0x4
 578 00ab AF000000 		.4byte	0xaf
 579 00af 07       		.uleb128 0x7
 580 00b0 02       		.uleb128 0x2
 581 00b1 08       		.byte	0x8
 582 00b2 04       		.byte	0x4
 583 00b3 7B020000 		.4byte	.LASF15
 584 00b7 02       		.uleb128 0x2
 585 00b8 04       		.byte	0x4
 586 00b9 07       		.byte	0x7
 587 00ba 20020000 		.4byte	.LASF16
 588 00be 08       		.uleb128 0x8
 589 00bf 71020000 		.4byte	.LASF17
 590 00c3 01       		.byte	0x1
 591 00c4 7B       		.byte	0x7b
 592 00c5 00000000 		.4byte	.LFB0
 593 00c9 0E000000 		.4byte	.LFE0-.LFB0
 594 00cd 01       		.uleb128 0x1
 595 00ce 9C       		.byte	0x9c
 596 00cf 08       		.uleb128 0x8
 597 00d0 B8010000 		.4byte	.LASF18
 598 00d4 01       		.byte	0x1
 599 00d5 AB       		.byte	0xab
 600 00d6 00000000 		.4byte	.LFB1
 601 00da 24000000 		.4byte	.LFE1-.LFB1
 602 00de 01       		.uleb128 0x1
 603 00df 9C       		.byte	0x9c
 604 00e0 08       		.uleb128 0x8
 605 00e1 00000000 		.4byte	.LASF19
 606 00e5 01       		.byte	0x1
 607 00e6 D2       		.byte	0xd2
 608 00e7 00000000 		.4byte	.LFB2
 609 00eb 24000000 		.4byte	.LFE2-.LFB2
 610 00ef 01       		.uleb128 0x1
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 26


 611 00f0 9C       		.byte	0x9c
 612 00f1 08       		.uleb128 0x8
 613 00f2 B5000000 		.4byte	.LASF20
 614 00f6 01       		.byte	0x1
 615 00f7 EF       		.byte	0xef
 616 00f8 00000000 		.4byte	.LFB3
 617 00fc 34000000 		.4byte	.LFE3-.LFB3
 618 0100 01       		.uleb128 0x1
 619 0101 9C       		.byte	0x9c
 620 0102 09       		.uleb128 0x9
 621 0103 11000000 		.4byte	.LASF21
 622 0107 01       		.byte	0x1
 623 0108 1701     		.2byte	0x117
 624 010a 00000000 		.4byte	.LFB4
 625 010e 34000000 		.4byte	.LFE4-.LFB4
 626 0112 01       		.uleb128 0x1
 627 0113 9C       		.byte	0x9c
 628 0114 37010000 		.4byte	0x137
 629 0118 0A       		.uleb128 0xa
 630 0119 4C000000 		.4byte	.LASF23
 631 011d 01       		.byte	0x1
 632 011e 1701     		.2byte	0x117
 633 0120 77000000 		.4byte	0x77
 634 0124 02       		.uleb128 0x2
 635 0125 91       		.byte	0x91
 636 0126 6C       		.sleb128 -20
 637 0127 0B       		.uleb128 0xb
 638 0128 5D020000 		.4byte	.LASF24
 639 012c 01       		.byte	0x1
 640 012d 1901     		.2byte	0x119
 641 012f 77000000 		.4byte	0x77
 642 0133 02       		.uleb128 0x2
 643 0134 91       		.byte	0x91
 644 0135 74       		.sleb128 -12
 645 0136 00       		.byte	0
 646 0137 09       		.uleb128 0x9
 647 0138 A4010000 		.4byte	.LASF22
 648 013c 01       		.byte	0x1
 649 013d 3001     		.2byte	0x130
 650 013f 00000000 		.4byte	.LFB5
 651 0143 34000000 		.4byte	.LFE5-.LFB5
 652 0147 01       		.uleb128 0x1
 653 0148 9C       		.byte	0x9c
 654 0149 6C010000 		.4byte	0x16c
 655 014d 0A       		.uleb128 0xa
 656 014e 4C000000 		.4byte	.LASF23
 657 0152 01       		.byte	0x1
 658 0153 3001     		.2byte	0x130
 659 0155 77000000 		.4byte	0x77
 660 0159 02       		.uleb128 0x2
 661 015a 91       		.byte	0x91
 662 015b 6C       		.sleb128 -20
 663 015c 0B       		.uleb128 0xb
 664 015d 25000000 		.4byte	.LASF25
 665 0161 01       		.byte	0x1
 666 0162 3201     		.2byte	0x132
 667 0164 77000000 		.4byte	0x77
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 27


 668 0168 02       		.uleb128 0x2
 669 0169 91       		.byte	0x91
 670 016a 74       		.sleb128 -12
 671 016b 00       		.byte	0
 672 016c 09       		.uleb128 0x9
 673 016d D3000000 		.4byte	.LASF26
 674 0171 01       		.byte	0x1
 675 0172 4F01     		.2byte	0x14f
 676 0174 00000000 		.4byte	.LFB6
 677 0178 1C000000 		.4byte	.LFE6-.LFB6
 678 017c 01       		.uleb128 0x1
 679 017d 9C       		.byte	0x9c
 680 017e 92010000 		.4byte	0x192
 681 0182 0A       		.uleb128 0xa
 682 0183 9F010000 		.4byte	.LASF27
 683 0187 01       		.byte	0x1
 684 0188 4F01     		.2byte	0x14f
 685 018a A9000000 		.4byte	0xa9
 686 018e 02       		.uleb128 0x2
 687 018f 91       		.byte	0x91
 688 0190 74       		.sleb128 -12
 689 0191 00       		.byte	0
 690 0192 0C       		.uleb128 0xc
 691 0193 0D020000 		.4byte	.LASF28
 692 0197 01       		.byte	0x1
 693 0198 6401     		.2byte	0x164
 694 019a 00000000 		.4byte	.LFB7
 695 019e 10000000 		.4byte	.LFE7-.LFB7
 696 01a2 01       		.uleb128 0x1
 697 01a3 9C       		.byte	0x9c
 698 01a4 0D       		.uleb128 0xd
 699 01a5 A4020000 		.4byte	.LASF29
 700 01a9 01       		.byte	0x1
 701 01aa 7D01     		.2byte	0x17d
 702 01ac 00000000 		.4byte	.LFB8
 703 01b0 0A000000 		.4byte	.LFE8-.LFB8
 704 01b4 01       		.uleb128 0x1
 705 01b5 9C       		.byte	0x9c
 706 01b6 0C       		.uleb128 0xc
 707 01b7 93020000 		.4byte	.LASF30
 708 01bb 01       		.byte	0x1
 709 01bc A201     		.2byte	0x1a2
 710 01be 00000000 		.4byte	.LFB9
 711 01c2 0E000000 		.4byte	.LFE9-.LFB9
 712 01c6 01       		.uleb128 0x1
 713 01c7 9C       		.byte	0x9c
 714 01c8 0E       		.uleb128 0xe
 715 01c9 30000000 		.4byte	.LASF31
 716 01cd 01       		.byte	0x1
 717 01ce 2203     		.2byte	0x322
 718 01d0 00000000 		.4byte	.LFB10
 719 01d4 54000000 		.4byte	.LFE10-.LFB10
 720 01d8 01       		.uleb128 0x1
 721 01d9 9C       		.byte	0x9c
 722 01da 0F       		.uleb128 0xf
 723 01db A8000000 		.4byte	.LASF32
 724 01df 01       		.byte	0x1
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 28


 725 01e0 51       		.byte	0x51
 726 01e1 6B000000 		.4byte	0x6b
 727 01e5 05       		.uleb128 0x5
 728 01e6 03       		.byte	0x3
 729 01e7 00000000 		.4byte	I2CS_initVar
 730 01eb 0F       		.uleb128 0xf
 731 01ec 46020000 		.4byte	.LASF33
 732 01f0 01       		.byte	0x1
 733 01f1 61       		.byte	0x61
 734 01f2 A9000000 		.4byte	0xa9
 735 01f6 05       		.uleb128 0x5
 736 01f7 03       		.byte	0x3
 737 01f8 00000000 		.4byte	I2CS_customIntrHandler
 738 01fc 00       		.byte	0
 739              		.section	.debug_abbrev,"",%progbits
 740              	.Ldebug_abbrev0:
 741 0000 01       		.uleb128 0x1
 742 0001 11       		.uleb128 0x11
 743 0002 01       		.byte	0x1
 744 0003 25       		.uleb128 0x25
 745 0004 0E       		.uleb128 0xe
 746 0005 13       		.uleb128 0x13
 747 0006 0B       		.uleb128 0xb
 748 0007 03       		.uleb128 0x3
 749 0008 0E       		.uleb128 0xe
 750 0009 1B       		.uleb128 0x1b
 751 000a 0E       		.uleb128 0xe
 752 000b 55       		.uleb128 0x55
 753 000c 17       		.uleb128 0x17
 754 000d 11       		.uleb128 0x11
 755 000e 01       		.uleb128 0x1
 756 000f 10       		.uleb128 0x10
 757 0010 17       		.uleb128 0x17
 758 0011 00       		.byte	0
 759 0012 00       		.byte	0
 760 0013 02       		.uleb128 0x2
 761 0014 24       		.uleb128 0x24
 762 0015 00       		.byte	0
 763 0016 0B       		.uleb128 0xb
 764 0017 0B       		.uleb128 0xb
 765 0018 3E       		.uleb128 0x3e
 766 0019 0B       		.uleb128 0xb
 767 001a 03       		.uleb128 0x3
 768 001b 0E       		.uleb128 0xe
 769 001c 00       		.byte	0
 770 001d 00       		.byte	0
 771 001e 03       		.uleb128 0x3
 772 001f 24       		.uleb128 0x24
 773 0020 00       		.byte	0
 774 0021 0B       		.uleb128 0xb
 775 0022 0B       		.uleb128 0xb
 776 0023 3E       		.uleb128 0x3e
 777 0024 0B       		.uleb128 0xb
 778 0025 03       		.uleb128 0x3
 779 0026 08       		.uleb128 0x8
 780 0027 00       		.byte	0
 781 0028 00       		.byte	0
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 29


 782 0029 04       		.uleb128 0x4
 783 002a 16       		.uleb128 0x16
 784 002b 00       		.byte	0
 785 002c 03       		.uleb128 0x3
 786 002d 0E       		.uleb128 0xe
 787 002e 3A       		.uleb128 0x3a
 788 002f 0B       		.uleb128 0xb
 789 0030 3B       		.uleb128 0x3b
 790 0031 05       		.uleb128 0x5
 791 0032 49       		.uleb128 0x49
 792 0033 13       		.uleb128 0x13
 793 0034 00       		.byte	0
 794 0035 00       		.byte	0
 795 0036 05       		.uleb128 0x5
 796 0037 35       		.uleb128 0x35
 797 0038 00       		.byte	0
 798 0039 49       		.uleb128 0x49
 799 003a 13       		.uleb128 0x13
 800 003b 00       		.byte	0
 801 003c 00       		.byte	0
 802 003d 06       		.uleb128 0x6
 803 003e 0F       		.uleb128 0xf
 804 003f 00       		.byte	0
 805 0040 0B       		.uleb128 0xb
 806 0041 0B       		.uleb128 0xb
 807 0042 49       		.uleb128 0x49
 808 0043 13       		.uleb128 0x13
 809 0044 00       		.byte	0
 810 0045 00       		.byte	0
 811 0046 07       		.uleb128 0x7
 812 0047 15       		.uleb128 0x15
 813 0048 00       		.byte	0
 814 0049 27       		.uleb128 0x27
 815 004a 19       		.uleb128 0x19
 816 004b 00       		.byte	0
 817 004c 00       		.byte	0
 818 004d 08       		.uleb128 0x8
 819 004e 2E       		.uleb128 0x2e
 820 004f 00       		.byte	0
 821 0050 3F       		.uleb128 0x3f
 822 0051 19       		.uleb128 0x19
 823 0052 03       		.uleb128 0x3
 824 0053 0E       		.uleb128 0xe
 825 0054 3A       		.uleb128 0x3a
 826 0055 0B       		.uleb128 0xb
 827 0056 3B       		.uleb128 0x3b
 828 0057 0B       		.uleb128 0xb
 829 0058 27       		.uleb128 0x27
 830 0059 19       		.uleb128 0x19
 831 005a 11       		.uleb128 0x11
 832 005b 01       		.uleb128 0x1
 833 005c 12       		.uleb128 0x12
 834 005d 06       		.uleb128 0x6
 835 005e 40       		.uleb128 0x40
 836 005f 18       		.uleb128 0x18
 837 0060 9642     		.uleb128 0x2116
 838 0062 19       		.uleb128 0x19
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 30


 839 0063 00       		.byte	0
 840 0064 00       		.byte	0
 841 0065 09       		.uleb128 0x9
 842 0066 2E       		.uleb128 0x2e
 843 0067 01       		.byte	0x1
 844 0068 3F       		.uleb128 0x3f
 845 0069 19       		.uleb128 0x19
 846 006a 03       		.uleb128 0x3
 847 006b 0E       		.uleb128 0xe
 848 006c 3A       		.uleb128 0x3a
 849 006d 0B       		.uleb128 0xb
 850 006e 3B       		.uleb128 0x3b
 851 006f 05       		.uleb128 0x5
 852 0070 27       		.uleb128 0x27
 853 0071 19       		.uleb128 0x19
 854 0072 11       		.uleb128 0x11
 855 0073 01       		.uleb128 0x1
 856 0074 12       		.uleb128 0x12
 857 0075 06       		.uleb128 0x6
 858 0076 40       		.uleb128 0x40
 859 0077 18       		.uleb128 0x18
 860 0078 9742     		.uleb128 0x2117
 861 007a 19       		.uleb128 0x19
 862 007b 01       		.uleb128 0x1
 863 007c 13       		.uleb128 0x13
 864 007d 00       		.byte	0
 865 007e 00       		.byte	0
 866 007f 0A       		.uleb128 0xa
 867 0080 05       		.uleb128 0x5
 868 0081 00       		.byte	0
 869 0082 03       		.uleb128 0x3
 870 0083 0E       		.uleb128 0xe
 871 0084 3A       		.uleb128 0x3a
 872 0085 0B       		.uleb128 0xb
 873 0086 3B       		.uleb128 0x3b
 874 0087 05       		.uleb128 0x5
 875 0088 49       		.uleb128 0x49
 876 0089 13       		.uleb128 0x13
 877 008a 02       		.uleb128 0x2
 878 008b 18       		.uleb128 0x18
 879 008c 00       		.byte	0
 880 008d 00       		.byte	0
 881 008e 0B       		.uleb128 0xb
 882 008f 34       		.uleb128 0x34
 883 0090 00       		.byte	0
 884 0091 03       		.uleb128 0x3
 885 0092 0E       		.uleb128 0xe
 886 0093 3A       		.uleb128 0x3a
 887 0094 0B       		.uleb128 0xb
 888 0095 3B       		.uleb128 0x3b
 889 0096 05       		.uleb128 0x5
 890 0097 49       		.uleb128 0x49
 891 0098 13       		.uleb128 0x13
 892 0099 02       		.uleb128 0x2
 893 009a 18       		.uleb128 0x18
 894 009b 00       		.byte	0
 895 009c 00       		.byte	0
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 31


 896 009d 0C       		.uleb128 0xc
 897 009e 2E       		.uleb128 0x2e
 898 009f 00       		.byte	0
 899 00a0 03       		.uleb128 0x3
 900 00a1 0E       		.uleb128 0xe
 901 00a2 3A       		.uleb128 0x3a
 902 00a3 0B       		.uleb128 0xb
 903 00a4 3B       		.uleb128 0x3b
 904 00a5 05       		.uleb128 0x5
 905 00a6 27       		.uleb128 0x27
 906 00a7 19       		.uleb128 0x19
 907 00a8 11       		.uleb128 0x11
 908 00a9 01       		.uleb128 0x1
 909 00aa 12       		.uleb128 0x12
 910 00ab 06       		.uleb128 0x6
 911 00ac 40       		.uleb128 0x40
 912 00ad 18       		.uleb128 0x18
 913 00ae 9642     		.uleb128 0x2116
 914 00b0 19       		.uleb128 0x19
 915 00b1 00       		.byte	0
 916 00b2 00       		.byte	0
 917 00b3 0D       		.uleb128 0xd
 918 00b4 2E       		.uleb128 0x2e
 919 00b5 00       		.byte	0
 920 00b6 03       		.uleb128 0x3
 921 00b7 0E       		.uleb128 0xe
 922 00b8 3A       		.uleb128 0x3a
 923 00b9 0B       		.uleb128 0xb
 924 00ba 3B       		.uleb128 0x3b
 925 00bb 05       		.uleb128 0x5
 926 00bc 27       		.uleb128 0x27
 927 00bd 19       		.uleb128 0x19
 928 00be 11       		.uleb128 0x11
 929 00bf 01       		.uleb128 0x1
 930 00c0 12       		.uleb128 0x12
 931 00c1 06       		.uleb128 0x6
 932 00c2 40       		.uleb128 0x40
 933 00c3 18       		.uleb128 0x18
 934 00c4 9742     		.uleb128 0x2117
 935 00c6 19       		.uleb128 0x19
 936 00c7 00       		.byte	0
 937 00c8 00       		.byte	0
 938 00c9 0E       		.uleb128 0xe
 939 00ca 2E       		.uleb128 0x2e
 940 00cb 00       		.byte	0
 941 00cc 3F       		.uleb128 0x3f
 942 00cd 19       		.uleb128 0x19
 943 00ce 03       		.uleb128 0x3
 944 00cf 0E       		.uleb128 0xe
 945 00d0 3A       		.uleb128 0x3a
 946 00d1 0B       		.uleb128 0xb
 947 00d2 3B       		.uleb128 0x3b
 948 00d3 05       		.uleb128 0x5
 949 00d4 27       		.uleb128 0x27
 950 00d5 19       		.uleb128 0x19
 951 00d6 11       		.uleb128 0x11
 952 00d7 01       		.uleb128 0x1
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 32


 953 00d8 12       		.uleb128 0x12
 954 00d9 06       		.uleb128 0x6
 955 00da 40       		.uleb128 0x40
 956 00db 18       		.uleb128 0x18
 957 00dc 9742     		.uleb128 0x2117
 958 00de 19       		.uleb128 0x19
 959 00df 00       		.byte	0
 960 00e0 00       		.byte	0
 961 00e1 0F       		.uleb128 0xf
 962 00e2 34       		.uleb128 0x34
 963 00e3 00       		.byte	0
 964 00e4 03       		.uleb128 0x3
 965 00e5 0E       		.uleb128 0xe
 966 00e6 3A       		.uleb128 0x3a
 967 00e7 0B       		.uleb128 0xb
 968 00e8 3B       		.uleb128 0x3b
 969 00e9 0B       		.uleb128 0xb
 970 00ea 49       		.uleb128 0x49
 971 00eb 13       		.uleb128 0x13
 972 00ec 3F       		.uleb128 0x3f
 973 00ed 19       		.uleb128 0x19
 974 00ee 02       		.uleb128 0x2
 975 00ef 18       		.uleb128 0x18
 976 00f0 00       		.byte	0
 977 00f1 00       		.byte	0
 978 00f2 00       		.byte	0
 979              		.section	.debug_aranges,"",%progbits
 980 0000 6C000000 		.4byte	0x6c
 981 0004 0200     		.2byte	0x2
 982 0006 00000000 		.4byte	.Ldebug_info0
 983 000a 04       		.byte	0x4
 984 000b 00       		.byte	0
 985 000c 0000     		.2byte	0
 986 000e 0000     		.2byte	0
 987 0010 00000000 		.4byte	.LFB0
 988 0014 0E000000 		.4byte	.LFE0-.LFB0
 989 0018 00000000 		.4byte	.LFB1
 990 001c 24000000 		.4byte	.LFE1-.LFB1
 991 0020 00000000 		.4byte	.LFB2
 992 0024 24000000 		.4byte	.LFE2-.LFB2
 993 0028 00000000 		.4byte	.LFB3
 994 002c 34000000 		.4byte	.LFE3-.LFB3
 995 0030 00000000 		.4byte	.LFB4
 996 0034 34000000 		.4byte	.LFE4-.LFB4
 997 0038 00000000 		.4byte	.LFB5
 998 003c 34000000 		.4byte	.LFE5-.LFB5
 999 0040 00000000 		.4byte	.LFB6
 1000 0044 1C000000 		.4byte	.LFE6-.LFB6
 1001 0048 00000000 		.4byte	.LFB7
 1002 004c 10000000 		.4byte	.LFE7-.LFB7
 1003 0050 00000000 		.4byte	.LFB8
 1004 0054 0A000000 		.4byte	.LFE8-.LFB8
 1005 0058 00000000 		.4byte	.LFB9
 1006 005c 0E000000 		.4byte	.LFE9-.LFB9
 1007 0060 00000000 		.4byte	.LFB10
 1008 0064 54000000 		.4byte	.LFE10-.LFB10
 1009 0068 00000000 		.4byte	0
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 33


 1010 006c 00000000 		.4byte	0
 1011              		.section	.debug_ranges,"",%progbits
 1012              	.Ldebug_ranges0:
 1013 0000 00000000 		.4byte	.LFB0
 1014 0004 0E000000 		.4byte	.LFE0
 1015 0008 00000000 		.4byte	.LFB1
 1016 000c 24000000 		.4byte	.LFE1
 1017 0010 00000000 		.4byte	.LFB2
 1018 0014 24000000 		.4byte	.LFE2
 1019 0018 00000000 		.4byte	.LFB3
 1020 001c 34000000 		.4byte	.LFE3
 1021 0020 00000000 		.4byte	.LFB4
 1022 0024 34000000 		.4byte	.LFE4
 1023 0028 00000000 		.4byte	.LFB5
 1024 002c 34000000 		.4byte	.LFE5
 1025 0030 00000000 		.4byte	.LFB6
 1026 0034 1C000000 		.4byte	.LFE6
 1027 0038 00000000 		.4byte	.LFB7
 1028 003c 10000000 		.4byte	.LFE7
 1029 0040 00000000 		.4byte	.LFB8
 1030 0044 0A000000 		.4byte	.LFE8
 1031 0048 00000000 		.4byte	.LFB9
 1032 004c 0E000000 		.4byte	.LFE9
 1033 0050 00000000 		.4byte	.LFB10
 1034 0054 54000000 		.4byte	.LFE10
 1035 0058 00000000 		.4byte	0
 1036 005c 00000000 		.4byte	0
 1037              		.section	.debug_line,"",%progbits
 1038              	.Ldebug_line0:
 1039 0000 38010000 		.section	.debug_str,"MS",%progbits,1
 1039      02004100 
 1039      00000201 
 1039      FB0E0D00 
 1039      01010101 
 1040              	.LASF19:
 1041 0000 49324353 		.ascii	"I2CS_Start\000"
 1041      5F537461 
 1041      727400
 1042              	.LASF14:
 1043 000b 72656733 		.ascii	"reg32\000"
 1043      3200
 1044              	.LASF21:
 1045 0011 49324353 		.ascii	"I2CS_SetRxFifoLevel\000"
 1045      5F536574 
 1045      52784669 
 1045      666F4C65 
 1045      76656C00 
 1046              	.LASF25:
 1047 0025 74784669 		.ascii	"txFifoCtrl\000"
 1047      666F4374 
 1047      726C00
 1048              	.LASF31:
 1049 0030 49324353 		.ascii	"I2CS_I2CSlaveNackGeneration\000"
 1049      5F493243 
 1049      536C6176 
 1049      654E6163 
 1049      6B47656E 
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 34


 1050              	.LASF23:
 1051 004c 6C657665 		.ascii	"level\000"
 1051      6C00
 1052              	.LASF3:
 1053 0052 73686F72 		.ascii	"short unsigned int\000"
 1053      7420756E 
 1053      7369676E 
 1053      65642069 
 1053      6E7400
 1054              	.LASF36:
 1055 0065 433A5C55 		.ascii	"C:\\Users\\James Sun\\Documents\\Git\\Whackamole\\W"
 1055      73657273 
 1055      5C4A616D 
 1055      65732053 
 1055      756E5C44 
 1056 0092 6861636B 		.ascii	"hackamole\\Slave.cydsn\000"
 1056      616D6F6C 
 1056      655C536C 
 1056      6176652E 
 1056      63796473 
 1057              	.LASF32:
 1058 00a8 49324353 		.ascii	"I2CS_initVar\000"
 1058      5F696E69 
 1058      74566172 
 1058      00
 1059              	.LASF20:
 1060 00b5 49324353 		.ascii	"I2CS_Stop\000"
 1060      5F53746F 
 1060      7000
 1061              	.LASF11:
 1062 00bf 666C6F61 		.ascii	"float\000"
 1062      7400
 1063              	.LASF1:
 1064 00c5 756E7369 		.ascii	"unsigned char\000"
 1064      676E6564 
 1064      20636861 
 1064      7200
 1065              	.LASF26:
 1066 00d3 49324353 		.ascii	"I2CS_SetCustomInterruptHandler\000"
 1066      5F536574 
 1066      43757374 
 1066      6F6D496E 
 1066      74657272 
 1067              	.LASF5:
 1068 00f2 6C6F6E67 		.ascii	"long unsigned int\000"
 1068      20756E73 
 1068      69676E65 
 1068      6420696E 
 1068      7400
 1069              	.LASF9:
 1070 0104 75696E74 		.ascii	"uint8\000"
 1070      3800
 1071              	.LASF34:
 1072 010a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1072      43313120 
 1072      352E342E 
 1072      31203230 
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 35


 1072      31363036 
 1073 013d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1073      20726576 
 1073      6973696F 
 1073      6E203233 
 1073      37373135 
 1074 0170 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1074      66756E63 
 1074      74696F6E 
 1074      2D736563 
 1074      74696F6E 
 1075              	.LASF12:
 1076 0198 646F7562 		.ascii	"double\000"
 1076      6C6500
 1077              	.LASF27:
 1078 019f 66756E63 		.ascii	"func\000"
 1078      00
 1079              	.LASF22:
 1080 01a4 49324353 		.ascii	"I2CS_SetTxFifoLevel\000"
 1080      5F536574 
 1080      54784669 
 1080      666F4C65 
 1080      76656C00 
 1081              	.LASF18:
 1082 01b8 49324353 		.ascii	"I2CS_Enable\000"
 1082      5F456E61 
 1082      626C6500 
 1083              	.LASF10:
 1084 01c4 75696E74 		.ascii	"uint32\000"
 1084      333200
 1085              	.LASF8:
 1086 01cb 756E7369 		.ascii	"unsigned int\000"
 1086      676E6564 
 1086      20696E74 
 1086      00
 1087              	.LASF35:
 1088 01d8 47656E65 		.ascii	"Generated_Source\\PSoC4\\I2CS.c\000"
 1088      72617465 
 1088      645F536F 
 1088      75726365 
 1088      5C50536F 
 1089              	.LASF7:
 1090 01f6 6C6F6E67 		.ascii	"long long unsigned int\000"
 1090      206C6F6E 
 1090      6720756E 
 1090      7369676E 
 1090      65642069 
 1091              	.LASF28:
 1092 020d 49324353 		.ascii	"I2CS_ScbEnableIntr\000"
 1092      5F536362 
 1092      456E6162 
 1092      6C65496E 
 1092      747200
 1093              	.LASF16:
 1094 0220 73697A65 		.ascii	"sizetype\000"
 1094      74797065 
 1094      00
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\cc5APYLf.s 			page 36


 1095              	.LASF6:
 1096 0229 6C6F6E67 		.ascii	"long long int\000"
 1096      206C6F6E 
 1096      6720696E 
 1096      7400
 1097              	.LASF13:
 1098 0237 63686172 		.ascii	"char\000"
 1098      00
 1099              	.LASF2:
 1100 023c 73686F72 		.ascii	"short int\000"
 1100      7420696E 
 1100      7400
 1101              	.LASF33:
 1102 0246 49324353 		.ascii	"I2CS_customIntrHandler\000"
 1102      5F637573 
 1102      746F6D49 
 1102      6E747248 
 1102      616E646C 
 1103              	.LASF24:
 1104 025d 72784669 		.ascii	"rxFifoCtrl\000"
 1104      666F4374 
 1104      726C00
 1105              	.LASF4:
 1106 0268 6C6F6E67 		.ascii	"long int\000"
 1106      20696E74 
 1106      00
 1107              	.LASF17:
 1108 0271 49324353 		.ascii	"I2CS_Init\000"
 1108      5F496E69 
 1108      7400
 1109              	.LASF15:
 1110 027b 6C6F6E67 		.ascii	"long double\000"
 1110      20646F75 
 1110      626C6500 
 1111              	.LASF0:
 1112 0287 7369676E 		.ascii	"signed char\000"
 1112      65642063 
 1112      68617200 
 1113              	.LASF30:
 1114 0293 49324353 		.ascii	"I2CS_ScbModeStop\000"
 1114      5F536362 
 1114      4D6F6465 
 1114      53746F70 
 1114      00
 1115              	.LASF29:
 1116 02a4 49324353 		.ascii	"I2CS_ScbModePostEnable\000"
 1116      5F536362 
 1116      4D6F6465 
 1116      506F7374 
 1116      456E6162 
 1117              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
