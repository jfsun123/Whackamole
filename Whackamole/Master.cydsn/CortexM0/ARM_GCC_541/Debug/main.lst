ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.main,"ax",%progbits
  20              		.align	2
  21              		.global	main
  22              		.code	16
  23              		.thumb_func
  24              		.type	main, %function
  25              	main:
  26              	.LFB32:
  27              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** MASTER
   3:main.c        **** *******************************************************************************/
   4:main.c        **** 
   5:main.c        **** #include "main.h"
   6:main.c        **** 
   7:main.c        **** 
   8:main.c        **** /*******************************************************************************
   9:main.c        **** * Function Name: main
  10:main.c        **** ********************************************************************************
  11:main.c        **** * Summary:
  12:main.c        **** *  The main function performs the following actions:
  13:main.c        **** *   1. Turns off the RGB LED.
  14:main.c        **** *   2. Starts the I2C master (SCB mode) component.
  15:main.c        **** *   3. Enables global interrupts.
  16:main.c        **** *   4. Sends command and status packets to the slave every 500mS.
  17:main.c        **** *
  18:main.c        **** * Parameters:
  19:main.c        **** *  None
  20:main.c        **** *
  21:main.c        **** * Return:
  22:main.c        **** *  None
  23:main.c        **** *
  24:main.c        **** *******************************************************************************/
  25:main.c        **** int main()
  26:main.c        **** {
  28              		.loc 1 26 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 2


  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  27:main.c        ****     uint8 command = CMD_SET_RED;
  40              		.loc 1 27 0
  41 0006 FB1D     		adds	r3, r7, #7
  42 0008 0122     		movs	r2, #1
  43 000a 1A70     		strb	r2, [r3]
  28:main.c        **** 
  29:main.c        ****     RGB_LED_OFF;
  44              		.loc 1 29 0
  45 000c 0120     		movs	r0, #1
  46 000e FFF7FEFF 		bl	LED_RED_Write
  47 0012 0120     		movs	r0, #1
  48 0014 FFF7FEFF 		bl	LED_GREEN_Write
  30:main.c        **** 
  31:main.c        ****     I2CM_Start();
  49              		.loc 1 31 0
  50 0018 FFF7FEFF 		bl	I2CM_Start
  32:main.c        **** 
  33:main.c        ****     CyGlobalIntEnable;
  51              		.loc 1 33 0
  52              		.syntax divided
  53              	@ 33 "main.c" 1
  54 001c 62B6     		CPSIE   i
  55              	@ 0 "" 2
  56              		.thumb
  57              		.syntax unified
  58              	.L3:
  34:main.c        **** 
  35:main.c        ****     /***************************************************************************
  36:main.c        ****     * Main polling loop
  37:main.c        ****     ***************************************************************************/
  38:main.c        ****     for(;;)
  39:main.c        ****     {
  40:main.c        ****         /* Send packet with command to the slave */
  41:main.c        ****         if (0u == WriteCommandPacket(command))
  59              		.loc 1 41 0
  60 001e FB1D     		adds	r3, r7, #7
  61 0020 1B78     		ldrb	r3, [r3]
  62 0022 1800     		movs	r0, r3
  63 0024 FFF7FEFF 		bl	WriteCommandPacket
  64 0028 031E     		subs	r3, r0, #0
  65 002a F8D1     		bne	.L3
  42:main.c        ****         {
  43:main.c        ****             /* Read response packet from the slave */
  44:main.c        ****             if (0u == ReadStatusPacket())
  66              		.loc 1 44 0
  67 002c FFF7FEFF 		bl	ReadStatusPacket
  68 0030 031E     		subs	r3, r0, #0
  69 0032 F4D1     		bne	.L3
  45:main.c        ****             {
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 3


  46:main.c        ****                 /* Next command to be written */
  47:main.c        ****                 command++;
  70              		.loc 1 47 0
  71 0034 FB1D     		adds	r3, r7, #7
  72 0036 1A78     		ldrb	r2, [r3]
  73 0038 FB1D     		adds	r3, r7, #7
  74 003a 0132     		adds	r2, r2, #1
  75 003c 1A70     		strb	r2, [r3]
  48:main.c        ****                 if (command >= NUM_COLORS)
  76              		.loc 1 48 0
  77 003e FB1D     		adds	r3, r7, #7
  78 0040 1B78     		ldrb	r3, [r3]
  79 0042 072B     		cmp	r3, #7
  80 0044 EBD9     		bls	.L3
  49:main.c        ****                 {
  50:main.c        ****                     command = CMD_SET_OFF;
  81              		.loc 1 50 0
  82 0046 FB1D     		adds	r3, r7, #7
  83 0048 0022     		movs	r2, #0
  84 004a 1A70     		strb	r2, [r3]
  51:main.c        ****                 }
  52:main.c        **** 
  53:main.c        ****                 /* Turn off status LED */
  54:main.c        ****                 //RGB_LED_OFF;
  55:main.c        ****             }
  56:main.c        ****         }
  57:main.c        **** 
  58:main.c        **** //        CyDelay(CMD_TO_CMD_DELAY); /* Delay between commands */
  59:main.c        ****     }
  85              		.loc 1 59 0
  86 004c E7E7     		b	.L3
  87              		.cfi_endproc
  88              	.LFE32:
  89              		.size	main, .-main
  90 004e C046     		.section	.text.WriteCommandPacket,"ax",%progbits
  91              		.align	2
  92              		.global	WriteCommandPacket
  93              		.code	16
  94              		.thumb_func
  95              		.type	WriteCommandPacket, %function
  96              	WriteCommandPacket:
  97              	.LFB33:
  60:main.c        **** }
  61:main.c        **** 
  62:main.c        **** 
  63:main.c        **** /*******************************************************************************
  64:main.c        **** * Function Name: WriteCommandPacket
  65:main.c        **** ********************************************************************************
  66:main.c        **** * Summary:
  67:main.c        **** *  Master initiates the transfer to write command packet into the slave.
  68:main.c        **** *  The status of the transfer is returned.
  69:main.c        **** *
  70:main.c        **** * Parameters:
  71:main.c        **** *  cmd: command to execute. Available commands:
  72:main.c        **** *   - CMD_SET_RED:   set red color of the LED.
  73:main.c        **** *   - CMD_SET_GREEN: set green color of the LED.
  74:main.c        **** *   - CMD_SET_BLUE:  set blue color of the LED.
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 4


  75:main.c        **** *   - CMD_SET_OFF:   turn off the LED.
  76:main.c        **** *
  77:main.c        **** * Return:
  78:main.c        **** *  Returns status of the transfer. There are two statuses
  79:main.c        **** *  - TRANSFER_CMPLT: transfer completed successfully.
  80:main.c        **** *  - TRANSFER_ERROR: the error occurred while transfer.
  81:main.c        **** *
  82:main.c        **** *******************************************************************************/
  83:main.c        **** uint32 WriteCommandPacket(uint8 cmd)
  84:main.c        **** {
  98              		.loc 1 84 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 16
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102 0000 80B5     		push	{r7, lr}
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 7, -8
 105              		.cfi_offset 14, -4
 106 0002 84B0     		sub	sp, sp, #16
 107              		.cfi_def_cfa_offset 24
 108 0004 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 110 0006 0200     		movs	r2, r0
 111 0008 FB1D     		adds	r3, r7, #7
 112 000a 1A70     		strb	r2, [r3]
  85:main.c        ****     uint8  buffer[BUFFER_SIZE];
  86:main.c        ****     uint32 status = TRANSFER_ERROR;
 113              		.loc 1 86 0
 114 000c FF23     		movs	r3, #255
 115 000e FB60     		str	r3, [r7, #12]
  87:main.c        **** 
  88:main.c        ****     /* Initialize buffer with packet */
  89:main.c        ****     buffer[PACKET_SOP_POS] = PACKET_SOP;
 116              		.loc 1 89 0
 117 0010 0823     		movs	r3, #8
 118 0012 FB18     		adds	r3, r7, r3
 119 0014 0122     		movs	r2, #1
 120 0016 1A70     		strb	r2, [r3]
  90:main.c        ****     buffer[PACKET_CMD_POS] = cmd;
 121              		.loc 1 90 0
 122 0018 0823     		movs	r3, #8
 123 001a FB18     		adds	r3, r7, r3
 124 001c FA1D     		adds	r2, r7, #7
 125 001e 1278     		ldrb	r2, [r2]
 126 0020 5A70     		strb	r2, [r3, #1]
  91:main.c        ****     buffer[PACKET_EOP_POS] = PACKET_EOP;
 127              		.loc 1 91 0
 128 0022 0823     		movs	r3, #8
 129 0024 FB18     		adds	r3, r7, r3
 130 0026 1722     		movs	r2, #23
 131 0028 9A70     		strb	r2, [r3, #2]
  92:main.c        **** 
  93:main.c        ****     (void) I2CM_I2CMasterWriteBuf(I2C_SLAVE_ADDR, buffer, PACKET_SIZE, \
 132              		.loc 1 93 0
 133 002a 0823     		movs	r3, #8
 134 002c F918     		adds	r1, r7, r3
 135 002e 0023     		movs	r3, #0
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 5


 136 0030 0322     		movs	r2, #3
 137 0032 0820     		movs	r0, #8
 138 0034 FFF7FEFF 		bl	I2CM_I2CMasterWriteBuf
  94:main.c        ****                                   I2CM_I2C_MODE_COMPLETE_XFER);
  95:main.c        **** 
  96:main.c        ****     /* Waits until master completes write transfer */
  97:main.c        ****     while (0u == (I2CM_I2CMasterStatus() & I2CM_I2C_MSTAT_WR_CMPLT))
 139              		.loc 1 97 0
 140 0038 C046     		nop
 141              	.L5:
 142              		.loc 1 97 0 is_stmt 0 discriminator 1
 143 003a FFF7FEFF 		bl	I2CM_I2CMasterStatus
 144 003e 0200     		movs	r2, r0
 145 0040 0223     		movs	r3, #2
 146 0042 1340     		ands	r3, r2
 147 0044 F9D0     		beq	.L5
  98:main.c        ****     {
  99:main.c        ****     }
 100:main.c        **** 
 101:main.c        ****     /* Displays transfer status */
 102:main.c        ****     if (0u == (I2CM_I2C_MSTAT_ERR_XFER & I2CM_I2CMasterStatus()))
 148              		.loc 1 102 0 is_stmt 1
 149 0046 FFF7FEFF 		bl	I2CM_I2CMasterStatus
 150 004a 0200     		movs	r2, r0
 151 004c 8023     		movs	r3, #128
 152 004e 9B00     		lsls	r3, r3, #2
 153 0050 1340     		ands	r3, r2
 154 0052 0CD1     		bne	.L6
 103:main.c        ****     {
 104:main.c        ****         /* Check if all bytes was written */
 105:main.c        ****         if (I2CM_I2CMasterGetWriteBufSize() == BUFFER_SIZE)
 155              		.loc 1 105 0
 156 0054 FFF7FEFF 		bl	I2CM_I2CMasterGetWriteBufSize
 157 0058 0300     		movs	r3, r0
 158 005a 032B     		cmp	r3, #3
 159 005c 07D1     		bne	.L6
 106:main.c        ****         {
 107:main.c        ****             RGB_LED_ON_GREEN;
 160              		.loc 1 107 0
 161 005e 0120     		movs	r0, #1
 162 0060 FFF7FEFF 		bl	LED_RED_Write
 163 0064 0020     		movs	r0, #0
 164 0066 FFF7FEFF 		bl	LED_GREEN_Write
 108:main.c        ****             status = TRANSFER_CMPLT;
 165              		.loc 1 108 0
 166 006a 0023     		movs	r3, #0
 167 006c FB60     		str	r3, [r7, #12]
 168              	.L6:
 109:main.c        ****         }
 110:main.c        ****     }
 111:main.c        ****     else
 112:main.c        ****     {
 113:main.c        **** //        RGB_LED_ON_RED;
 114:main.c        ****     }
 115:main.c        **** 
 116:main.c        ****     (void) I2CM_I2CMasterClearStatus();
 169              		.loc 1 116 0
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 6


 170 006e FFF7FEFF 		bl	I2CM_I2CMasterClearStatus
 117:main.c        **** 
 118:main.c        ****     return (status);
 171              		.loc 1 118 0
 172 0072 FB68     		ldr	r3, [r7, #12]
 119:main.c        **** }
 173              		.loc 1 119 0
 174 0074 1800     		movs	r0, r3
 175 0076 BD46     		mov	sp, r7
 176 0078 04B0     		add	sp, sp, #16
 177              		@ sp needed
 178 007a 80BD     		pop	{r7, pc}
 179              		.cfi_endproc
 180              	.LFE33:
 181              		.size	WriteCommandPacket, .-WriteCommandPacket
 182              		.section	.text.ReadStatusPacket,"ax",%progbits
 183              		.align	2
 184              		.global	ReadStatusPacket
 185              		.code	16
 186              		.thumb_func
 187              		.type	ReadStatusPacket, %function
 188              	ReadStatusPacket:
 189              	.LFB34:
 120:main.c        **** 
 121:main.c        **** 
 122:main.c        **** /*******************************************************************************
 123:main.c        **** * Function Name: ReadStatusPacket
 124:main.c        **** ********************************************************************************
 125:main.c        **** * Summary:
 126:main.c        **** *  Master initiates the transfer to read status packet from the slave.
 127:main.c        **** *  The status of the transfer is returned.
 128:main.c        **** *
 129:main.c        **** * Parameters:
 130:main.c        **** *  None
 131:main.c        **** *
 132:main.c        **** * Return:
 133:main.c        **** *  Returns status of the transfer. There are two statuses
 134:main.c        **** *  - TRANSFER_CMPLT: transfer completed successfully.
 135:main.c        **** *  - TRANSFER_ERROR: the error occurred while transfer.
 136:main.c        **** *
 137:main.c        **** *******************************************************************************/
 138:main.c        **** uint32 ReadStatusPacket(void)
 139:main.c        **** {
 190              		.loc 1 139 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 8
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 80B5     		push	{r7, lr}
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 82B0     		sub	sp, sp, #8
 199              		.cfi_def_cfa_offset 16
 200 0004 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
 140:main.c        ****     uint8  buffer[BUFFER_SIZE];
 141:main.c        ****     uint32 status = TRANSFER_ERROR;
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 7


 202              		.loc 1 141 0
 203 0006 FF23     		movs	r3, #255
 204 0008 7B60     		str	r3, [r7, #4]
 142:main.c        **** 
 143:main.c        ****     (void) I2CM_I2CMasterReadBuf(I2C_SLAVE_ADDR, buffer, PACKET_SIZE, \
 205              		.loc 1 143 0
 206 000a 3900     		movs	r1, r7
 207 000c 0023     		movs	r3, #0
 208 000e 0322     		movs	r2, #3
 209 0010 0820     		movs	r0, #8
 210 0012 FFF7FEFF 		bl	I2CM_I2CMasterReadBuf
 144:main.c        ****                                  I2CM_I2C_MODE_COMPLETE_XFER);
 145:main.c        **** 
 146:main.c        ****     /* Waits until master complete read transfer */
 147:main.c        ****     while (0u == (I2CM_I2CMasterStatus() & I2CM_I2C_MSTAT_RD_CMPLT))
 211              		.loc 1 147 0
 212 0016 C046     		nop
 213              	.L10:
 214              		.loc 1 147 0 is_stmt 0 discriminator 1
 215 0018 FFF7FEFF 		bl	I2CM_I2CMasterStatus
 216 001c 0200     		movs	r2, r0
 217 001e 0123     		movs	r3, #1
 218 0020 1340     		ands	r3, r2
 219 0022 F9D0     		beq	.L10
 148:main.c        ****     {
 149:main.c        ****     }
 150:main.c        **** 
 151:main.c        ****     /* Displays transfer status */
 152:main.c        ****     if (0u == (I2CM_I2C_MSTAT_ERR_XFER & I2CM_I2CMasterStatus()))
 220              		.loc 1 152 0 is_stmt 1
 221 0024 FFF7FEFF 		bl	I2CM_I2CMasterStatus
 222 0028 0200     		movs	r2, r0
 223 002a 8023     		movs	r3, #128
 224 002c 9B00     		lsls	r3, r3, #2
 225 002e 1340     		ands	r3, r2
 226 0030 20D1     		bne	.L11
 153:main.c        ****     {
 154:main.c        ****         /* Check packet structure */
 155:main.c        ****         if ((I2CM_I2CMasterGetReadBufSize() == BUFFER_SIZE) &&
 227              		.loc 1 155 0
 228 0032 FFF7FEFF 		bl	I2CM_I2CMasterGetReadBufSize
 229 0036 0300     		movs	r3, r0
 230 0038 032B     		cmp	r3, #3
 231 003a 23D1     		bne	.L14
 156:main.c        ****             (PACKET_SOP == buffer[PACKET_SOP_POS]) &&
 232              		.loc 1 156 0 discriminator 1
 233 003c 3B00     		movs	r3, r7
 234 003e 1B78     		ldrb	r3, [r3]
 155:main.c        ****             (PACKET_SOP == buffer[PACKET_SOP_POS]) &&
 235              		.loc 1 155 0 discriminator 1
 236 0040 012B     		cmp	r3, #1
 237 0042 1FD1     		bne	.L14
 157:main.c        ****             (PACKET_EOP == buffer[PACKET_EOP_POS]))
 238              		.loc 1 157 0
 239 0044 3B00     		movs	r3, r7
 240 0046 9B78     		ldrb	r3, [r3, #2]
 156:main.c        ****             (PACKET_SOP == buffer[PACKET_SOP_POS]) &&
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 8


 241              		.loc 1 156 0
 242 0048 172B     		cmp	r3, #23
 243 004a 1BD1     		bne	.L14
 158:main.c        ****         {
 159:main.c        ****             /* Check packet status */
 160:main.c        ****             if (100 == buffer[PACKET_STS_POS]) // STS_CMD_DONE
 244              		.loc 1 160 0
 245 004c 3B00     		movs	r3, r7
 246 004e 5B78     		ldrb	r3, [r3, #1]
 247 0050 642B     		cmp	r3, #100
 248 0052 08D1     		bne	.L13
 161:main.c        ****             {
 162:main.c        ****                 RGB_LED_ON_GREEN;
 249              		.loc 1 162 0
 250 0054 0120     		movs	r0, #1
 251 0056 FFF7FEFF 		bl	LED_RED_Write
 252 005a 0020     		movs	r0, #0
 253 005c FFF7FEFF 		bl	LED_GREEN_Write
 163:main.c        ****                 status = TRANSFER_CMPLT;
 254              		.loc 1 163 0
 255 0060 0023     		movs	r3, #0
 256 0062 7B60     		str	r3, [r7, #4]
 257 0064 0EE0     		b	.L14
 258              	.L13:
 164:main.c        ****             }
 165:main.c        ****             else{ //this used to not be here
 166:main.c        ****                 RGB_LED_OFF;
 259              		.loc 1 166 0
 260 0066 0120     		movs	r0, #1
 261 0068 FFF7FEFF 		bl	LED_RED_Write
 262 006c 0120     		movs	r0, #1
 263 006e FFF7FEFF 		bl	LED_GREEN_Write
 264 0072 07E0     		b	.L14
 265              	.L11:
 167:main.c        ****             }
 168:main.c        ****         }
 169:main.c        ****     }
 170:main.c        ****     else
 171:main.c        ****     {
 172:main.c        ****         RGB_LED_ON_RED;
 266              		.loc 1 172 0
 267 0074 0020     		movs	r0, #0
 268 0076 FFF7FEFF 		bl	LED_RED_Write
 269 007a 0120     		movs	r0, #1
 270 007c FFF7FEFF 		bl	LED_GREEN_Write
 173:main.c        ****         status = TRANSFER_ERROR;
 271              		.loc 1 173 0
 272 0080 FF23     		movs	r3, #255
 273 0082 7B60     		str	r3, [r7, #4]
 274              	.L14:
 174:main.c        ****     }
 175:main.c        **** 
 176:main.c        ****     (void) I2CM_I2CMasterClearStatus();
 275              		.loc 1 176 0
 276 0084 FFF7FEFF 		bl	I2CM_I2CMasterClearStatus
 177:main.c        **** 
 178:main.c        ****     return (status);
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 9


 277              		.loc 1 178 0
 278 0088 7B68     		ldr	r3, [r7, #4]
 179:main.c        **** }
 279              		.loc 1 179 0
 280 008a 1800     		movs	r0, r3
 281 008c BD46     		mov	sp, r7
 282 008e 02B0     		add	sp, sp, #8
 283              		@ sp needed
 284 0090 80BD     		pop	{r7, pc}
 285              		.cfi_endproc
 286              	.LFE34:
 287              		.size	ReadStatusPacket, .-ReadStatusPacket
 288 0092 C046     		.text
 289              	.Letext0:
 290              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 291              		.file 3 "main.h"
 292              		.section	.debug_info,"",%progbits
 293              	.Ldebug_info0:
 294 0000 A0010000 		.4byte	0x1a0
 295 0004 0400     		.2byte	0x4
 296 0006 00000000 		.4byte	.Ldebug_abbrev0
 297 000a 04       		.byte	0x4
 298 000b 01       		.uleb128 0x1
 299 000c 56010000 		.4byte	.LASF31
 300 0010 0C       		.byte	0xc
 301 0011 12020000 		.4byte	.LASF32
 302 0015 BF000000 		.4byte	.LASF33
 303 0019 00000000 		.4byte	.Ldebug_ranges0+0
 304 001d 00000000 		.4byte	0
 305 0021 00000000 		.4byte	.Ldebug_line0
 306 0025 02       		.uleb128 0x2
 307 0026 01       		.byte	0x1
 308 0027 06       		.byte	0x6
 309 0028 56020000 		.4byte	.LASF0
 310 002c 02       		.uleb128 0x2
 311 002d 01       		.byte	0x1
 312 002e 08       		.byte	0x8
 313 002f 2A010000 		.4byte	.LASF1
 314 0033 02       		.uleb128 0x2
 315 0034 02       		.byte	0x2
 316 0035 05       		.byte	0x5
 317 0036 1E020000 		.4byte	.LASF2
 318 003a 02       		.uleb128 0x2
 319 003b 02       		.byte	0x2
 320 003c 07       		.byte	0x7
 321 003d 31000000 		.4byte	.LASF3
 322 0041 02       		.uleb128 0x2
 323 0042 04       		.byte	0x4
 324 0043 05       		.byte	0x5
 325 0044 3A020000 		.4byte	.LASF4
 326 0048 02       		.uleb128 0x2
 327 0049 04       		.byte	0x4
 328 004a 07       		.byte	0x7
 329 004b A7000000 		.4byte	.LASF5
 330 004f 02       		.uleb128 0x2
 331 0050 08       		.byte	0x8
 332 0051 05       		.byte	0x5
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 10


 333 0052 04020000 		.4byte	.LASF6
 334 0056 02       		.uleb128 0x2
 335 0057 08       		.byte	0x8
 336 0058 07       		.byte	0x7
 337 0059 E4010000 		.4byte	.LASF7
 338 005d 03       		.uleb128 0x3
 339 005e 04       		.byte	0x4
 340 005f 05       		.byte	0x5
 341 0060 696E7400 		.ascii	"int\000"
 342 0064 02       		.uleb128 0x2
 343 0065 04       		.byte	0x4
 344 0066 07       		.byte	0x7
 345 0067 38010000 		.4byte	.LASF8
 346 006b 04       		.uleb128 0x4
 347 006c B9000000 		.4byte	.LASF9
 348 0070 02       		.byte	0x2
 349 0071 D201     		.2byte	0x1d2
 350 0073 2C000000 		.4byte	0x2c
 351 0077 04       		.uleb128 0x4
 352 0078 1C010000 		.4byte	.LASF10
 353 007c 02       		.byte	0x2
 354 007d D301     		.2byte	0x1d3
 355 007f 3A000000 		.4byte	0x3a
 356 0083 04       		.uleb128 0x4
 357 0084 23010000 		.4byte	.LASF11
 358 0088 02       		.byte	0x2
 359 0089 D401     		.2byte	0x1d4
 360 008b 48000000 		.4byte	0x48
 361 008f 02       		.uleb128 0x2
 362 0090 04       		.byte	0x4
 363 0091 04       		.byte	0x4
 364 0092 82000000 		.4byte	.LASF12
 365 0096 02       		.uleb128 0x2
 366 0097 08       		.byte	0x8
 367 0098 04       		.byte	0x4
 368 0099 10010000 		.4byte	.LASF13
 369 009d 02       		.uleb128 0x2
 370 009e 01       		.byte	0x1
 371 009f 08       		.byte	0x8
 372 00a0 19020000 		.4byte	.LASF14
 373 00a4 02       		.uleb128 0x2
 374 00a5 08       		.byte	0x8
 375 00a6 04       		.byte	0x4
 376 00a7 4A020000 		.4byte	.LASF15
 377 00ab 02       		.uleb128 0x2
 378 00ac 04       		.byte	0x4
 379 00ad 07       		.byte	0x7
 380 00ae FB010000 		.4byte	.LASF16
 381 00b2 05       		.uleb128 0x5
 382 00b3 01       		.byte	0x1
 383 00b4 2C000000 		.4byte	0x2c
 384 00b8 03       		.byte	0x3
 385 00b9 43       		.byte	0x43
 386 00ba F5000000 		.4byte	0xf5
 387 00be 06       		.uleb128 0x6
 388 00bf 25000000 		.4byte	.LASF17
 389 00c3 00       		.byte	0
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 11


 390 00c4 06       		.uleb128 0x6
 391 00c5 88000000 		.4byte	.LASF18
 392 00c9 01       		.byte	0x1
 393 00ca 06       		.uleb128 0x6
 394 00cb 44000000 		.4byte	.LASF19
 395 00cf 02       		.byte	0x2
 396 00d0 06       		.uleb128 0x6
 397 00d1 03010000 		.4byte	.LASF20
 398 00d5 03       		.byte	0x3
 399 00d6 06       		.uleb128 0x6
 400 00d7 00000000 		.4byte	.LASF21
 401 00db 04       		.byte	0x4
 402 00dc 06       		.uleb128 0x6
 403 00dd 45010000 		.4byte	.LASF22
 404 00e1 05       		.byte	0x5
 405 00e2 06       		.uleb128 0x6
 406 00e3 12000000 		.4byte	.LASF23
 407 00e7 06       		.byte	0x6
 408 00e8 06       		.uleb128 0x6
 409 00e9 5A000000 		.4byte	.LASF24
 410 00ed 07       		.byte	0x7
 411 00ee 06       		.uleb128 0x6
 412 00ef 2F020000 		.4byte	.LASF25
 413 00f3 08       		.byte	0x8
 414 00f4 00       		.byte	0
 415 00f5 07       		.uleb128 0x7
 416 00f6 17010000 		.4byte	.LASF29
 417 00fa 01       		.byte	0x1
 418 00fb 19       		.byte	0x19
 419 00fc 5D000000 		.4byte	0x5d
 420 0100 00000000 		.4byte	.LFB32
 421 0104 4E000000 		.4byte	.LFE32-.LFB32
 422 0108 01       		.uleb128 0x1
 423 0109 9C       		.byte	0x9c
 424 010a 1D010000 		.4byte	0x11d
 425 010e 08       		.uleb128 0x8
 426 010f 52000000 		.4byte	.LASF26
 427 0113 01       		.byte	0x1
 428 0114 1B       		.byte	0x1b
 429 0115 6B000000 		.4byte	0x6b
 430 0119 02       		.uleb128 0x2
 431 011a 91       		.byte	0x91
 432 011b 77       		.sleb128 -9
 433 011c 00       		.byte	0
 434 011d 09       		.uleb128 0x9
 435 011e 94000000 		.4byte	.LASF34
 436 0122 01       		.byte	0x1
 437 0123 53       		.byte	0x53
 438 0124 83000000 		.4byte	0x83
 439 0128 00000000 		.4byte	.LFB33
 440 012c 7C000000 		.4byte	.LFE33-.LFB33
 441 0130 01       		.uleb128 0x1
 442 0131 9C       		.byte	0x9c
 443 0132 61010000 		.4byte	0x161
 444 0136 0A       		.uleb128 0xa
 445 0137 636D6400 		.ascii	"cmd\000"
 446 013b 01       		.byte	0x1
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 12


 447 013c 53       		.byte	0x53
 448 013d 6B000000 		.4byte	0x6b
 449 0141 02       		.uleb128 0x2
 450 0142 91       		.byte	0x91
 451 0143 6F       		.sleb128 -17
 452 0144 08       		.uleb128 0x8
 453 0145 28020000 		.4byte	.LASF27
 454 0149 01       		.byte	0x1
 455 014a 55       		.byte	0x55
 456 014b 61010000 		.4byte	0x161
 457 014f 02       		.uleb128 0x2
 458 0150 91       		.byte	0x91
 459 0151 70       		.sleb128 -16
 460 0152 08       		.uleb128 0x8
 461 0153 43020000 		.4byte	.LASF28
 462 0157 01       		.byte	0x1
 463 0158 56       		.byte	0x56
 464 0159 83000000 		.4byte	0x83
 465 015d 02       		.uleb128 0x2
 466 015e 91       		.byte	0x91
 467 015f 74       		.sleb128 -12
 468 0160 00       		.byte	0
 469 0161 0B       		.uleb128 0xb
 470 0162 6B000000 		.4byte	0x6b
 471 0166 71010000 		.4byte	0x171
 472 016a 0C       		.uleb128 0xc
 473 016b AB000000 		.4byte	0xab
 474 016f 02       		.byte	0x2
 475 0170 00       		.byte	0
 476 0171 0D       		.uleb128 0xd
 477 0172 71000000 		.4byte	.LASF30
 478 0176 01       		.byte	0x1
 479 0177 8A       		.byte	0x8a
 480 0178 83000000 		.4byte	0x83
 481 017c 00000000 		.4byte	.LFB34
 482 0180 92000000 		.4byte	.LFE34-.LFB34
 483 0184 01       		.uleb128 0x1
 484 0185 9C       		.byte	0x9c
 485 0186 08       		.uleb128 0x8
 486 0187 28020000 		.4byte	.LASF27
 487 018b 01       		.byte	0x1
 488 018c 8C       		.byte	0x8c
 489 018d 61010000 		.4byte	0x161
 490 0191 02       		.uleb128 0x2
 491 0192 91       		.byte	0x91
 492 0193 70       		.sleb128 -16
 493 0194 08       		.uleb128 0x8
 494 0195 43020000 		.4byte	.LASF28
 495 0199 01       		.byte	0x1
 496 019a 8D       		.byte	0x8d
 497 019b 83000000 		.4byte	0x83
 498 019f 02       		.uleb128 0x2
 499 01a0 91       		.byte	0x91
 500 01a1 74       		.sleb128 -12
 501 01a2 00       		.byte	0
 502 01a3 00       		.byte	0
 503              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 13


 504              	.Ldebug_abbrev0:
 505 0000 01       		.uleb128 0x1
 506 0001 11       		.uleb128 0x11
 507 0002 01       		.byte	0x1
 508 0003 25       		.uleb128 0x25
 509 0004 0E       		.uleb128 0xe
 510 0005 13       		.uleb128 0x13
 511 0006 0B       		.uleb128 0xb
 512 0007 03       		.uleb128 0x3
 513 0008 0E       		.uleb128 0xe
 514 0009 1B       		.uleb128 0x1b
 515 000a 0E       		.uleb128 0xe
 516 000b 55       		.uleb128 0x55
 517 000c 17       		.uleb128 0x17
 518 000d 11       		.uleb128 0x11
 519 000e 01       		.uleb128 0x1
 520 000f 10       		.uleb128 0x10
 521 0010 17       		.uleb128 0x17
 522 0011 00       		.byte	0
 523 0012 00       		.byte	0
 524 0013 02       		.uleb128 0x2
 525 0014 24       		.uleb128 0x24
 526 0015 00       		.byte	0
 527 0016 0B       		.uleb128 0xb
 528 0017 0B       		.uleb128 0xb
 529 0018 3E       		.uleb128 0x3e
 530 0019 0B       		.uleb128 0xb
 531 001a 03       		.uleb128 0x3
 532 001b 0E       		.uleb128 0xe
 533 001c 00       		.byte	0
 534 001d 00       		.byte	0
 535 001e 03       		.uleb128 0x3
 536 001f 24       		.uleb128 0x24
 537 0020 00       		.byte	0
 538 0021 0B       		.uleb128 0xb
 539 0022 0B       		.uleb128 0xb
 540 0023 3E       		.uleb128 0x3e
 541 0024 0B       		.uleb128 0xb
 542 0025 03       		.uleb128 0x3
 543 0026 08       		.uleb128 0x8
 544 0027 00       		.byte	0
 545 0028 00       		.byte	0
 546 0029 04       		.uleb128 0x4
 547 002a 16       		.uleb128 0x16
 548 002b 00       		.byte	0
 549 002c 03       		.uleb128 0x3
 550 002d 0E       		.uleb128 0xe
 551 002e 3A       		.uleb128 0x3a
 552 002f 0B       		.uleb128 0xb
 553 0030 3B       		.uleb128 0x3b
 554 0031 05       		.uleb128 0x5
 555 0032 49       		.uleb128 0x49
 556 0033 13       		.uleb128 0x13
 557 0034 00       		.byte	0
 558 0035 00       		.byte	0
 559 0036 05       		.uleb128 0x5
 560 0037 04       		.uleb128 0x4
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 14


 561 0038 01       		.byte	0x1
 562 0039 0B       		.uleb128 0xb
 563 003a 0B       		.uleb128 0xb
 564 003b 49       		.uleb128 0x49
 565 003c 13       		.uleb128 0x13
 566 003d 3A       		.uleb128 0x3a
 567 003e 0B       		.uleb128 0xb
 568 003f 3B       		.uleb128 0x3b
 569 0040 0B       		.uleb128 0xb
 570 0041 01       		.uleb128 0x1
 571 0042 13       		.uleb128 0x13
 572 0043 00       		.byte	0
 573 0044 00       		.byte	0
 574 0045 06       		.uleb128 0x6
 575 0046 28       		.uleb128 0x28
 576 0047 00       		.byte	0
 577 0048 03       		.uleb128 0x3
 578 0049 0E       		.uleb128 0xe
 579 004a 1C       		.uleb128 0x1c
 580 004b 0B       		.uleb128 0xb
 581 004c 00       		.byte	0
 582 004d 00       		.byte	0
 583 004e 07       		.uleb128 0x7
 584 004f 2E       		.uleb128 0x2e
 585 0050 01       		.byte	0x1
 586 0051 3F       		.uleb128 0x3f
 587 0052 19       		.uleb128 0x19
 588 0053 03       		.uleb128 0x3
 589 0054 0E       		.uleb128 0xe
 590 0055 3A       		.uleb128 0x3a
 591 0056 0B       		.uleb128 0xb
 592 0057 3B       		.uleb128 0x3b
 593 0058 0B       		.uleb128 0xb
 594 0059 49       		.uleb128 0x49
 595 005a 13       		.uleb128 0x13
 596 005b 11       		.uleb128 0x11
 597 005c 01       		.uleb128 0x1
 598 005d 12       		.uleb128 0x12
 599 005e 06       		.uleb128 0x6
 600 005f 40       		.uleb128 0x40
 601 0060 18       		.uleb128 0x18
 602 0061 9642     		.uleb128 0x2116
 603 0063 19       		.uleb128 0x19
 604 0064 01       		.uleb128 0x1
 605 0065 13       		.uleb128 0x13
 606 0066 00       		.byte	0
 607 0067 00       		.byte	0
 608 0068 08       		.uleb128 0x8
 609 0069 34       		.uleb128 0x34
 610 006a 00       		.byte	0
 611 006b 03       		.uleb128 0x3
 612 006c 0E       		.uleb128 0xe
 613 006d 3A       		.uleb128 0x3a
 614 006e 0B       		.uleb128 0xb
 615 006f 3B       		.uleb128 0x3b
 616 0070 0B       		.uleb128 0xb
 617 0071 49       		.uleb128 0x49
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 15


 618 0072 13       		.uleb128 0x13
 619 0073 02       		.uleb128 0x2
 620 0074 18       		.uleb128 0x18
 621 0075 00       		.byte	0
 622 0076 00       		.byte	0
 623 0077 09       		.uleb128 0x9
 624 0078 2E       		.uleb128 0x2e
 625 0079 01       		.byte	0x1
 626 007a 3F       		.uleb128 0x3f
 627 007b 19       		.uleb128 0x19
 628 007c 03       		.uleb128 0x3
 629 007d 0E       		.uleb128 0xe
 630 007e 3A       		.uleb128 0x3a
 631 007f 0B       		.uleb128 0xb
 632 0080 3B       		.uleb128 0x3b
 633 0081 0B       		.uleb128 0xb
 634 0082 27       		.uleb128 0x27
 635 0083 19       		.uleb128 0x19
 636 0084 49       		.uleb128 0x49
 637 0085 13       		.uleb128 0x13
 638 0086 11       		.uleb128 0x11
 639 0087 01       		.uleb128 0x1
 640 0088 12       		.uleb128 0x12
 641 0089 06       		.uleb128 0x6
 642 008a 40       		.uleb128 0x40
 643 008b 18       		.uleb128 0x18
 644 008c 9642     		.uleb128 0x2116
 645 008e 19       		.uleb128 0x19
 646 008f 01       		.uleb128 0x1
 647 0090 13       		.uleb128 0x13
 648 0091 00       		.byte	0
 649 0092 00       		.byte	0
 650 0093 0A       		.uleb128 0xa
 651 0094 05       		.uleb128 0x5
 652 0095 00       		.byte	0
 653 0096 03       		.uleb128 0x3
 654 0097 08       		.uleb128 0x8
 655 0098 3A       		.uleb128 0x3a
 656 0099 0B       		.uleb128 0xb
 657 009a 3B       		.uleb128 0x3b
 658 009b 0B       		.uleb128 0xb
 659 009c 49       		.uleb128 0x49
 660 009d 13       		.uleb128 0x13
 661 009e 02       		.uleb128 0x2
 662 009f 18       		.uleb128 0x18
 663 00a0 00       		.byte	0
 664 00a1 00       		.byte	0
 665 00a2 0B       		.uleb128 0xb
 666 00a3 01       		.uleb128 0x1
 667 00a4 01       		.byte	0x1
 668 00a5 49       		.uleb128 0x49
 669 00a6 13       		.uleb128 0x13
 670 00a7 01       		.uleb128 0x1
 671 00a8 13       		.uleb128 0x13
 672 00a9 00       		.byte	0
 673 00aa 00       		.byte	0
 674 00ab 0C       		.uleb128 0xc
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 16


 675 00ac 21       		.uleb128 0x21
 676 00ad 00       		.byte	0
 677 00ae 49       		.uleb128 0x49
 678 00af 13       		.uleb128 0x13
 679 00b0 2F       		.uleb128 0x2f
 680 00b1 0B       		.uleb128 0xb
 681 00b2 00       		.byte	0
 682 00b3 00       		.byte	0
 683 00b4 0D       		.uleb128 0xd
 684 00b5 2E       		.uleb128 0x2e
 685 00b6 01       		.byte	0x1
 686 00b7 3F       		.uleb128 0x3f
 687 00b8 19       		.uleb128 0x19
 688 00b9 03       		.uleb128 0x3
 689 00ba 0E       		.uleb128 0xe
 690 00bb 3A       		.uleb128 0x3a
 691 00bc 0B       		.uleb128 0xb
 692 00bd 3B       		.uleb128 0x3b
 693 00be 0B       		.uleb128 0xb
 694 00bf 27       		.uleb128 0x27
 695 00c0 19       		.uleb128 0x19
 696 00c1 49       		.uleb128 0x49
 697 00c2 13       		.uleb128 0x13
 698 00c3 11       		.uleb128 0x11
 699 00c4 01       		.uleb128 0x1
 700 00c5 12       		.uleb128 0x12
 701 00c6 06       		.uleb128 0x6
 702 00c7 40       		.uleb128 0x40
 703 00c8 18       		.uleb128 0x18
 704 00c9 9642     		.uleb128 0x2116
 705 00cb 19       		.uleb128 0x19
 706 00cc 00       		.byte	0
 707 00cd 00       		.byte	0
 708 00ce 00       		.byte	0
 709              		.section	.debug_aranges,"",%progbits
 710 0000 2C000000 		.4byte	0x2c
 711 0004 0200     		.2byte	0x2
 712 0006 00000000 		.4byte	.Ldebug_info0
 713 000a 04       		.byte	0x4
 714 000b 00       		.byte	0
 715 000c 0000     		.2byte	0
 716 000e 0000     		.2byte	0
 717 0010 00000000 		.4byte	.LFB32
 718 0014 4E000000 		.4byte	.LFE32-.LFB32
 719 0018 00000000 		.4byte	.LFB33
 720 001c 7C000000 		.4byte	.LFE33-.LFB33
 721 0020 00000000 		.4byte	.LFB34
 722 0024 92000000 		.4byte	.LFE34-.LFB34
 723 0028 00000000 		.4byte	0
 724 002c 00000000 		.4byte	0
 725              		.section	.debug_ranges,"",%progbits
 726              	.Ldebug_ranges0:
 727 0000 00000000 		.4byte	.LFB32
 728 0004 4E000000 		.4byte	.LFE32
 729 0008 00000000 		.4byte	.LFB33
 730 000c 7C000000 		.4byte	.LFE33
 731 0010 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 17


 732 0014 92000000 		.4byte	.LFE34
 733 0018 00000000 		.4byte	0
 734 001c 00000000 		.4byte	0
 735              		.section	.debug_line,"",%progbits
 736              	.Ldebug_line0:
 737 0000 C1000000 		.section	.debug_str,"MS",%progbits,1
 737      02004B00 
 737      00000201 
 737      FB0E0D00 
 737      01010101 
 738              	.LASF21:
 739 0000 434D445F 		.ascii	"CMD_SET_RED_GREEN\000"
 739      5345545F 
 739      5245445F 
 739      47524545 
 739      4E00
 740              	.LASF23:
 741 0012 434D445F 		.ascii	"CMD_SET_GREEN_BLUE\000"
 741      5345545F 
 741      47524545 
 741      4E5F424C 
 741      554500
 742              	.LASF17:
 743 0025 434D445F 		.ascii	"CMD_SET_OFF\000"
 743      5345545F 
 743      4F464600 
 744              	.LASF3:
 745 0031 73686F72 		.ascii	"short unsigned int\000"
 745      7420756E 
 745      7369676E 
 745      65642069 
 745      6E7400
 746              	.LASF19:
 747 0044 434D445F 		.ascii	"CMD_SET_GREEN\000"
 747      5345545F 
 747      47524545 
 747      4E00
 748              	.LASF26:
 749 0052 636F6D6D 		.ascii	"command\000"
 749      616E6400 
 750              	.LASF24:
 751 005a 434D445F 		.ascii	"CMD_SET_RED_GREEN_BLUE\000"
 751      5345545F 
 751      5245445F 
 751      47524545 
 751      4E5F424C 
 752              	.LASF30:
 753 0071 52656164 		.ascii	"ReadStatusPacket\000"
 753      53746174 
 753      75735061 
 753      636B6574 
 753      00
 754              	.LASF12:
 755 0082 666C6F61 		.ascii	"float\000"
 755      7400
 756              	.LASF18:
 757 0088 434D445F 		.ascii	"CMD_SET_RED\000"
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 18


 757      5345545F 
 757      52454400 
 758              	.LASF34:
 759 0094 57726974 		.ascii	"WriteCommandPacket\000"
 759      65436F6D 
 759      6D616E64 
 759      5061636B 
 759      657400
 760              	.LASF5:
 761 00a7 6C6F6E67 		.ascii	"long unsigned int\000"
 761      20756E73 
 761      69676E65 
 761      6420696E 
 761      7400
 762              	.LASF9:
 763 00b9 75696E74 		.ascii	"uint8\000"
 763      3800
 764              	.LASF33:
 765 00bf 433A5C55 		.ascii	"C:\\Users\\James Sun\\Documents\\Git\\Whackamole\\W"
 765      73657273 
 765      5C4A616D 
 765      65732053 
 765      756E5C44 
 766 00ec 6861636B 		.ascii	"hackamole\\Master.cydsn\000"
 766      616D6F6C 
 766      655C4D61 
 766      73746572 
 766      2E637964 
 767              	.LASF20:
 768 0103 434D445F 		.ascii	"CMD_SET_BLUE\000"
 768      5345545F 
 768      424C5545 
 768      00
 769              	.LASF13:
 770 0110 646F7562 		.ascii	"double\000"
 770      6C6500
 771              	.LASF29:
 772 0117 6D61696E 		.ascii	"main\000"
 772      00
 773              	.LASF10:
 774 011c 75696E74 		.ascii	"uint16\000"
 774      313600
 775              	.LASF11:
 776 0123 75696E74 		.ascii	"uint32\000"
 776      333200
 777              	.LASF1:
 778 012a 756E7369 		.ascii	"unsigned char\000"
 778      676E6564 
 778      20636861 
 778      7200
 779              	.LASF8:
 780 0138 756E7369 		.ascii	"unsigned int\000"
 780      676E6564 
 780      20696E74 
 780      00
 781              	.LASF22:
 782 0145 434D445F 		.ascii	"CMD_SET_RED_BLUE\000"
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 19


 782      5345545F 
 782      5245445F 
 782      424C5545 
 782      00
 783              	.LASF31:
 784 0156 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 784      43313120 
 784      352E342E 
 784      31203230 
 784      31363036 
 785 0189 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 785      20726576 
 785      6973696F 
 785      6E203233 
 785      37373135 
 786 01bc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 786      66756E63 
 786      74696F6E 
 786      2D736563 
 786      74696F6E 
 787              	.LASF7:
 788 01e4 6C6F6E67 		.ascii	"long long unsigned int\000"
 788      206C6F6E 
 788      6720756E 
 788      7369676E 
 788      65642069 
 789              	.LASF16:
 790 01fb 73697A65 		.ascii	"sizetype\000"
 790      74797065 
 790      00
 791              	.LASF6:
 792 0204 6C6F6E67 		.ascii	"long long int\000"
 792      206C6F6E 
 792      6720696E 
 792      7400
 793              	.LASF32:
 794 0212 6D61696E 		.ascii	"main.c\000"
 794      2E6300
 795              	.LASF14:
 796 0219 63686172 		.ascii	"char\000"
 796      00
 797              	.LASF2:
 798 021e 73686F72 		.ascii	"short int\000"
 798      7420696E 
 798      7400
 799              	.LASF27:
 800 0228 62756666 		.ascii	"buffer\000"
 800      657200
 801              	.LASF25:
 802 022f 4E554D5F 		.ascii	"NUM_COLORS\000"
 802      434F4C4F 
 802      525300
 803              	.LASF4:
 804 023a 6C6F6E67 		.ascii	"long int\000"
 804      20696E74 
 804      00
 805              	.LASF28:
ARM GAS  C:\Users\JAMESS~1\AppData\Local\Temp\ccakYJyy.s 			page 20


 806 0243 73746174 		.ascii	"status\000"
 806      757300
 807              	.LASF15:
 808 024a 6C6F6E67 		.ascii	"long double\000"
 808      20646F75 
 808      626C6500 
 809              	.LASF0:
 810 0256 7369676E 		.ascii	"signed char\000"
 810      65642063 
 810      68617200 
 811              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
